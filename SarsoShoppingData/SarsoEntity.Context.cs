//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SarsoShoppingData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class sarsobizEntities : DbContext
    {
        public sarsobizEntities()
            : base("name=sarsobizEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CourierNo> CourierNos { get; set; }
        public virtual DbSet<CustomerOrder> CustomerOrders { get; set; }
        public virtual DbSet<FeedBack> FeedBacks { get; set; }
        public virtual DbSet<ItemCode> ItemCodes { get; set; }
        public virtual DbSet<M_MemTreeRelation> M_MemTreeRelation { get; set; }
        public virtual DbSet<M_UserMaster> M_UserMaster { get; set; }
        public virtual DbSet<MemberProfile> MemberProfiles { get; set; }
        public virtual DbSet<NewsSubcription> NewsSubcriptions { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<repurchaseproduct> repurchaseproducts { get; set; }
        public virtual DbSet<slog> slogs { get; set; }
        public virtual DbSet<StoreUserList> StoreUserLists { get; set; }
        public virtual DbSet<storeuser> storeusers { get; set; }
        public virtual DbSet<UserList> UserLists { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<Admin_profile_Log> Admin_profile_Log { get; set; }
        public virtual DbSet<AppConsultPayment> AppConsultPayments { get; set; }
        public virtual DbSet<AppMemStsLog> AppMemStsLogs { get; set; }
        public virtual DbSet<BankStatement> BankStatements { get; set; }
        public virtual DbSet<BankStatement_Log> BankStatement_Log { get; set; }
        public virtual DbSet<Bckup_CustomerOrder_20160513> Bckup_CustomerOrder_20160513 { get; set; }
        public virtual DbSet<BlockSBOID> BlockSBOIDs { get; set; }
        public virtual DbSet<BulkMail> BulkMails { get; set; }
        public virtual DbSet<CancelDispOrder> CancelDispOrders { get; set; }
        public virtual DbSet<CancelOrders_Log> CancelOrders_Log { get; set; }
        public virtual DbSet<ChangeDistTOCust> ChangeDistTOCusts { get; set; }
        public virtual DbSet<ChangeMemStsLog> ChangeMemStsLogs { get; set; }
        public virtual DbSet<ChangePasswordLog> ChangePasswordLogs { get; set; }
        public virtual DbSet<ChgAddress> ChgAddresses { get; set; }
        public virtual DbSet<chgbank> chgbanks { get; set; }
        public virtual DbSet<chgdisc> chgdiscs { get; set; }
        public virtual DbSet<ChgNominee> ChgNominees { get; set; }
        public virtual DbSet<ClickShare> ClickShares { get; set; }
        public virtual DbSet<CnF_Inward> CnF_Inward { get; set; }
        public virtual DbSet<CnF_Outward> CnF_Outward { get; set; }
        public virtual DbSet<CnF_StockOrder> CnF_StockOrder { get; set; }
        public virtual DbSet<CodeError> CodeErrors { get; set; }
        public virtual DbSet<CompanyBank> CompanyBanks { get; set; }
        public virtual DbSet<CompanyMeeting> CompanyMeetings { get; set; }
        public virtual DbSet<CouponCode> CouponCodes { get; set; }
        public virtual DbSet<CourierMaster> CourierMasters { get; set; }
        public virtual DbSet<CreateOffer> CreateOffers { get; set; }
        public virtual DbSet<CreditReqReport> CreditReqReports { get; set; }
        public virtual DbSet<CreditRequest_CnF> CreditRequest_CnF { get; set; }
        public virtual DbSet<CreditRequestOnline> CreditRequestOnlines { get; set; }
        public virtual DbSet<deleteTempCart_log> deleteTempCart_log { get; set; }
        public virtual DbSet<DESPBatchExcel> DESPBatchExcels { get; set; }
        public virtual DbSet<DESPBatchItem> DESPBatchItems { get; set; }
        public virtual DbSet<DESPBatchMaster> DESPBatchMasters { get; set; }
        public virtual DbSet<DistshipCancellationRpt> DistshipCancellationRpts { get; set; }
        public virtual DbSet<Downloadfile> Downloadfiles { get; set; }
        public virtual DbSet<EarlRankTree> EarlRankTrees { get; set; }
        public virtual DbSet<EarlRankTreeRelation> EarlRankTreeRelations { get; set; }
        public virtual DbSet<EarlTreasureAch> EarlTreasureAches { get; set; }
        public virtual DbSet<EarlTreasureSlab> EarlTreasureSlabs { get; set; }
        public virtual DbSet<EWallet> EWallets { get; set; }
        public virtual DbSet<EWallet_CnF> EWallet_CnF { get; set; }
        public virtual DbSet<EWalletComm> EWalletComms { get; set; }
        public virtual DbSet<ExtendDatelog> ExtendDatelogs { get; set; }
        public virtual DbSet<FAQ> FAQS { get; set; }
        public virtual DbSet<FDSAbulkmailLog> FDSAbulkmailLogs { get; set; }
        public virtual DbSet<Folder> Folders { get; set; }
        public virtual DbSet<Franchisee> Franchisees { get; set; }
        public virtual DbSet<FreeProductItemCode> FreeProductItemCodes { get; set; }
        public virtual DbSet<Fundwithdrawl> Fundwithdrawls { get; set; }
        public virtual DbSet<GiftChallan> GiftChallans { get; set; }
        public virtual DbSet<GuestRegMember> GuestRegMembers { get; set; }
        public virtual DbSet<GVDComboPackage> GVDComboPackages { get; set; }
        public virtual DbSet<GVDConfirmlog> GVDConfirmlogs { get; set; }
        public virtual DbSet<GVDInstalment> GVDInstalments { get; set; }
        public virtual DbSet<GVDPackImage> GVDPackImages { get; set; }
        public virtual DbSet<GVDPurchaseOnline> GVDPurchaseOnlines { get; set; }
        public virtual DbSet<HeaderImage> HeaderImages { get; set; }
        public virtual DbSet<Inbox> Inboxes { get; set; }
        public virtual DbSet<inserttemplog> inserttemplogs { get; set; }
        public virtual DbSet<InstalPaymentOnline> InstalPaymentOnlines { get; set; }
        public virtual DbSet<InvoiceMaster_CnF> InvoiceMaster_CnF { get; set; }
        public virtual DbSet<InvoiceOffer> InvoiceOffers { get; set; }
        public virtual DbSet<InvPrddetail> InvPrddetails { get; set; }
        public virtual DbSet<Ledger> Ledgers { get; set; }
        public virtual DbSet<Levelid> Levelids { get; set; }
        public virtual DbSet<LevelidsSPR> LevelidsSPRs { get; set; }
        public virtual DbSet<link> links { get; set; }
        public virtual DbSet<linksaccess> linksaccesses { get; set; }
        public virtual DbSet<LiveMenLogic30April> LiveMenLogic30April { get; set; }
        public virtual DbSet<LogOnlineDataEBSNew> LogOnlineDataEBSNews { get; set; }
        public virtual DbSet<LogOnlineDataNew> LogOnlineDataNews { get; set; }
        public virtual DbSet<LogResponse> LogResponses { get; set; }
        public virtual DbSet<M_25KTreasure> M_25KTreasure { get; set; }
        public virtual DbSet<M_DistrictMaster> M_DistrictMaster { get; set; }
        public virtual DbSet<M_MonthlyPayDetail> M_MonthlyPayDetail { get; set; }
        public virtual DbSet<M_MonthWiseBv> M_MonthWiseBv { get; set; }
        public virtual DbSet<M_MonthWiseIncome> M_MonthWiseIncome { get; set; }
        public virtual DbSet<M_NONVCGPV> M_NONVCGPV { get; set; }
        public virtual DbSet<M_NONVCSESSNPV> M_NONVCSESSNPV { get; set; }
        public virtual DbSet<M_PerformanceInc> M_PerformanceInc { get; set; }
        public virtual DbSet<M_RetailProfit> M_RetailProfit { get; set; }
        public virtual DbSet<M_SessWiseBv> M_SessWiseBv { get; set; }
        public virtual DbSet<MA_AndroidAccess> MA_AndroidAccess { get; set; }
        public virtual DbSet<MailLog> MailLogs { get; set; }
        public virtual DbSet<ManualMatch> ManualMatches { get; set; }
        public virtual DbSet<mastermop> mastermops { get; set; }
        public virtual DbSet<mastermop_2000PV_270717> mastermop_2000PV_270717 { get; set; }
        public virtual DbSet<mastermop_280817> mastermop_280817 { get; set; }
        public virtual DbSet<MasterMOP_ManualOrders_Ins> MasterMOP_ManualOrders_Ins { get; set; }
        public virtual DbSet<mastermop_PKGInvChg_150717> mastermop_PKGInvChg_150717 { get; set; }
        public virtual DbSet<Mem_photos> Mem_photos { get; set; }
        public virtual DbSet<MemberAddress> MemberAddresses { get; set; }
        public virtual DbSet<MemberBank> MemberBanks { get; set; }
        public virtual DbSet<memberIHO> memberIHOes { get; set; }
        public virtual DbSet<MemberKYC> MemberKYCs { get; set; }
        public virtual DbSet<MemberLogic> MemberLogics { get; set; }
        public virtual DbSet<memberlogic_36Ids_dontdel> memberlogic_36Ids_dontdel { get; set; }
        public virtual DbSet<memberlogic_DontDel> memberlogic_DontDel { get; set; }
        public virtual DbSet<MemberNominee> MemberNominees { get; set; }
        public virtual DbSet<MemberPayment> MemberPayments { get; set; }
        public virtual DbSet<MemberPhoto> MemberPhotos { get; set; }
        public virtual DbSet<MemberUpgrade> MemberUpgrades { get; set; }
        public virtual DbSet<MemberUpgrade_log> MemberUpgrade_log { get; set; }
        public virtual DbSet<MemberVoucher> MemberVouchers { get; set; }
        public virtual DbSet<MemNotification> MemNotifications { get; set; }
        public virtual DbSet<MobAppVersion> MobAppVersions { get; set; }
        public virtual DbSet<MobileAppsmslog> MobileAppsmslogs { get; set; }
        public virtual DbSet<MobileSlide> MobileSlides { get; set; }
        public virtual DbSet<MopMaster> MopMasters { get; set; }
        public virtual DbSet<mopsale> mopsales { get; set; }
        public virtual DbSet<Mst25KUpdate> Mst25KUpdate { get; set; }
        public virtual DbSet<MstDiscountCoupon> MstDiscountCoupons { get; set; }
        public virtual DbSet<MstDist> MstDists { get; set; }
        public virtual DbSet<MstDist_20160503> MstDist_20160503 { get; set; }
        public virtual DbSet<MstDist_20160509> MstDist_20160509 { get; set; }
        public virtual DbSet<MstDist_20160510> MstDist_20160510 { get; set; }
        public virtual DbSet<MstDist_20160511> MstDist_20160511 { get; set; }
        public virtual DbSet<MstKitMaster> MstKitMasters { get; set; }
        public virtual DbSet<MstRankAchiever> MstRankAchievers { get; set; }
        public virtual DbSet<MstRank> MstRanks { get; set; }
        public virtual DbSet<MstRanks040720> MstRanks040720 { get; set; }
        public virtual DbSet<MstRankUpdate> MstRankUpdates { get; set; }
        public virtual DbSet<MstRankUpdateUp> MstRankUpdateUps { get; set; }
        public virtual DbSet<MstRoyaltyBonu> MstRoyaltyBonus { get; set; }
        public virtual DbSet<MstRoyaltyGeneration> MstRoyaltyGenerations { get; set; }
        public virtual DbSet<MstRoyaltySlab> MstRoyaltySlabs { get; set; }
        public virtual DbSet<MstSessnMaster> MstSessnMasters { get; set; }
        public virtual DbSet<MstSessWiseBv> MstSessWiseBvs { get; set; }
        public virtual DbSet<MstState> MstStates { get; set; }
        public virtual DbSet<MstStoreProductId> MstStoreProductIds { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<newslog> newslogs { get; set; }
        public virtual DbSet<NotificationMaster> NotificationMasters { get; set; }
        public virtual DbSet<OfferInfoPosting> OfferInfoPostings { get; set; }
        public virtual DbSet<OfferPackage> OfferPackages { get; set; }
        public virtual DbSet<OfferPopup> OfferPopups { get; set; }
        public virtual DbSet<OfferProduct> OfferProducts { get; set; }
        public virtual DbSet<OffersLog> OffersLogs { get; set; }
        public virtual DbSet<OffPrddetail> OffPrddetails { get; set; }
        public virtual DbSet<OffPrductsList> OffPrductsLists { get; set; }
        public virtual DbSet<PackageItem> PackageItems { get; set; }
        public virtual DbSet<PackageMaster> PackageMasters { get; set; }
        public virtual DbSet<Pay_AccInfo> Pay_AccInfo { get; set; }
        public virtual DbSet<Pay_Analysis> Pay_Analysis { get; set; }
        public virtual DbSet<Pay_Binary_Orbit> Pay_Binary_Orbit { get; set; }
        public virtual DbSet<Pay_Booster_Orbit> Pay_Booster_Orbit { get; set; }
        public virtual DbSet<Pay_BVLaps_Id> Pay_BVLaps_Id { get; set; }
        public virtual DbSet<Pay_ComapanyIds> Pay_ComapanyIds { get; set; }
        public virtual DbSet<Pay_ConsiderBills> Pay_ConsiderBills { get; set; }
        public virtual DbSet<Pay_Daily_RankBV> Pay_Daily_RankBV { get; set; }
        public virtual DbSet<Pay_DesgMaster> Pay_DesgMaster { get; set; }
        public virtual DbSet<Pay_DesgMaster_26Oct18> Pay_DesgMaster_26Oct18 { get; set; }
        public virtual DbSet<Pay_DesgMaster_UptoJuly16> Pay_DesgMaster_UptoJuly16 { get; set; }
        public virtual DbSet<Pay_Monthly_Accinfo> Pay_Monthly_Accinfo { get; set; }
        public virtual DbSet<Pay_Monthly_Analysis> Pay_Monthly_Analysis { get; set; }
        public virtual DbSet<Pay_MOnthly_ConsiderBills> Pay_MOnthly_ConsiderBills { get; set; }
        public virtual DbSet<Pay_Monthly_DesgMaster> Pay_Monthly_DesgMaster { get; set; }
        public virtual DbSet<Pay_Monthly_RecALLRoundDetails> Pay_Monthly_RecALLRoundDetails { get; set; }
        public virtual DbSet<Pay_Monthly_RecAristocracy> Pay_Monthly_RecAristocracy { get; set; }
        public virtual DbSet<Pay_Monthly_RecBenDetails> Pay_Monthly_RecBenDetails { get; set; }
        public virtual DbSet<Pay_Monthly_RecBenefits> Pay_Monthly_RecBenefits { get; set; }
        public virtual DbSet<Pay_Monthly_RecBV> Pay_Monthly_RecBV { get; set; }
        public virtual DbSet<Pay_Monthly_RecCFAmt> Pay_Monthly_RecCFAmt { get; set; }
        public virtual DbSet<Pay_monthly_RecGentlemanOffer> Pay_monthly_RecGentlemanOffer { get; set; }
        public virtual DbSet<Pay_Monthly_RecLoyalDetails> Pay_Monthly_RecLoyalDetails { get; set; }
        public virtual DbSet<Pay_Monthly_Record> Pay_Monthly_Record { get; set; }
        public virtual DbSet<Pay_Monthly_UnitRate> Pay_Monthly_UnitRate { get; set; }
        public virtual DbSet<Pay_Monthly_WrkALLRoundDetails> Pay_Monthly_WrkALLRoundDetails { get; set; }
        public virtual DbSet<Pay_Monthly_WrkAristocracy> Pay_Monthly_WrkAristocracy { get; set; }
        public virtual DbSet<Pay_Monthly_WrkBenDetails> Pay_Monthly_WrkBenDetails { get; set; }
        public virtual DbSet<Pay_Monthly_WrkBenefits> Pay_Monthly_WrkBenefits { get; set; }
        public virtual DbSet<Pay_Monthly_WrkBV> Pay_Monthly_WrkBV { get; set; }
        public virtual DbSet<Pay_Monthly_WrkLoyalDetails> Pay_Monthly_WrkLoyalDetails { get; set; }
        public virtual DbSet<Pay_OfferSSMP_20twenty> Pay_OfferSSMP_20twenty { get; set; }
        public virtual DbSet<Pay_orbit_Booster> Pay_orbit_Booster { get; set; }
        public virtual DbSet<Pay_orbit_Final> Pay_orbit_Final { get; set; }
        public virtual DbSet<Pay_OrbitDetails> Pay_OrbitDetails { get; set; }
        public virtual DbSet<Pay_OrbitDetails_245> Pay_OrbitDetails_245 { get; set; }
        public virtual DbSet<Pay_RecBinary> Pay_RecBinary { get; set; }
        public virtual DbSet<Pay_RecBinary_Booster> Pay_RecBinary_Booster { get; set; }
        public virtual DbSet<Pay_RecCF> Pay_RecCF { get; set; }
        public virtual DbSet<Pay_RecCF_Backup_DontDel> Pay_RecCF_Backup_DontDel { get; set; }
        public virtual DbSet<Pay_RecCF_Booster> Pay_RecCF_Booster { get; set; }
        public virtual DbSet<pay_recCF_dontdel> pay_recCF_dontdel { get; set; }
        public virtual DbSet<pay_recCF_dontdel_Upto272> pay_recCF_dontdel_Upto272 { get; set; }
        public virtual DbSet<Pay_RecCFAmt> Pay_RecCFAmt { get; set; }
        public virtual DbSet<Pay_Record> Pay_Record { get; set; }
        public virtual DbSet<Pay_RecRewardInc> Pay_RecRewardInc { get; set; }
        public virtual DbSet<Pay_RecWeeklyRwd_Calc> Pay_RecWeeklyRwd_Calc { get; set; }
        public virtual DbSet<Pay_Rwd_Achievers> Pay_Rwd_Achievers { get; set; }
        public virtual DbSet<Pay_Rwd_Ranks> Pay_Rwd_Ranks { get; set; }
        public virtual DbSet<Pay_SICP_ErrorDetails> Pay_SICP_ErrorDetails { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_Accinfo_RP> Pay_SICP_Monthly_Accinfo_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_Analysis_RP> Pay_SICP_Monthly_Analysis_RP { get; set; }
        public virtual DbSet<Pay_SICP_MOnthly_ConsiderBills_RP> Pay_SICP_MOnthly_ConsiderBills_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecALLRoundDetails_RP> Pay_SICP_Monthly_RecALLRoundDetails_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecAristocracy_RP> Pay_SICP_Monthly_RecAristocracy_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecBenDetails_RP> Pay_SICP_Monthly_RecBenDetails_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecBenefits_RP> Pay_SICP_Monthly_RecBenefits_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecBV_RP> Pay_SICP_Monthly_RecBV_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecCFAmt_RP> Pay_SICP_Monthly_RecCFAmt_RP { get; set; }
        public virtual DbSet<Pay_SICP_monthly_RecGentlemanOffer_RP> Pay_SICP_monthly_RecGentlemanOffer_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_RecLoyalDetails_RP> Pay_SICP_Monthly_RecLoyalDetails_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_Record_RP> Pay_SICP_Monthly_Record_RP { get; set; }
        public virtual DbSet<Pay_SICP_Monthly_UnitRate_RP> Pay_SICP_Monthly_UnitRate_RP { get; set; }
        public virtual DbSet<Pay_SSMP_AccInfo_RP> Pay_SSMP_AccInfo_RP { get; set; }
        public virtual DbSet<Pay_SSMP_ConsiderBills_RP> Pay_SSMP_ConsiderBills_RP { get; set; }
        public virtual DbSet<Pay_SSMP_ErrorDetails> Pay_SSMP_ErrorDetails { get; set; }
        public virtual DbSet<Pay_SSMP_OfferSSMP_20twenty_RP> Pay_SSMP_OfferSSMP_20twenty_RP { get; set; }
        public virtual DbSet<Pay_SSMP_RecBinary_Booster_RP> Pay_SSMP_RecBinary_Booster_RP { get; set; }
        public virtual DbSet<Pay_SSMP_RecBinary_RP> Pay_SSMP_RecBinary_RP { get; set; }
        public virtual DbSet<Pay_SSMP_RecCF_Booster_RP> Pay_SSMP_RecCF_Booster_RP { get; set; }
        public virtual DbSet<Pay_SSMP_RecCF_RP> Pay_SSMP_RecCF_RP { get; set; }
        public virtual DbSet<Pay_SSMP_RecCFAmt_RP> Pay_SSMP_RecCFAmt_RP { get; set; }
        public virtual DbSet<Pay_SSMP_Record_RP> Pay_SSMP_Record_RP { get; set; }
        public virtual DbSet<Pay_SSMP_RecRewardInc_RP> Pay_SSMP_RecRewardInc_RP { get; set; }
        public virtual DbSet<Pay_SSMp_Rollback_Temp> Pay_SSMp_Rollback_Temp { get; set; }
        public virtual DbSet<Pay_SSMP_SICPLapsIds> Pay_SSMP_SICPLapsIds { get; set; }
        public virtual DbSet<Pay_SSMP_SICPLapsIds_Booster> Pay_SSMP_SICPLapsIds_Booster { get; set; }
        public virtual DbSet<Pay_SSMP_SICPLapsIds_Booster_RP> Pay_SSMP_SICPLapsIds_Booster_RP { get; set; }
        public virtual DbSet<Pay_SSMP_SICPLapsIds_RP> Pay_SSMP_SICPLapsIds_RP { get; set; }
        public virtual DbSet<Pay_WrkBinary> Pay_WrkBinary { get; set; }
        public virtual DbSet<Pay_WrkBinary_Booster> Pay_WrkBinary_Booster { get; set; }
        public virtual DbSet<Pay_WrkRewardInc> Pay_WrkRewardInc { get; set; }
        public virtual DbSet<Pay_WrkWeeklyRwd_Calc> Pay_WrkWeeklyRwd_Calc { get; set; }
        public virtual DbSet<PaymentGatewayStatu> PaymentGatewayStatus { get; set; }
        public virtual DbSet<paymentreq> paymentreqs { get; set; }
        public virtual DbSet<PaymentRequest> PaymentRequests { get; set; }
        public virtual DbSet<PaymentRequest_log> PaymentRequest_log { get; set; }
        public virtual DbSet<PinCodeMaster> PinCodeMasters { get; set; }
        public virtual DbSet<PlacementMaster> PlacementMasters { get; set; }
        public virtual DbSet<POSDispatchMaster> POSDispatchMasters { get; set; }
        public virtual DbSet<PowerSlab> PowerSlabs { get; set; }
        public virtual DbSet<Prod_attributes> Prod_attributes { get; set; }
        public virtual DbSet<Prod_attributes_fields> Prod_attributes_fields { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductCredit> ProductCredits { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<ProductItems_CnF> ProductItems_CnF { get; set; }
        public virtual DbSet<ProductOffer> ProductOffers { get; set; }
        public virtual DbSet<ProductPrice> ProductPrices { get; set; }
        public virtual DbSet<PVDetails_log> PVDetails_log { get; set; }
        public virtual DbSet<PVUpdtdRpt> PVUpdtdRpts { get; set; }
        public virtual DbSet<RandomCoupon> RandomCoupons { get; set; }
        public virtual DbSet<RandomNo> RandomNos { get; set; }
        public virtual DbSet<ReactDistMaster> ReactDistMasters { get; set; }
        public virtual DbSet<RegistrationOnline> RegistrationOnlines { get; set; }
        public virtual DbSet<ReleaseDeviceLock_Log> ReleaseDeviceLock_Log { get; set; }
        public virtual DbSet<RepurchaseMaster_Reg> RepurchaseMaster_Reg { get; set; }
        public virtual DbSet<repurchaseproducts_log> repurchaseproducts_log { get; set; }
        public virtual DbSet<repurchasesale> repurchasesales { get; set; }
        public virtual DbSet<repurchasesales_log> repurchasesales_log { get; set; }
        public virtual DbSet<repurchasesales_Returnlog> repurchasesales_Returnlog { get; set; }
        public virtual DbSet<RepurchIncome> RepurchIncomes { get; set; }
        public virtual DbSet<RepurchIncomeExt> RepurchIncomeExts { get; set; }
        public virtual DbSet<RepurchIncomeold> RepurchIncomeolds { get; set; }
        public virtual DbSet<repurprod_Org_070717> repurprod_Org_070717 { get; set; }
        public virtual DbSet<RequestMop> RequestMops { get; set; }
        public virtual DbSet<RequestOrder> RequestOrders { get; set; }
        public virtual DbSet<ResetPassword> ResetPasswords { get; set; }
        public virtual DbSet<rpcategory> rpcategories { get; set; }
        public virtual DbSet<Rwd_SSNP_Baleno_RwdDetails> Rwd_SSNP_Baleno_RwdDetails { get; set; }
        public virtual DbSet<SalesTempReg> SalesTempRegs { get; set; }
        public virtual DbSet<Sarso_Subjects> Sarso_Subjects { get; set; }
        public virtual DbSet<SBORANK> SBORANKS { get; set; }
        public virtual DbSet<SCOnline> SCOnlines { get; set; }
        public virtual DbSet<SessionsInOut> SessionsInOuts { get; set; }
        public virtual DbSet<ShopCartRandomNo> ShopCartRandomNoes { get; set; }
        public virtual DbSet<Shoppingaddress> Shoppingaddresses { get; set; }
        public virtual DbSet<ShoppingCart> ShoppingCarts { get; set; }
        public virtual DbSet<SICPEWalletComm> SICPEWalletComms { get; set; }
        public virtual DbSet<Simulation_MemberLogic> Simulation_MemberLogic { get; set; }
        public virtual DbSet<Simulation_RecPV> Simulation_RecPV { get; set; }
        public virtual DbSet<Simulation_Repurchase> Simulation_Repurchase { get; set; }
        public virtual DbSet<smslog> smslogs { get; set; }
        public virtual DbSet<Sponsorchange_SBOIDS> Sponsorchange_SBOIDS { get; set; }
        public virtual DbSet<SS_Member_Reg> SS_Member_Reg { get; set; }
        public virtual DbSet<SS_Orbit_test_booster> SS_Orbit_test_booster { get; set; }
        public virtual DbSet<SS_tmp_FinalOrbit> SS_tmp_FinalOrbit { get; set; }
        public virtual DbSet<state> states { get; set; }
        public virtual DbSet<StatusMaster> StatusMasters { get; set; }
        public virtual DbSet<STNAddress> STNAddresses { get; set; }
        public virtual DbSet<StockAdjust> StockAdjusts { get; set; }
        public virtual DbSet<StockAdjust_FCP> StockAdjust_FCP { get; set; }
        public virtual DbSet<StockInward> StockInwards { get; set; }
        public virtual DbSet<StockOrder> StockOrders { get; set; }
        public virtual DbSet<StockOutward> StockOutwards { get; set; }
        public virtual DbSet<Stockreturn> Stockreturns { get; set; }
        public virtual DbSet<SWalletShopping> SWalletShoppings { get; set; }
        public virtual DbSet<TblBank> TblBanks { get; set; }
        public virtual DbSet<TempAddToCart> TempAddToCarts { get; set; }
        public virtual DbSet<TempAddToCart_log> TempAddToCart_log { get; set; }
        public virtual DbSet<TempCart> TempCarts { get; set; }
        public virtual DbSet<TempCart_28_total> TempCart_28_total { get; set; }
        public virtual DbSet<TempCart_FCP> TempCart_FCP { get; set; }
        public virtual DbSet<TempCart_log> TempCart_log { get; set; }
        public virtual DbSet<TempCart_log_28_New> TempCart_log_28_New { get; set; }
        public virtual DbSet<TempCart_log_28_total> TempCart_log_28_total { get; set; }
        public virtual DbSet<TempCourier> TempCouriers { get; set; }
        public virtual DbSet<tempdesg> tempdesgs { get; set; }
        public virtual DbSet<tempdistcanlrpt> tempdistcanlrpts { get; set; }
        public virtual DbSet<TempEditOrder> TempEditOrders { get; set; }
        public virtual DbSet<TempEditOrders_Log> TempEditOrders_Log { get; set; }
        public virtual DbSet<tempInvOfferPrd> tempInvOfferPrds { get; set; }
        public virtual DbSet<TempInvPrdsList> TempInvPrdsLists { get; set; }
        public virtual DbSet<TempLegShift> TempLegShifts { get; set; }
        public virtual DbSet<TempNotificationAlert> TempNotificationAlerts { get; set; }
        public virtual DbSet<TempOfferproduct> TempOfferproducts { get; set; }
        public virtual DbSet<TempOrder> TempOrders { get; set; }
        public virtual DbSet<Tempproductcredit> Tempproductcredits { get; set; }
        public virtual DbSet<tempsm> tempsms { get; set; }
        public virtual DbSet<TempStockOrder_FCP> TempStockOrder_FCP { get; set; }
        public virtual DbSet<TempSubmityourKYC> TempSubmityourKYCs { get; set; }
        public virtual DbSet<Tmp_oldBillDatainfo_DontDel> Tmp_oldBillDatainfo_DontDel { get; set; }
        public virtual DbSet<Tmp_RREP_oldBillDatainfo_DontDel> Tmp_RREP_oldBillDatainfo_DontDel { get; set; }
        public virtual DbSet<Tmp_RREP_oldBillDatainfo_DontDel_2> Tmp_RREP_oldBillDatainfo_DontDel_2 { get; set; }
        public virtual DbSet<Tmp_RREP_oldBillDatainfo_DontDel_3> Tmp_RREP_oldBillDatainfo_DontDel_3 { get; set; }
        public virtual DbSet<Tmp_RREP_oldBillDatainfo_DontDel_4> Tmp_RREP_oldBillDatainfo_DontDel_4 { get; set; }
        public virtual DbSet<tmpAlltable> tmpAlltables { get; set; }
        public virtual DbSet<Tmpdata> Tmpdatas { get; set; }
        public virtual DbSet<tmpPackageItem> tmpPackageItems { get; set; }
        public virtual DbSet<TrnPaymentOnline> TrnPaymentOnlines { get; set; }
        public virtual DbSet<UpdateChequeDetail> UpdateChequeDetails { get; set; }
        public virtual DbSet<UpdateCourierlog> UpdateCourierlogs { get; set; }
        public virtual DbSet<UpdateDist> UpdateDists { get; set; }
        public virtual DbSet<UpdateGstDetail> UpdateGstDetails { get; set; }
        public virtual DbSet<UpGVDCOMPValue> UpGVDCOMPValues { get; set; }
        public virtual DbSet<Vouchers_Admin> Vouchers_Admin { get; set; }
        public virtual DbSet<Vouchers_Admin_Backup_dontdel> Vouchers_Admin_Backup_dontdel { get; set; }
        public virtual DbSet<WalletOffer> WalletOffers { get; set; }
        public virtual DbSet<WDBatchItem> WDBatchItems { get; set; }
        public virtual DbSet<WDBatchMaster> WDBatchMasters { get; set; }
        public virtual DbSet<Stp_PayoutIncomes> Stp_PayoutIncomes { get; set; }
        public virtual DbSet<Stp_Weeklypayout> Stp_Weeklypayout { get; set; }
        public virtual DbSet<V_EvalletOnWebsite> V_EvalletOnWebsite { get; set; }
        public virtual DbSet<V_FirstPurchase> V_FirstPurchase { get; set; }
        public virtual DbSet<V_PaymentOnline> V_PaymentOnline { get; set; }
        public virtual DbSet<V_ShoppingOnWebsite> V_ShoppingOnWebsite { get; set; }
        public virtual DbSet<V_StoreKitId> V_StoreKitId { get; set; }
        public virtual DbSet<V_Address> V_Address { get; set; }
        public virtual DbSet<V_Distlist> V_Distlist { get; set; }
        public virtual DbSet<V_Ticketdetail> V_Ticketdetail { get; set; }
        public virtual DbSet<V_Tickets> V_Tickets { get; set; }
        public virtual DbSet<vw_SSMP_ACntAll> vw_SSMP_ACntAll { get; set; }
        public virtual DbSet<vw_SSMP_All> vw_SSMP_All { get; set; }
        public virtual DbSet<vw_SSMP_CntAll> vw_SSMP_CntAll { get; set; }
        public virtual DbSet<vw_SSMP_InCntAll> vw_SSMP_InCntAll { get; set; }
        public virtual DbSet<vw_SSMPTabular_View> vw_SSMPTabular_View { get; set; }
    
        [DbFunction("sarsobizEntities", "fn_SplitValue")]
        public virtual IQueryable<fn_SplitValue_Result> fn_SplitValue(string responseData)
        {
            var responseDataParameter = responseData != null ?
                new ObjectParameter("ResponseData", responseData) :
                new ObjectParameter("ResponseData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SplitValue_Result>("[sarsobizEntities].[fn_SplitValue](@ResponseData)", responseDataParameter);
        }
    
        [DbFunction("sarsobizEntities", "GetAttributesAvailble")]
        public virtual IQueryable<GetAttributesAvailble_Result> GetAttributesAvailble(string pcode)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAttributesAvailble_Result>("[sarsobizEntities].[GetAttributesAvailble](@pcode)", pcodeParameter);
        }
    
        [DbFunction("sarsobizEntities", "GetBalance")]
        public virtual IQueryable<GetBalance_Result> GetBalance(Nullable<decimal> regID, string type)
        {
            var regIDParameter = regID.HasValue ?
                new ObjectParameter("RegID", regID) :
                new ObjectParameter("RegID", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBalance_Result>("[sarsobizEntities].[GetBalance](@RegID, @Type)", regIDParameter, typeParameter);
        }
    
        [DbFunction("sarsobizEntities", "GetElementChilds")]
        public virtual IQueryable<GetElementChilds_Result> GetElementChilds(Nullable<decimal> formNo, Nullable<decimal> sessID)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(decimal));
    
            var sessIDParameter = sessID.HasValue ?
                new ObjectParameter("SessID", sessID) :
                new ObjectParameter("SessID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetElementChilds_Result>("[sarsobizEntities].[GetElementChilds](@FormNo, @SessID)", formNoParameter, sessIDParameter);
        }
    
        [DbFunction("sarsobizEntities", "GetItemCodesAvailble")]
        public virtual IQueryable<GetItemCodesAvailble_Result> GetItemCodesAvailble()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetItemCodesAvailble_Result>("[sarsobizEntities].[GetItemCodesAvailble]()");
        }
    
        [DbFunction("sarsobizEntities", "getSICPDownlienCV")]
        public virtual IQueryable<getSICPDownlienCV_Result> getSICPDownlienCV(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSICPDownlienCV_Result>("[sarsobizEntities].[getSICPDownlienCV](@Regid)", regidParameter);
        }
    
        [DbFunction("sarsobizEntities", "getSSMPDownlienCnt")]
        public virtual IQueryable<getSSMPDownlienCnt_Result> getSSMPDownlienCnt(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSSMPDownlienCnt_Result>("[sarsobizEntities].[getSSMPDownlienCnt](@Regid)", regidParameter);
        }
    
        [DbFunction("sarsobizEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[sarsobizEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("sarsobizEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[sarsobizEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddCompanyBanks_Sp(string action, Nullable<int> cbid, string bank, string branch, string accno, string ifsc, string city, string state, Nullable<int> cBStatus, Nullable<int> createdBy, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var cbidParameter = cbid.HasValue ?
                new ObjectParameter("cbid", cbid) :
                new ObjectParameter("cbid", typeof(int));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var accnoParameter = accno != null ?
                new ObjectParameter("Accno", accno) :
                new ObjectParameter("Accno", typeof(string));
    
            var ifscParameter = ifsc != null ?
                new ObjectParameter("ifsc", ifsc) :
                new ObjectParameter("ifsc", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cBStatusParameter = cBStatus.HasValue ?
                new ObjectParameter("CBStatus", cBStatus) :
                new ObjectParameter("CBStatus", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("Sesid", sesid) :
                new ObjectParameter("Sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddCompanyBanks_Sp", actionParameter, cbidParameter, bankParameter, branchParameter, accnoParameter, ifscParameter, cityParameter, stateParameter, cBStatusParameter, createdByParameter, sesidParameter);
        }
    
        public virtual ObjectResult<AddorDeductRpt_Sp_Result> AddorDeductRpt_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<long> pageIndex, Nullable<long> pagesize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddorDeductRpt_Sp_Result>("AddorDeductRpt_Sp", frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual int AddorDeductWallet_Sp(string action, Nullable<decimal> regid, Nullable<decimal> amount, string typeofinc, string remarks, Nullable<int> thru, string sessId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var typeofincParameter = typeofinc != null ?
                new ObjectParameter("typeofinc", typeofinc) :
                new ObjectParameter("typeofinc", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var thruParameter = thru.HasValue ?
                new ObjectParameter("thru", thru) :
                new ObjectParameter("thru", typeof(int));
    
            var sessIdParameter = sessId != null ?
                new ObjectParameter("SessId", sessId) :
                new ObjectParameter("SessId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddorDeductWallet_Sp", actionParameter, regidParameter, amountParameter, typeofincParameter, remarksParameter, thruParameter, sessIdParameter);
        }
    
        public virtual ObjectResult<AddorDeductWithdrawalRpt_Sp_Result> AddorDeductWithdrawalRpt_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<long> pageIndex, Nullable<long> pagesize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddorDeductWithdrawalRpt_Sp_Result>("AddorDeductWithdrawalRpt_Sp", frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual int AddorDeductWithdrawalWallet_Sp(string action, Nullable<decimal> regid, Nullable<decimal> amount, string typeofinc, string remarks, Nullable<int> thru, string sessId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var typeofincParameter = typeofinc != null ?
                new ObjectParameter("typeofinc", typeofinc) :
                new ObjectParameter("typeofinc", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var thruParameter = thru.HasValue ?
                new ObjectParameter("thru", thru) :
                new ObjectParameter("thru", typeof(int));
    
            var sessIdParameter = sessId != null ?
                new ObjectParameter("SessId", sessId) :
                new ObjectParameter("SessId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddorDeductWithdrawalWallet_Sp", actionParameter, regidParameter, amountParameter, typeofincParameter, remarksParameter, thruParameter, sessIdParameter);
        }
    
        public virtual ObjectResult<string> AdminEditPermission_Sp(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AdminEditPermission_Sp", uidParameter);
        }
    
        public virtual ObjectResult<AdminLogin_Sp_Result> AdminLogin_Sp(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminLogin_Sp_Result>("AdminLogin_Sp", usernameParameter, passwordParameter);
        }
    
        public virtual int AppConsultantReport_Sp(string searchid, Nullable<int> status, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<int> stateid, Nullable<int> pageIndex, Nullable<int> pageSize, string action)
        {
            var searchidParameter = searchid != null ?
                new ObjectParameter("searchid", searchid) :
                new ObjectParameter("searchid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppConsultantReport_Sp", searchidParameter, statusParameter, frmdateParameter, todateParameter, regidParameter, stateidParameter, pageIndexParameter, pageSizeParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AppConsultMOP_Sp(string action, Nullable<decimal> regid, string mop, Nullable<decimal> amount, string refno, string refbank, string refbranch, Nullable<System.DateTime> refDate, string remarks, string orderno, Nullable<int> approvedBy)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var refnoParameter = refno != null ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(string));
    
            var refbankParameter = refbank != null ?
                new ObjectParameter("refbank", refbank) :
                new ObjectParameter("refbank", typeof(string));
    
            var refbranchParameter = refbranch != null ?
                new ObjectParameter("Refbranch", refbranch) :
                new ObjectParameter("Refbranch", typeof(string));
    
            var refDateParameter = refDate.HasValue ?
                new ObjectParameter("RefDate", refDate) :
                new ObjectParameter("RefDate", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var approvedByParameter = approvedBy.HasValue ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AppConsultMOP_Sp", actionParameter, regidParameter, mopParameter, amountParameter, refnoParameter, refbankParameter, refbranchParameter, refDateParameter, remarksParameter, ordernoParameter, approvedByParameter);
        }
    
        public virtual int AppRejCreditRqt_SP(string reqcode, Nullable<int> apprej, Nullable<int> user, string sessid, string remarks)
        {
            var reqcodeParameter = reqcode != null ?
                new ObjectParameter("reqcode", reqcode) :
                new ObjectParameter("reqcode", typeof(string));
    
            var apprejParameter = apprej.HasValue ?
                new ObjectParameter("apprej", apprej) :
                new ObjectParameter("apprej", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppRejCreditRqt_SP", reqcodeParameter, apprejParameter, userParameter, sessidParameter, remarksParameter);
        }
    
        public virtual int AppRejMemDetailes_Sp(string action, Nullable<int> slno, Nullable<int> status, Nullable<int> byuser, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var slnoParameter = slno.HasValue ?
                new ObjectParameter("slno", slno) :
                new ObjectParameter("slno", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var byuserParameter = byuser.HasValue ?
                new ObjectParameter("byuser", byuser) :
                new ObjectParameter("byuser", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppRejMemDetailes_Sp", actionParameter, slnoParameter, statusParameter, byuserParameter, remarksParameter);
        }
    
        public virtual int AppRejMemPhotos_Sp(Nullable<int> slno, Nullable<int> status, Nullable<int> byuser, string action, string remarks)
        {
            var slnoParameter = slno.HasValue ?
                new ObjectParameter("slno", slno) :
                new ObjectParameter("slno", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var byuserParameter = byuser.HasValue ?
                new ObjectParameter("byuser", byuser) :
                new ObjectParameter("byuser", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppRejMemPhotos_Sp", slnoParameter, statusParameter, byuserParameter, actionParameter, remarksParameter);
        }
    
        public virtual ObjectResult<AppRejMemProfRpt_Sp_Result> AppRejMemProfRpt_Sp(string action, Nullable<decimal> regid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> pageIndex, Nullable<long> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppRejMemProfRpt_Sp_Result>("AppRejMemProfRpt_Sp", actionParameter, regidParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ApproveCustomerOrder_SP_Result> ApproveCustomerOrder_SP(string action, Nullable<int> sno, Nullable<int> apprej, Nullable<int> apprejby, string remarks, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var apprejParameter = apprej.HasValue ?
                new ObjectParameter("apprej", apprej) :
                new ObjectParameter("apprej", typeof(int));
    
            var apprejbyParameter = apprejby.HasValue ?
                new ObjectParameter("apprejby", apprejby) :
                new ObjectParameter("apprejby", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApproveCustomerOrder_SP_Result>("ApproveCustomerOrder_SP", actionParameter, snoParameter, apprejParameter, apprejbyParameter, remarksParameter, sesidParameter);
        }
    
        public virtual int ApprovedStockOrder_CnF(string action, string orderrefid, string fcode, string pcode, Nullable<int> qty, string sessionid, string sesUser, string dmode, string modname, string modno, string moddate, string modremarks, string vehicleNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var orderrefidParameter = orderrefid != null ?
                new ObjectParameter("orderrefid", orderrefid) :
                new ObjectParameter("orderrefid", typeof(string));
    
            var fcodeParameter = fcode != null ?
                new ObjectParameter("fcode", fcode) :
                new ObjectParameter("fcode", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var sessionidParameter = sessionid != null ?
                new ObjectParameter("sessionid", sessionid) :
                new ObjectParameter("sessionid", typeof(string));
    
            var sesUserParameter = sesUser != null ?
                new ObjectParameter("SesUser", sesUser) :
                new ObjectParameter("SesUser", typeof(string));
    
            var dmodeParameter = dmode != null ?
                new ObjectParameter("dmode", dmode) :
                new ObjectParameter("dmode", typeof(string));
    
            var modnameParameter = modname != null ?
                new ObjectParameter("modname", modname) :
                new ObjectParameter("modname", typeof(string));
    
            var modnoParameter = modno != null ?
                new ObjectParameter("modno", modno) :
                new ObjectParameter("modno", typeof(string));
    
            var moddateParameter = moddate != null ?
                new ObjectParameter("moddate", moddate) :
                new ObjectParameter("moddate", typeof(string));
    
            var modremarksParameter = modremarks != null ?
                new ObjectParameter("modremarks", modremarks) :
                new ObjectParameter("modremarks", typeof(string));
    
            var vehicleNoParameter = vehicleNo != null ?
                new ObjectParameter("VehicleNo", vehicleNo) :
                new ObjectParameter("VehicleNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApprovedStockOrder_CnF", actionParameter, orderrefidParameter, fcodeParameter, pcodeParameter, qtyParameter, sessionidParameter, sesUserParameter, dmodeParameter, modnameParameter, modnoParameter, moddateParameter, modremarksParameter, vehicleNoParameter);
        }
    
        public virtual int ApproveKYC_SP(Nullable<int> sno, Nullable<int> apprej, Nullable<int> apprejby, string remarks, string sesid, string type)
        {
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var apprejParameter = apprej.HasValue ?
                new ObjectParameter("apprej", apprej) :
                new ObjectParameter("apprej", typeof(int));
    
            var apprejbyParameter = apprejby.HasValue ?
                new ObjectParameter("apprejby", apprejby) :
                new ObjectParameter("apprejby", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApproveKYC_SP", snoParameter, apprejParameter, apprejbyParameter, remarksParameter, sesidParameter, typeParameter);
        }
    
        public virtual ObjectResult<ApprovePayment_SP_Result> ApprovePayment_SP(string action, string ordertype, string paymenttype, string sBOID, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> pageIndex, Nullable<long> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var paymenttypeParameter = paymenttype != null ?
                new ObjectParameter("Paymenttype", paymenttype) :
                new ObjectParameter("Paymenttype", typeof(string));
    
            var sBOIDParameter = sBOID != null ?
                new ObjectParameter("SBOID", sBOID) :
                new ObjectParameter("SBOID", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApprovePayment_SP_Result>("ApprovePayment_SP", actionParameter, ordertypeParameter, paymenttypeParameter, sBOIDParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int BatchDetExcel_Sp(string despbno)
        {
            var despbnoParameter = despbno != null ?
                new ObjectParameter("despbno", despbno) :
                new ObjectParameter("despbno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchDetExcel_Sp", despbnoParameter);
        }
    
        public virtual ObjectResult<BatchDetRpt_Sp_Result> BatchDetRpt_Sp(string despbno)
        {
            var despbnoParameter = despbno != null ?
                new ObjectParameter("despbno", despbno) :
                new ObjectParameter("despbno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchDetRpt_Sp_Result>("BatchDetRpt_Sp", despbnoParameter);
        }
    
        public virtual int BatchOut_Sp(string courier, string invoiceNos, string sesid)
        {
            var courierParameter = courier != null ?
                new ObjectParameter("courier", courier) :
                new ObjectParameter("courier", typeof(string));
    
            var invoiceNosParameter = invoiceNos != null ?
                new ObjectParameter("InvoiceNos", invoiceNos) :
                new ObjectParameter("InvoiceNos", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchOut_Sp", courierParameter, invoiceNosParameter, sesidParameter);
        }
    
        public virtual ObjectResult<BatchOutRpt_Sp_Result> BatchOutRpt_Sp(Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchOutRpt_Sp_Result>("BatchOutRpt_Sp", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<BillGanarate_JobThruUpdate_Result> BillGanarate_JobThruUpdate(string idno, string oRDER_ID, Nullable<int> regid)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BillGanarate_JobThruUpdate_Result>("BillGanarate_JobThruUpdate", idnoParameter, oRDER_IDParameter, regidParameter);
        }
    
        public virtual int BillGeneration(string billMain, string billDetail)
        {
            var billMainParameter = billMain != null ?
                new ObjectParameter("BillMain", billMain) :
                new ObjectParameter("BillMain", typeof(string));
    
            var billDetailParameter = billDetail != null ?
                new ObjectParameter("BillDetail", billDetail) :
                new ObjectParameter("BillDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BillGeneration", billMainParameter, billDetailParameter);
        }
    
        public virtual ObjectResult<Binaryrpt_SP_Result> Binaryrpt_SP(Nullable<int> payno, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<decimal> fromamt, Nullable<decimal> toamt, string usertype, Nullable<long> pageIndex, Nullable<long> pageSize)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var fromamtParameter = fromamt.HasValue ?
                new ObjectParameter("fromamt", fromamt) :
                new ObjectParameter("fromamt", typeof(decimal));
    
            var toamtParameter = toamt.HasValue ?
                new ObjectParameter("toamt", toamt) :
                new ObjectParameter("toamt", typeof(decimal));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Binaryrpt_SP_Result>("Binaryrpt_SP", paynoParameter, frmdateParameter, todateParameter, regidParameter, fromamtParameter, toamtParameter, usertypeParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<BinaryTabular_Sp_Result> BinaryTabular_Sp(Nullable<int> regid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string rtype, Nullable<int> status, string val)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var rtypeParameter = rtype != null ?
                new ObjectParameter("rtype", rtype) :
                new ObjectParameter("rtype", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var valParameter = val != null ?
                new ObjectParameter("Val", val) :
                new ObjectParameter("Val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BinaryTabular_Sp_Result>("BinaryTabular_Sp", regidParameter, frmdateParameter, todateParameter, rtypeParameter, statusParameter, valParameter);
        }
    
        public virtual ObjectResult<BinaryTabular_Sp_22716_Result> BinaryTabular_Sp_22716(Nullable<int> regid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string rtype, Nullable<int> status, string val)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var rtypeParameter = rtype != null ?
                new ObjectParameter("rtype", rtype) :
                new ObjectParameter("rtype", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var valParameter = val != null ?
                new ObjectParameter("Val", val) :
                new ObjectParameter("Val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BinaryTabular_Sp_22716_Result>("BinaryTabular_Sp_22716", regidParameter, frmdateParameter, todateParameter, rtypeParameter, statusParameter, valParameter);
        }
    
        public virtual ObjectResult<BinaryTrackReport_Result> BinaryTrackReport(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BinaryTrackReport_Result>("BinaryTrackReport", regidParameter);
        }
    
        public virtual ObjectResult<BirthdaySms_Sp_Result> BirthdaySms_Sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BirthdaySms_Sp_Result>("BirthdaySms_Sp");
        }
    
        public virtual ObjectResult<Nullable<int>> BlockorUnBlock_SP(string action, Nullable<decimal> regid, Nullable<int> updatedby, string remarks, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BlockorUnBlock_SP", actionParameter, regidParameter, updatedbyParameter, remarksParameter, sesidParameter);
        }
    
        public virtual int BlockorUnBlockIdsRpt_sp(string action, string idno, string regtype, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, string pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var regtypeParameter = regtype != null ?
                new ObjectParameter("regtype", regtype) :
                new ObjectParameter("regtype", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize != null ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlockorUnBlockIdsRpt_sp", actionParameter, idnoParameter, regtypeParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int BlockSBO_Sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlockSBO_Sp");
        }
    
        public virtual int BlockSBOSms_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlockSBOSms_sp");
        }
    
        public virtual ObjectResult<BoosterTreeIdDet_Sp_Result> BoosterTreeIdDet_Sp(string action, string uid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BoosterTreeIdDet_Sp_Result>("BoosterTreeIdDet_Sp", actionParameter, uidParameter);
        }
    
        public virtual int BulkSms_Sp(string stateid, string city, string msg, string sesid)
        {
            var stateidParameter = stateid != null ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BulkSms_Sp", stateidParameter, cityParameter, msgParameter, sesidParameter);
        }
    
        public virtual ObjectResult<BusinessReport_Sp_Result> BusinessReport_Sp(string action, Nullable<int> pageIndex, Nullable<int> pageSize, string type)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusinessReport_Sp_Result>("BusinessReport_Sp", actionParameter, pageIndexParameter, pageSizeParameter, typeParameter);
        }
    
        public virtual int BusinessStatsRpt_SP(string action, string state, string district, string sBOID, string packcode, string pcode, string sts, string plantype, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> pageIndex, Nullable<long> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var sBOIDParameter = sBOID != null ?
                new ObjectParameter("SBOID", sBOID) :
                new ObjectParameter("SBOID", typeof(string));
    
            var packcodeParameter = packcode != null ?
                new ObjectParameter("Packcode", packcode) :
                new ObjectParameter("Packcode", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var stsParameter = sts != null ?
                new ObjectParameter("Sts", sts) :
                new ObjectParameter("Sts", typeof(string));
    
            var plantypeParameter = plantype != null ?
                new ObjectParameter("Plantype", plantype) :
                new ObjectParameter("Plantype", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BusinessStatsRpt_SP", actionParameter, stateParameter, districtParameter, sBOIDParameter, packcodeParameter, pcodeParameter, stsParameter, plantypeParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int ChangeCust_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeCust_sp");
        }
    
        public virtual ObjectResult<Nullable<int>> ChangePassword_Sp(string action, Nullable<int> itemid, string pwd, Nullable<int> uid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChangePassword_Sp", actionParameter, itemidParameter, pwdParameter, uidParameter);
        }
    
        public virtual ObjectResult<string> CheckCreditRequestPending_SP(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckCreditRequestPending_SP", regidParameter);
        }
    
        public virtual ObjectResult<CheckDownto_SP_Result> CheckDownto_SP(string action, string idno, string downto)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var downtoParameter = downto != null ?
                new ObjectParameter("downto", downto) :
                new ObjectParameter("downto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDownto_SP_Result>("CheckDownto_SP", actionParameter, idnoParameter, downtoParameter);
        }
    
        public virtual ObjectResult<string> CheckMember_SP(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckMember_SP", uidParameter);
        }
    
        public virtual int CheckSentID(string mailTo, string toID)
        {
            var mailToParameter = mailTo != null ?
                new ObjectParameter("MailTo", mailTo) :
                new ObjectParameter("MailTo", typeof(string));
    
            var toIDParameter = toID != null ?
                new ObjectParameter("ToID", toID) :
                new ObjectParameter("ToID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckSentID", mailToParameter, toIDParameter);
        }
    
        public virtual ObjectResult<CheckSponsor_SP_Result> CheckSponsor_SP(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckSponsor_SP_Result>("CheckSponsor_SP", idnoParameter);
        }
    
        public virtual ObjectResult<CheckUserName_Result> CheckUserName(string iDNO, string rptType)
        {
            var iDNOParameter = iDNO != null ?
                new ObjectParameter("IDNO", iDNO) :
                new ObjectParameter("IDNO", typeof(string));
    
            var rptTypeParameter = rptType != null ?
                new ObjectParameter("RptType", rptType) :
                new ObjectParameter("RptType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckUserName_Result>("CheckUserName", iDNOParameter, rptTypeParameter);
        }
    
        public virtual ObjectResult<string> chgaddress_Sp(Nullable<decimal> regid, string maidenname, string dob, string sex, string mobile, string add1, string add2, string district, string state, string city, string pin, string email, string cordistrict, string corstate, string corcity, string corpin, string gSTNO)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var maidennameParameter = maidenname != null ?
                new ObjectParameter("maidenname", maidenname) :
                new ObjectParameter("maidenname", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var add1Parameter = add1 != null ?
                new ObjectParameter("add1", add1) :
                new ObjectParameter("add1", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cordistrictParameter = cordistrict != null ?
                new ObjectParameter("cordistrict", cordistrict) :
                new ObjectParameter("cordistrict", typeof(string));
    
            var corstateParameter = corstate != null ?
                new ObjectParameter("corstate", corstate) :
                new ObjectParameter("corstate", typeof(string));
    
            var corcityParameter = corcity != null ?
                new ObjectParameter("corcity", corcity) :
                new ObjectParameter("corcity", typeof(string));
    
            var corpinParameter = corpin != null ?
                new ObjectParameter("corpin", corpin) :
                new ObjectParameter("corpin", typeof(string));
    
            var gSTNOParameter = gSTNO != null ?
                new ObjectParameter("GSTNO", gSTNO) :
                new ObjectParameter("GSTNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("chgaddress_Sp", regidParameter, maidennameParameter, dobParameter, sexParameter, mobileParameter, add1Parameter, add2Parameter, districtParameter, stateParameter, cityParameter, pinParameter, emailParameter, cordistrictParameter, corstateParameter, corcityParameter, corpinParameter, gSTNOParameter);
        }
    
        public virtual ObjectResult<string> chgbank_Sp(Nullable<decimal> regid, string payeeName, string panno, string bank, string accno, string branch, string ifscode)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var payeeNameParameter = payeeName != null ?
                new ObjectParameter("PayeeName", payeeName) :
                new ObjectParameter("PayeeName", typeof(string));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var accnoParameter = accno != null ?
                new ObjectParameter("Accno", accno) :
                new ObjectParameter("Accno", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var ifscodeParameter = ifscode != null ?
                new ObjectParameter("Ifscode", ifscode) :
                new ObjectParameter("Ifscode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("chgbank_Sp", regidParameter, payeeNameParameter, pannoParameter, bankParameter, accnoParameter, branchParameter, ifscodeParameter);
        }
    
        public virtual ObjectResult<string> chgnominee_Sp(Nullable<decimal> regid, string nominee, string relation, Nullable<System.DateTime> nomineeDOB)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("Nominee", nominee) :
                new ObjectParameter("Nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("Relation", relation) :
                new ObjectParameter("Relation", typeof(string));
    
            var nomineeDOBParameter = nomineeDOB.HasValue ?
                new ObjectParameter("NomineeDOB", nomineeDOB) :
                new ObjectParameter("NomineeDOB", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("chgnominee_Sp", regidParameter, nomineeParameter, relationParameter, nomineeDOBParameter);
        }
    
        public virtual int ChgPrdDiscPv_Sp(string pcode, Nullable<decimal> oldDisc, Nullable<decimal> newDisc, Nullable<decimal> oldpv, Nullable<decimal> newpv, string changedby, string sesid)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var oldDiscParameter = oldDisc.HasValue ?
                new ObjectParameter("OldDisc", oldDisc) :
                new ObjectParameter("OldDisc", typeof(decimal));
    
            var newDiscParameter = newDisc.HasValue ?
                new ObjectParameter("NewDisc", newDisc) :
                new ObjectParameter("NewDisc", typeof(decimal));
    
            var oldpvParameter = oldpv.HasValue ?
                new ObjectParameter("oldpv", oldpv) :
                new ObjectParameter("oldpv", typeof(decimal));
    
            var newpvParameter = newpv.HasValue ?
                new ObjectParameter("newpv", newpv) :
                new ObjectParameter("newpv", typeof(decimal));
    
            var changedbyParameter = changedby != null ?
                new ObjectParameter("changedby", changedby) :
                new ObjectParameter("changedby", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("Sesid", sesid) :
                new ObjectParameter("Sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChgPrdDiscPv_Sp", pcodeParameter, oldDiscParameter, newDiscParameter, oldpvParameter, newpvParameter, changedbyParameter, sesidParameter);
        }
    
        public virtual ObjectResult<string> ChkDwnLine_sp(string idno, Nullable<decimal> regid)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ChkDwnLine_sp", idnoParameter, regidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChkEditProfileSts_SP(string action, Nullable<decimal> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChkEditProfileSts_SP", actionParameter, regidParameter);
        }
    
        public virtual ObjectResult<string> chkmemdown(string membid, string down)
        {
            var membidParameter = membid != null ?
                new ObjectParameter("membid", membid) :
                new ObjectParameter("membid", typeof(string));
    
            var downParameter = down != null ?
                new ObjectParameter("down", down) :
                new ObjectParameter("down", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("chkmemdown", membidParameter, downParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChkMemWithdrawlRequest_SP(string action, Nullable<decimal> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChkMemWithdrawlRequest_SP", actionParameter, regidParameter);
        }
    
        public virtual ObjectResult<string> ChkMobileEmail_Sp(string mobemail, string type)
        {
            var mobemailParameter = mobemail != null ?
                new ObjectParameter("mobemail", mobemail) :
                new ObjectParameter("mobemail", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ChkMobileEmail_Sp", mobemailParameter, typeParameter);
        }
    
        public virtual int Cleartmpsms_SP(string sesid)
        {
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cleartmpsms_SP", sesidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ClickAndShare_sp(string action, Nullable<int> id, string user, string description, string status, string img, string sessId, string ipAdd)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var sessIdParameter = sessId != null ?
                new ObjectParameter("SessId", sessId) :
                new ObjectParameter("SessId", typeof(string));
    
            var ipAddParameter = ipAdd != null ?
                new ObjectParameter("IpAdd", ipAdd) :
                new ObjectParameter("IpAdd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ClickAndShare_sp", actionParameter, idParameter, userParameter, descriptionParameter, statusParameter, imgParameter, sessIdParameter, ipAddParameter);
        }
    
        public virtual int CodeErrors_Sp(string userid, string pageurl, string errorMsg, string sesid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var pageurlParameter = pageurl != null ?
                new ObjectParameter("Pageurl", pageurl) :
                new ObjectParameter("Pageurl", typeof(string));
    
            var errorMsgParameter = errorMsg != null ?
                new ObjectParameter("ErrorMsg", errorMsg) :
                new ObjectParameter("ErrorMsg", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CodeErrors_Sp", useridParameter, pageurlParameter, errorMsgParameter, sesidParameter);
        }
    
        public virtual int ComboSCOrder_SP(string aciton, string idno, Nullable<decimal> regid, string packcode, Nullable<int> pid, string fname, string lName, string mobile, string address, string city, string district, string state, string piCode, string ordertype, Nullable<decimal> shpchrg, string scmemtype, string sesid, string mop, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch)
        {
            var acitonParameter = aciton != null ?
                new ObjectParameter("Aciton", aciton) :
                new ObjectParameter("Aciton", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var packcodeParameter = packcode != null ?
                new ObjectParameter("packcode", packcode) :
                new ObjectParameter("packcode", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var piCodeParameter = piCode != null ?
                new ObjectParameter("PiCode", piCode) :
                new ObjectParameter("PiCode", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ComboSCOrder_SP", acitonParameter, idnoParameter, regidParameter, packcodeParameter, pidParameter, fnameParameter, lNameParameter, mobileParameter, addressParameter, cityParameter, districtParameter, stateParameter, piCodeParameter, ordertypeParameter, shpchrgParameter, scmemtypeParameter, sesidParameter, mopParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter);
        }
    
        public virtual int CompanyNotifications_SP(string type, Nullable<int> regid, string gcmid, string subject, string message, string image, string url)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var gcmidParameter = gcmid != null ?
                new ObjectParameter("gcmid", gcmid) :
                new ObjectParameter("gcmid", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyNotifications_SP", typeParameter, regidParameter, gcmidParameter, subjectParameter, messageParameter, imageParameter, urlParameter);
        }
    
        public virtual ObjectResult<ConfirmationNote_Sp_Result> ConfirmationNote_Sp(Nullable<decimal> memid)
        {
            var memidParameter = memid.HasValue ?
                new ObjectParameter("memid", memid) :
                new ObjectParameter("memid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConfirmationNote_Sp_Result>("ConfirmationNote_Sp", memidParameter);
        }
    
        public virtual ObjectResult<string> CourierMaster_SP(string action)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CourierMaster_SP", actionParameter);
        }
    
        public virtual ObjectResult<CourierNames_sp_Result> CourierNames_sp(string action)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourierNames_sp_Result>("CourierNames_sp", actionParameter);
        }
    
        public virtual int CourierStatusRpt_Sp(string status, string batchNo, Nullable<decimal> regid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CourierStatusRpt_Sp", statusParameter, batchNoParameter, regidParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Craterpcategories_SP(string category, string subCategory, string subCategoryone, string subCategorytwo, Nullable<int> createdBy, string sesid)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var subCategoryoneParameter = subCategoryone != null ?
                new ObjectParameter("SubCategoryone", subCategoryone) :
                new ObjectParameter("SubCategoryone", typeof(string));
    
            var subCategorytwoParameter = subCategorytwo != null ?
                new ObjectParameter("SubCategorytwo", subCategorytwo) :
                new ObjectParameter("SubCategorytwo", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("Sesid", sesid) :
                new ObjectParameter("Sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Craterpcategories_SP", categoryParameter, subCategoryParameter, subCategoryoneParameter, subCategorytwoParameter, createdByParameter, sesidParameter);
        }
    
        public virtual ObjectResult<string> CreateFolder_SP(string folderName, string memId)
        {
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var memIdParameter = memId != null ?
                new ObjectParameter("MemId", memId) :
                new ObjectParameter("MemId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateFolder_SP", folderNameParameter, memIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CreateWalletOffer_Sp(string action, string offerCode, string pcode, string offName, string offType, Nullable<decimal> walletValue, Nullable<int> pid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string sessid, string ipaddress, Nullable<int> createdby, string remarks, Nullable<int> status)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var offerCodeParameter = offerCode != null ?
                new ObjectParameter("OfferCode", offerCode) :
                new ObjectParameter("OfferCode", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var offNameParameter = offName != null ?
                new ObjectParameter("offName", offName) :
                new ObjectParameter("offName", typeof(string));
    
            var offTypeParameter = offType != null ?
                new ObjectParameter("OffType", offType) :
                new ObjectParameter("OffType", typeof(string));
    
            var walletValueParameter = walletValue.HasValue ?
                new ObjectParameter("WalletValue", walletValue) :
                new ObjectParameter("WalletValue", typeof(decimal));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateWalletOffer_Sp", actionParameter, offerCodeParameter, pcodeParameter, offNameParameter, offTypeParameter, walletValueParameter, pidParameter, frmdateParameter, todateParameter, sessidParameter, ipaddressParameter, createdbyParameter, remarksParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> CreditPosting_sp(string action, string regid, Nullable<decimal> amount, string billno, string uNQId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreditPosting_sp", actionParameter, regidParameter, amountParameter, billnoParameter, uNQIdParameter);
        }
    
        public virtual ObjectResult<CreditReqPending_SP_Result> CreditReqPending_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreditReqPending_SP_Result>("CreditReqPending_SP");
        }
    
        public virtual ObjectResult<Nullable<int>> CreditRequestOnlineInsert_Sp(string action, Nullable<int> regid, Nullable<decimal> reqAmt, string mop, string refno, Nullable<System.DateTime> invdate, string invbank, string invbranch, string depbank, string depbranch, string depcity, Nullable<System.DateTime> depdate, string depslip, string remarks, string oRDER_ID, string paymentStatus, string billStatus, string tXNID, string recode, string pgtype)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var reqAmtParameter = reqAmt.HasValue ?
                new ObjectParameter("reqAmt", reqAmt) :
                new ObjectParameter("reqAmt", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var refnoParameter = refno != null ?
                new ObjectParameter("Refno", refno) :
                new ObjectParameter("Refno", typeof(string));
    
            var invdateParameter = invdate.HasValue ?
                new ObjectParameter("invdate", invdate) :
                new ObjectParameter("invdate", typeof(System.DateTime));
    
            var invbankParameter = invbank != null ?
                new ObjectParameter("invbank", invbank) :
                new ObjectParameter("invbank", typeof(string));
    
            var invbranchParameter = invbranch != null ?
                new ObjectParameter("invbranch", invbranch) :
                new ObjectParameter("invbranch", typeof(string));
    
            var depbankParameter = depbank != null ?
                new ObjectParameter("depbank", depbank) :
                new ObjectParameter("depbank", typeof(string));
    
            var depbranchParameter = depbranch != null ?
                new ObjectParameter("depbranch", depbranch) :
                new ObjectParameter("depbranch", typeof(string));
    
            var depcityParameter = depcity != null ?
                new ObjectParameter("depcity", depcity) :
                new ObjectParameter("depcity", typeof(string));
    
            var depdateParameter = depdate.HasValue ?
                new ObjectParameter("depdate", depdate) :
                new ObjectParameter("depdate", typeof(System.DateTime));
    
            var depslipParameter = depslip != null ?
                new ObjectParameter("depslip", depslip) :
                new ObjectParameter("depslip", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var billStatusParameter = billStatus != null ?
                new ObjectParameter("BillStatus", billStatus) :
                new ObjectParameter("BillStatus", typeof(string));
    
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var recodeParameter = recode != null ?
                new ObjectParameter("Recode", recode) :
                new ObjectParameter("Recode", typeof(string));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreditRequestOnlineInsert_Sp", actionParameter, regidParameter, reqAmtParameter, mopParameter, refnoParameter, invdateParameter, invbankParameter, invbranchParameter, depbankParameter, depbranchParameter, depcityParameter, depdateParameter, depslipParameter, remarksParameter, oRDER_IDParameter, paymentStatusParameter, billStatusParameter, tXNIDParameter, recodeParameter, pgtypeParameter);
        }
    
        public virtual ObjectResult<CreditRequestOnlinepaymentFailed_Sp_Result> CreditRequestOnlinepaymentFailed_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreditRequestOnlinepaymentFailed_Sp_Result>("CreditRequestOnlinepaymentFailed_Sp", frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int CreditRequestOnlinepaymentSuccess_Sp(string searchid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, string pgtype)
        {
            var searchidParameter = searchid != null ?
                new ObjectParameter("searchid", searchid) :
                new ObjectParameter("searchid", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreditRequestOnlinepaymentSuccess_Sp", searchidParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, pgtypeParameter);
        }
    
        public virtual ObjectResult<CurrlastloginTime_Sp_Result> CurrlastloginTime_Sp(Nullable<decimal> loginid, string sesid, string usertype)
        {
            var loginidParameter = loginid.HasValue ?
                new ObjectParameter("Loginid", loginid) :
                new ObjectParameter("Loginid", typeof(decimal));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CurrlastloginTime_Sp_Result>("CurrlastloginTime_Sp", loginidParameter, sesidParameter, usertypeParameter);
        }
    
        public virtual int DailyDIST_CANCELLATION_Alert_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyDIST_CANCELLATION_Alert_sp");
        }
    
        public virtual int DailyDIST_SHIP_CANCELLATION_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyDIST_SHIP_CANCELLATION_sp");
        }
    
        public virtual ObjectResult<DateWiseBusinessReport_Sp_Result> DateWiseBusinessReport_Sp(string action, string type, Nullable<System.DateTime> date, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DateWiseBusinessReport_Sp_Result>("DateWiseBusinessReport_Sp", actionParameter, typeParameter, dateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<DayStatisticsRpt_sp_Result> DayStatisticsRpt_sp(string action, string type, string regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DayStatisticsRpt_sp_Result>("DayStatisticsRpt_sp", actionParameter, typeParameter, regidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DeleteBulkMail_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DeleteBulkMail_SP", mailIdParameter);
        }
    
        public virtual int DeleteFranchiseBill(string billNo)
        {
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFranchiseBill", billNoParameter);
        }
    
        public virtual int DeleteMail_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMail_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DeleteSentMails_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DeleteSentMails_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DelStockUsers_Sp(Nullable<int> itemid, Nullable<int> uid)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DelStockUsers_Sp", itemidParameter, uidParameter);
        }
    
        public virtual int DelTempAddToCart_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelTempAddToCart_sp");
        }
    
        public virtual int DelTempCart_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelTempCart_sp");
        }
    
        public virtual ObjectResult<Nullable<int>> DespBatchExcel_SP(string action, string invno, string dockNo, Nullable<System.DateTime> dockDate, string batchNo, string bank, string idno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var invnoParameter = invno != null ?
                new ObjectParameter("Invno", invno) :
                new ObjectParameter("Invno", typeof(string));
    
            var dockNoParameter = dockNo != null ?
                new ObjectParameter("DockNo", dockNo) :
                new ObjectParameter("DockNo", typeof(string));
    
            var dockDateParameter = dockDate.HasValue ?
                new ObjectParameter("DockDate", dockDate) :
                new ObjectParameter("DockDate", typeof(System.DateTime));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("batchNo", batchNo) :
                new ObjectParameter("batchNo", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DespBatchExcel_SP", actionParameter, invnoParameter, dockNoParameter, dockDateParameter, batchNoParameter, bankParameter, idnoParameter);
        }
    
        public virtual ObjectResult<DespBatchExcelRpt_SP_Result> DespBatchExcelRpt_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DespBatchExcelRpt_SP_Result>("DespBatchExcelRpt_SP");
        }
    
        public virtual ObjectResult<DispatchItemCodes_Sp_Result> DispatchItemCodes_Sp(string action, string fullitemcode, string packcode)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var packcodeParameter = packcode != null ?
                new ObjectParameter("packcode", packcode) :
                new ObjectParameter("packcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DispatchItemCodes_Sp_Result>("DispatchItemCodes_Sp", actionParameter, fullitemcodeParameter, packcodeParameter);
        }
    
        public virtual ObjectResult<DispatchItems_Sp_Result> DispatchItems_Sp(string action, string idno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DispatchItems_Sp_Result>("DispatchItems_Sp", actionParameter, idnoParameter);
        }
    
        public virtual ObjectResult<Dispatchs_Sp_Result> Dispatchs_Sp(string action, string dispType, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var dispTypeParameter = dispType != null ?
                new ObjectParameter("dispType", dispType) :
                new ObjectParameter("dispType", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dispatchs_Sp_Result>("Dispatchs_Sp", actionParameter, dispTypeParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int DisplayItemsSearch_sp(string stype, string sCategory, string sName, Nullable<int> rpcid, string field, Nullable<decimal> price, Nullable<decimal> cV, Nullable<decimal> highprice, Nullable<decimal> highcv)
        {
            var stypeParameter = stype != null ?
                new ObjectParameter("stype", stype) :
                new ObjectParameter("stype", typeof(string));
    
            var sCategoryParameter = sCategory != null ?
                new ObjectParameter("SCategory", sCategory) :
                new ObjectParameter("SCategory", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("SName", sName) :
                new ObjectParameter("SName", typeof(string));
    
            var rpcidParameter = rpcid.HasValue ?
                new ObjectParameter("rpcid", rpcid) :
                new ObjectParameter("rpcid", typeof(int));
    
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var cVParameter = cV.HasValue ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(decimal));
    
            var highpriceParameter = highprice.HasValue ?
                new ObjectParameter("highprice", highprice) :
                new ObjectParameter("highprice", typeof(decimal));
    
            var highcvParameter = highcv.HasValue ?
                new ObjectParameter("highcv", highcv) :
                new ObjectParameter("highcv", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DisplayItemsSearch_sp", stypeParameter, sCategoryParameter, sNameParameter, rpcidParameter, fieldParameter, priceParameter, cVParameter, highpriceParameter, highcvParameter);
        }
    
        public virtual ObjectResult<Downloadfiles_SP_Result> Downloadfiles_SP(string action, Nullable<int> sno, Nullable<int> status)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Downloadfiles_SP_Result>("Downloadfiles_SP", actionParameter, snoParameter, statusParameter);
        }
    
        public virtual ObjectResult<Editfranchise_sp_Result> Editfranchise_sp(string fCCode)
        {
            var fCCodeParameter = fCCode != null ?
                new ObjectParameter("FCCode", fCCode) :
                new ObjectParameter("FCCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Editfranchise_sp_Result>("Editfranchise_sp", fCCodeParameter);
        }
    
        public virtual ObjectResult<EditOrderItems_Sp_Result> EditOrderItems_Sp(string action, string idno, Nullable<int> pid, string itemcode, Nullable<int> packcode, string billno, Nullable<int> prices)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var packcodeParameter = packcode.HasValue ?
                new ObjectParameter("packcode", packcode) :
                new ObjectParameter("packcode", typeof(int));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var pricesParameter = prices.HasValue ?
                new ObjectParameter("prices", prices) :
                new ObjectParameter("prices", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditOrderItems_Sp_Result>("EditOrderItems_Sp", actionParameter, idnoParameter, pidParameter, itemcodeParameter, packcodeParameter, billnoParameter, pricesParameter);
        }
    
        public virtual ObjectResult<Editrpcategories_SP_Result> Editrpcategories_SP(string action, string category)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Editrpcategories_SP_Result>("Editrpcategories_SP", actionParameter, categoryParameter);
        }
    
        public virtual int EstimateStock_SP(string action, string packcodes, string packQtys)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var packcodesParameter = packcodes != null ?
                new ObjectParameter("Packcodes", packcodes) :
                new ObjectParameter("Packcodes", typeof(string));
    
            var packQtysParameter = packQtys != null ?
                new ObjectParameter("PackQtys", packQtys) :
                new ObjectParameter("PackQtys", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstimateStock_SP", actionParameter, packcodesParameter, packQtysParameter);
        }
    
        public virtual ObjectResult<EwalletSummaryRpt_Sp_Result> EwalletSummaryRpt_Sp(string action, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<decimal> balance)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EwalletSummaryRpt_Sp_Result>("EwalletSummaryRpt_Sp", actionParameter, frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pageSizeParameter, balanceParameter);
        }
    
        public virtual ObjectResult<EwalletSummaryRpt1_Sp_Result> EwalletSummaryRpt1_Sp(string action, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<decimal> balance, Nullable<int> payno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(decimal));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EwalletSummaryRpt1_Sp_Result>("EwalletSummaryRpt1_Sp", actionParameter, frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pageSizeParameter, balanceParameter, paynoParameter);
        }
    
        public virtual ObjectResult<string> ExistFranchiseIdno_Sp(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExistFranchiseIdno_Sp", idnoParameter);
        }
    
        public virtual ObjectResult<Faqreport_Result> Faqreport(string type, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> pagesize, Nullable<int> pageIndex)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Faqreport_Result>("Faqreport", typeParameter, fromdateParameter, todateParameter, pagesizeParameter, pageIndexParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FAQSRpt_Sp(string action, Nullable<int> faqid, string question, string answer, Nullable<int> user, string sessid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var faqidParameter = faqid.HasValue ?
                new ObjectParameter("faqid", faqid) :
                new ObjectParameter("faqid", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FAQSRpt_Sp", actionParameter, faqidParameter, questionParameter, answerParameter, userParameter, sessidParameter);
        }
    
        public virtual int FCP_StockDispatch_Sp(string action, string fullitemcode, string idno, string courier, string sesid, string ipadd, Nullable<int> saleto, string fcode, ObjectParameter resRefNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("courier", courier) :
                new ObjectParameter("courier", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            var saletoParameter = saleto.HasValue ?
                new ObjectParameter("saleto", saleto) :
                new ObjectParameter("saleto", typeof(int));
    
            var fcodeParameter = fcode != null ?
                new ObjectParameter("Fcode", fcode) :
                new ObjectParameter("Fcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FCP_StockDispatch_Sp", actionParameter, fullitemcodeParameter, idnoParameter, courierParameter, sesidParameter, ipaddParameter, saletoParameter, fcodeParameter, resRefNo);
        }
    
        public virtual ObjectResult<string> fcpCreditReq_Sp(string fcode, Nullable<decimal> reqamt, string mOP, string no, Nullable<System.DateTime> date, string bank, string branch, string varcharNo, Nullable<System.DateTime> cDate, string remarks, string depBank, string depBranch, string depCity, Nullable<System.DateTime> depDate, string depSlip)
        {
            var fcodeParameter = fcode != null ?
                new ObjectParameter("fcode", fcode) :
                new ObjectParameter("fcode", typeof(string));
    
            var reqamtParameter = reqamt.HasValue ?
                new ObjectParameter("reqamt", reqamt) :
                new ObjectParameter("reqamt", typeof(decimal));
    
            var mOPParameter = mOP != null ?
                new ObjectParameter("MOP", mOP) :
                new ObjectParameter("MOP", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("no", no) :
                new ObjectParameter("no", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var varcharNoParameter = varcharNo != null ?
                new ObjectParameter("VarcharNo", varcharNo) :
                new ObjectParameter("VarcharNo", typeof(string));
    
            var cDateParameter = cDate.HasValue ?
                new ObjectParameter("CDate", cDate) :
                new ObjectParameter("CDate", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var depBankParameter = depBank != null ?
                new ObjectParameter("DepBank", depBank) :
                new ObjectParameter("DepBank", typeof(string));
    
            var depBranchParameter = depBranch != null ?
                new ObjectParameter("DepBranch", depBranch) :
                new ObjectParameter("DepBranch", typeof(string));
    
            var depCityParameter = depCity != null ?
                new ObjectParameter("DepCity", depCity) :
                new ObjectParameter("DepCity", typeof(string));
    
            var depDateParameter = depDate.HasValue ?
                new ObjectParameter("DepDate", depDate) :
                new ObjectParameter("DepDate", typeof(System.DateTime));
    
            var depSlipParameter = depSlip != null ?
                new ObjectParameter("DepSlip", depSlip) :
                new ObjectParameter("DepSlip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("fcpCreditReq_Sp", fcodeParameter, reqamtParameter, mOPParameter, noParameter, dateParameter, bankParameter, branchParameter, varcharNoParameter, cDateParameter, remarksParameter, depBankParameter, depBranchParameter, depCityParameter, depDateParameter, depSlipParameter);
        }
    
        public virtual ObjectResult<FCPGlance_SP_Result> FCPGlance_SP(Nullable<System.DateTime> date, string user)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FCPGlance_SP_Result>("FCPGlance_SP", dateParameter, userParameter);
        }
    
        public virtual ObjectResult<FCPLogin_Sp_Result> FCPLogin_Sp(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FCPLogin_Sp_Result>("FCPLogin_Sp", usernameParameter, passwordParameter);
        }
    
        public virtual int Filters_sp(string action, Nullable<int> rpcid, string category, string pName, string field, Nullable<decimal> price, Nullable<decimal> cV, Nullable<decimal> highprice, Nullable<decimal> highcv)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var rpcidParameter = rpcid.HasValue ?
                new ObjectParameter("rpcid", rpcid) :
                new ObjectParameter("rpcid", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var pNameParameter = pName != null ?
                new ObjectParameter("PName", pName) :
                new ObjectParameter("PName", typeof(string));
    
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var cVParameter = cV.HasValue ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(decimal));
    
            var highpriceParameter = highprice.HasValue ?
                new ObjectParameter("highprice", highprice) :
                new ObjectParameter("highprice", typeof(decimal));
    
            var highcvParameter = highcv.HasValue ?
                new ObjectParameter("highcv", highcv) :
                new ObjectParameter("highcv", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Filters_sp", actionParameter, rpcidParameter, categoryParameter, pNameParameter, fieldParameter, priceParameter, cVParameter, highpriceParameter, highcvParameter);
        }
    
        public virtual ObjectResult<FundTransfer_sp_Result> FundTransfer_sp(string regid, string idno, Nullable<int> amount, string remarks, string sessid)
        {
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FundTransfer_sp_Result>("FundTransfer_sp", regidParameter, idnoParameter, amountParameter, remarksParameter, sessidParameter);
        }
    
        public virtual int GenerateCoupons_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateCoupons_sp");
        }
    
        public virtual ObjectResult<Nullable<int>> GetAllcategories_SP(string action, string category, string category1, string category2)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var category1Parameter = category1 != null ?
                new ObjectParameter("category1", category1) :
                new ObjectParameter("category1", typeof(string));
    
            var category2Parameter = category2 != null ?
                new ObjectParameter("category2", category2) :
                new ObjectParameter("category2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAllcategories_SP", actionParameter, categoryParameter, category1Parameter, category2Parameter);
        }
    
        public virtual ObjectResult<GetApprovePODetailes_SP_Result> GetApprovePODetailes_SP(Nullable<int> payno)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovePODetailes_SP_Result>("GetApprovePODetailes_SP", paynoParameter);
        }
    
        public virtual ObjectResult<string> GetAttach_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAttach_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetAvailableQty_Sp(string action, string pCode, string itemcode, Nullable<int> availQty, Nullable<int> ordQty, Nullable<int> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var pCodeParameter = pCode != null ?
                new ObjectParameter("PCode", pCode) :
                new ObjectParameter("PCode", typeof(string));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var availQtyParameter = availQty.HasValue ?
                new ObjectParameter("AvailQty", availQty) :
                new ObjectParameter("AvailQty", typeof(int));
    
            var ordQtyParameter = ordQty.HasValue ?
                new ObjectParameter("OrdQty", ordQty) :
                new ObjectParameter("OrdQty", typeof(int));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAvailableQty_Sp", actionParameter, pCodeParameter, itemcodeParameter, availQtyParameter, ordQtyParameter, regidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAvlQtyforStockAdj_FCP_Sp(string action, string itemcode, string fCode)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var fCodeParameter = fCode != null ?
                new ObjectParameter("FCode", fCode) :
                new ObjectParameter("FCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAvlQtyforStockAdj_FCP_Sp", actionParameter, itemcodeParameter, fCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAvlQtyforStockAdj_Sp(string action, string itemcode)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAvlQtyforStockAdj_Sp", actionParameter, itemcodeParameter);
        }
    
        public virtual int GetBatch_Sp(string tblname, string getcolum, string columnItem, string itemId, string batchno)
        {
            var tblnameParameter = tblname != null ?
                new ObjectParameter("tblname", tblname) :
                new ObjectParameter("tblname", typeof(string));
    
            var getcolumParameter = getcolum != null ?
                new ObjectParameter("getcolum", getcolum) :
                new ObjectParameter("getcolum", typeof(string));
    
            var columnItemParameter = columnItem != null ?
                new ObjectParameter("columnItem", columnItem) :
                new ObjectParameter("columnItem", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            var batchnoParameter = batchno != null ?
                new ObjectParameter("Batchno", batchno) :
                new ObjectParameter("Batchno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBatch_Sp", tblnameParameter, getcolumParameter, columnItemParameter, itemIdParameter, batchnoParameter);
        }
    
        public virtual ObjectResult<GetBatchForBatchOut_Sp_Result> GetBatchForBatchOut_Sp(string action, string courier, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("Courier", courier) :
                new ObjectParameter("Courier", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchForBatchOut_Sp_Result>("GetBatchForBatchOut_Sp", actionParameter, courierParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<GetBinaryAnalysis_Sp_Result> GetBinaryAnalysis_Sp(Nullable<long> pageIndex, Nullable<long> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBinaryAnalysis_Sp_Result>("GetBinaryAnalysis_Sp", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetBulkMailCount(Nullable<int> mRead, string mStatus)
        {
            var mReadParameter = mRead.HasValue ?
                new ObjectParameter("MRead", mRead) :
                new ObjectParameter("MRead", typeof(int));
    
            var mStatusParameter = mStatus != null ?
                new ObjectParameter("MStatus", mStatus) :
                new ObjectParameter("MStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetBulkMailCount", mReadParameter, mStatusParameter);
        }
    
        public virtual ObjectResult<GetBulkMails_SP_Result> GetBulkMails_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBulkMails_SP_Result>("GetBulkMails_SP");
        }
    
        public virtual ObjectResult<string> GetBulkMessage_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetBulkMessage_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<GetBulkMessageSubject_SP_Result> GetBulkMessageSubject_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBulkMessageSubject_SP_Result>("GetBulkMessageSubject_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetCitysInState_Sp(string stateid)
        {
            var stateidParameter = stateid != null ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCitysInState_Sp", stateidParameter);
        }
    
        public virtual ObjectResult<GetCompanyBanks_Sp_Result> GetCompanyBanks_Sp(Nullable<int> cbid)
        {
            var cbidParameter = cbid.HasValue ?
                new ObjectParameter("cbid", cbid) :
                new ObjectParameter("cbid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyBanks_Sp_Result>("GetCompanyBanks_Sp", cbidParameter);
        }
    
        public virtual ObjectResult<string> GetCouponAmount_sp(string action, string coupon, Nullable<int> regid, Nullable<decimal> invamt)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var couponParameter = coupon != null ?
                new ObjectParameter("coupon", coupon) :
                new ObjectParameter("coupon", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var invamtParameter = invamt.HasValue ?
                new ObjectParameter("invamt", invamt) :
                new ObjectParameter("invamt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCouponAmount_sp", actionParameter, couponParameter, regidParameter, invamtParameter);
        }
    
        public virtual ObjectResult<GetCreditreq_sp_Result> GetCreditreq_sp(string reqcode)
        {
            var reqcodeParameter = reqcode != null ?
                new ObjectParameter("reqcode", reqcode) :
                new ObjectParameter("reqcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditreq_sp_Result>("GetCreditreq_sp", reqcodeParameter);
        }
    
        public virtual int GetCreditReqRpt_SP(Nullable<int> reqstatus, Nullable<int> cbank, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<long> pageIndex, Nullable<long> pagesize)
        {
            var reqstatusParameter = reqstatus.HasValue ?
                new ObjectParameter("reqstatus", reqstatus) :
                new ObjectParameter("reqstatus", typeof(int));
    
            var cbankParameter = cbank.HasValue ?
                new ObjectParameter("cbank", cbank) :
                new ObjectParameter("cbank", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("Frmdate", frmdate) :
                new ObjectParameter("Frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCreditReqRpt_SP", reqstatusParameter, cbankParameter, frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<GetCreditRequestOnline_SP_Result> GetCreditRequestOnline_SP(string oRDERID)
        {
            var oRDERIDParameter = oRDERID != null ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditRequestOnline_SP_Result>("GetCreditRequestOnline_SP", oRDERIDParameter);
        }
    
        public virtual int GetData_Sp(string tblname, string columnItem, string itemId)
        {
            var tblnameParameter = tblname != null ?
                new ObjectParameter("tblname", tblname) :
                new ObjectParameter("tblname", typeof(string));
    
            var columnItemParameter = columnItem != null ?
                new ObjectParameter("columnItem", columnItem) :
                new ObjectParameter("columnItem", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetData_Sp", tblnameParameter, columnItemParameter, itemIdParameter);
        }
    
        public virtual ObjectResult<GetDraftMsg_SP_Result> GetDraftMsg_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDraftMsg_SP_Result>("GetDraftMsg_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<GetEBSPending_Result> GetEBSPending()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEBSPending_Result>("GetEBSPending");
        }
    
        public virtual ObjectResult<string> GetEwalBalance_SP(string action, Nullable<decimal> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEwalBalance_SP", actionParameter, regidParameter);
        }
    
        public virtual ObjectResult<GetFCcode_Sp_Result> GetFCcode_Sp(string action)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFCcode_Sp_Result>("GetFCcode_Sp", actionParameter);
        }
    
        public virtual ObjectResult<GetFCPCreditReqRpt_SP_Result> GetFCPCreditReqRpt_SP(string action, Nullable<int> reqstatus, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string fcode, Nullable<long> pageIndex, Nullable<long> pagesize, string reqcode)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var reqstatusParameter = reqstatus.HasValue ?
                new ObjectParameter("reqstatus", reqstatus) :
                new ObjectParameter("reqstatus", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("Frmdate", frmdate) :
                new ObjectParameter("Frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fcodeParameter = fcode != null ?
                new ObjectParameter("fcode", fcode) :
                new ObjectParameter("fcode", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            var reqcodeParameter = reqcode != null ?
                new ObjectParameter("reqcode", reqcode) :
                new ObjectParameter("reqcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFCPCreditReqRpt_SP_Result>("GetFCPCreditReqRpt_SP", actionParameter, reqstatusParameter, frmdateParameter, todateParameter, fcodeParameter, pageIndexParameter, pagesizeParameter, reqcodeParameter);
        }
    
        public virtual ObjectResult<GetFeedback_sp_Result> GetFeedback_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedback_sp_Result>("GetFeedback_sp");
        }
    
        public virtual ObjectResult<GetFolderMails_SP_Result> GetFolderMails_SP(string mailId, Nullable<int> folderId)
        {
            var mailIdParameter = mailId != null ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(string));
    
            var folderIdParameter = folderId.HasValue ?
                new ObjectParameter("FolderId", folderId) :
                new ObjectParameter("FolderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderMails_SP_Result>("GetFolderMails_SP", mailIdParameter, folderIdParameter);
        }
    
        public virtual ObjectResult<GetGVDPurchaseOnline_SP_Result> GetGVDPurchaseOnline_SP(string oRDERID)
        {
            var oRDERIDParameter = oRDERID != null ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGVDPurchaseOnline_SP_Result>("GetGVDPurchaseOnline_SP", oRDERIDParameter);
        }
    
        public virtual ObjectResult<string> GetItemCodesFromAttributes_Sp(string pCode, string fields)
        {
            var pCodeParameter = pCode != null ?
                new ObjectParameter("PCode", pCode) :
                new ObjectParameter("PCode", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("fields", fields) :
                new ObjectParameter("fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetItemCodesFromAttributes_Sp", pCodeParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<string> GetItemCodesFromAttributes33_Sp(string pCode, string fields)
        {
            var pCodeParameter = pCode != null ?
                new ObjectParameter("PCode", pCode) :
                new ObjectParameter("PCode", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("fields", fields) :
                new ObjectParameter("fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetItemCodesFromAttributes33_Sp", pCodeParameter, fieldsParameter);
        }
    
        public virtual int GetItemCodesfrombillno_sp(string billno, ObjectParameter itemcodes)
        {
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetItemCodesfrombillno_sp", billnoParameter, itemcodes);
        }
    
        public virtual ObjectResult<GetmailCount_Sp_Result> GetmailCount_Sp(string mailId)
        {
            var mailIdParameter = mailId != null ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetmailCount_Sp_Result>("GetmailCount_Sp", mailIdParameter);
        }
    
        public virtual ObjectResult<GetMailfoldersname_SP_Result> GetMailfoldersname_SP(string memid)
        {
            var memidParameter = memid != null ?
                new ObjectParameter("Memid", memid) :
                new ObjectParameter("Memid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMailfoldersname_SP_Result>("GetMailfoldersname_SP", memidParameter);
        }
    
        public virtual ObjectResult<GetMails_SP_Result> GetMails_SP(string mailId)
        {
            var mailIdParameter = mailId != null ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMails_SP_Result>("GetMails_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<GetMemberDetails_Result> GetMemberDetails(string idno, string type)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMemberDetails_Result>("GetMemberDetails", idnoParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetMemberId_Result> GetMemberId(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMemberId_Result>("GetMemberId", uidParameter);
        }
    
        public virtual ObjectResult<GetMemforBirthdaysms_Sp_Result> GetMemforBirthdaysms_Sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMemforBirthdaysms_Sp_Result>("GetMemforBirthdaysms_Sp");
        }
    
        public virtual ObjectResult<string> GetMemMails_sp(string action, string reqno, Nullable<int> regid, Nullable<int> id, string type)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var reqnoParameter = reqno != null ?
                new ObjectParameter("Reqno", reqno) :
                new ObjectParameter("Reqno", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMemMails_sp", actionParameter, reqnoParameter, regidParameter, idParameter, typeParameter);
        }
    
        public virtual ObjectResult<string> GetMessage_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMessage_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetMessageDate_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMessageDate_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetMessageFrom_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMessageFrom_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetMessageSubject_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMessageSubject_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetMessageTo_SP(Nullable<int> mailId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMessageTo_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetMinRegIdDuplicateIdsRpt_SP(string fname, string lname, string userName, Nullable<System.DateTime> dob, string mobile, string email)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMinRegIdDuplicateIdsRpt_SP", fnameParameter, lnameParameter, userNameParameter, dobParameter, mobileParameter, emailParameter);
        }
    
        public virtual ObjectResult<GetPayNo_SP_Result> GetPayNo_SP(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPayNo_SP_Result>("GetPayNo_SP", typeParameter);
        }
    
        public virtual ObjectResult<string> GetRegFields_Sp(string action, string fname1, string lname1, string dob1, string careof1, string mobile1, string eMai1l)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fname1Parameter = fname1 != null ?
                new ObjectParameter("fname1", fname1) :
                new ObjectParameter("fname1", typeof(string));
    
            var lname1Parameter = lname1 != null ?
                new ObjectParameter("lname1", lname1) :
                new ObjectParameter("lname1", typeof(string));
    
            var dob1Parameter = dob1 != null ?
                new ObjectParameter("dob1", dob1) :
                new ObjectParameter("dob1", typeof(string));
    
            var careof1Parameter = careof1 != null ?
                new ObjectParameter("careof1", careof1) :
                new ObjectParameter("careof1", typeof(string));
    
            var mobile1Parameter = mobile1 != null ?
                new ObjectParameter("mobile1", mobile1) :
                new ObjectParameter("mobile1", typeof(string));
    
            var eMai1lParameter = eMai1l != null ?
                new ObjectParameter("eMai1l", eMai1l) :
                new ObjectParameter("eMai1l", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRegFields_Sp", actionParameter, fname1Parameter, lname1Parameter, dob1Parameter, careof1Parameter, mobile1Parameter, eMai1lParameter);
        }
    
        public virtual ObjectResult<GetRegistrationOnline_SP_Result> GetRegistrationOnline_SP(string oRDERID)
        {
            var oRDERIDParameter = oRDERID != null ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegistrationOnline_SP_Result>("GetRegistrationOnline_SP", oRDERIDParameter);
        }
    
        public virtual ObjectResult<string> GetReport_Sp(string action, string type, string regid, Nullable<int> payno, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetReport_Sp", actionParameter, typeParameter, regidParameter, paynoParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int GetRewardsReport_Sp(string action, string type, string regid, Nullable<int> payno, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRewardsReport_Sp", actionParameter, typeParameter, regidParameter, paynoParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<string> Getrpcategories_SP(string action, string category, string category1)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var category1Parameter = category1 != null ?
                new ObjectParameter("category1", category1) :
                new ObjectParameter("category1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Getrpcategories_SP", actionParameter, categoryParameter, category1Parameter);
        }
    
        public virtual ObjectResult<string> Getrpcategories_SP_10_06_16(string action, string category, string category1)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var category1Parameter = category1 != null ?
                new ObjectParameter("category1", category1) :
                new ObjectParameter("category1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Getrpcategories_SP_10_06_16", actionParameter, categoryParameter, category1Parameter);
        }
    
        public virtual ObjectResult<GetSCOnline_SP_Result> GetSCOnline_SP(string oRDERID)
        {
            var oRDERIDParameter = oRDERID != null ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSCOnline_SP_Result>("GetSCOnline_SP", oRDERIDParameter);
        }
    
        public virtual ObjectResult<GetSentMails_SP_Result> GetSentMails_SP(string mailId)
        {
            var mailIdParameter = mailId != null ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSentMails_SP_Result>("GetSentMails_SP", mailIdParameter);
        }
    
        public virtual ObjectResult<string> GetSmsActions_Sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSmsActions_Sp");
        }
    
        public virtual ObjectResult<GetStates_Sp_Result> GetStates_Sp(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStates_Sp_Result>("GetStates_Sp", countryIDParameter);
        }
    
        public virtual ObjectResult<GetStockforReturn_Sp_Result> GetStockforReturn_Sp(string action, string refno, Nullable<decimal> pageIndex, Nullable<decimal> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var refnoParameter = refno != null ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockforReturn_Sp_Result>("GetStockforReturn_Sp", actionParameter, refnoParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<GetTDSRpt_sp_Result> GetTDSRpt_sp(string action, Nullable<int> payno, string regid, string type, string mnths, string yrs, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var mnthsParameter = mnths != null ?
                new ObjectParameter("mnths", mnths) :
                new ObjectParameter("mnths", typeof(string));
    
            var yrsParameter = yrs != null ?
                new ObjectParameter("yrs", yrs) :
                new ObjectParameter("yrs", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTDSRpt_sp_Result>("GetTDSRpt_sp", actionParameter, paynoParameter, regidParameter, typeParameter, mnthsParameter, yrsParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<GetTreeTooltip_Sp_Result> GetTreeTooltip_Sp(string membid)
        {
            var membidParameter = membid != null ?
                new ObjectParameter("membid", membid) :
                new ObjectParameter("membid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTreeTooltip_Sp_Result>("GetTreeTooltip_Sp", membidParameter);
        }
    
        public virtual int GetTreeView(string membid)
        {
            var membidParameter = membid != null ?
                new ObjectParameter("membid", membid) :
                new ObjectParameter("membid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTreeView", membidParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> GetUniqid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GetUniqid");
        }
    
        public virtual int GetValue_Sp(string tblname, string getcolum, string columnItem, string itemId)
        {
            var tblnameParameter = tblname != null ?
                new ObjectParameter("tblname", tblname) :
                new ObjectParameter("tblname", typeof(string));
    
            var getcolumParameter = getcolum != null ?
                new ObjectParameter("getcolum", getcolum) :
                new ObjectParameter("getcolum", typeof(string));
    
            var columnItemParameter = columnItem != null ?
                new ObjectParameter("columnItem", columnItem) :
                new ObjectParameter("columnItem", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetValue_Sp", tblnameParameter, getcolumParameter, columnItemParameter, itemIdParameter);
        }
    
        public virtual ObjectResult<string> GetVouchers_SP(string action, Nullable<int> regid, string sfcpCode, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var sfcpCodeParameter = sfcpCode != null ?
                new ObjectParameter("sfcpCode", sfcpCode) :
                new ObjectParameter("sfcpCode", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetVouchers_SP", actionParameter, regidParameter, sfcpCodeParameter, sesidParameter);
        }
    
        public virtual ObjectResult<string> GetWithdrawalEwalBalance_sp(string action, Nullable<decimal> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetWithdrawalEwalBalance_sp", actionParameter, regidParameter);
        }
    
        public virtual ObjectResult<Glance_SP_Result> Glance_SP(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> uid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Glance_SP_Result>("Glance_SP", fromdateParameter, todateParameter, uidParameter);
        }
    
        public virtual int GlanceReport_FCP_SP(string action, string rpttype, Nullable<System.DateTime> ondate, string username, string sts, string searchby, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var rpttypeParameter = rpttype != null ?
                new ObjectParameter("rpttype", rpttype) :
                new ObjectParameter("rpttype", typeof(string));
    
            var ondateParameter = ondate.HasValue ?
                new ObjectParameter("ondate", ondate) :
                new ObjectParameter("ondate", typeof(System.DateTime));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            var searchbyParameter = searchby != null ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(string));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlanceReport_FCP_SP", actionParameter, rpttypeParameter, ondateParameter, usernameParameter, stsParameter, searchbyParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<GlanceReport_Sp_Result> GlanceReport_Sp(string action, string rpttype, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string mailto, Nullable<int> sts, string searchby, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var rpttypeParameter = rpttype != null ?
                new ObjectParameter("rpttype", rpttype) :
                new ObjectParameter("rpttype", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var mailtoParameter = mailto != null ?
                new ObjectParameter("mailto", mailto) :
                new ObjectParameter("mailto", typeof(string));
    
            var stsParameter = sts.HasValue ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(int));
    
            var searchbyParameter = searchby != null ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(string));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlanceReport_Sp_Result>("GlanceReport_Sp", actionParameter, rpttypeParameter, fromdateParameter, todateParameter, mailtoParameter, stsParameter, searchbyParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<GVDFullPayment_sp_Result> GVDFullPayment_sp(string action, string unqId, string billno, Nullable<int> regid, Nullable<int> pid, string mOP, Nullable<decimal> payAmt, string ssid, string remarks, string ddno, string ddbank, string ddbranch, Nullable<System.DateTime> dddate)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var unqIdParameter = unqId != null ?
                new ObjectParameter("UnqId", unqId) :
                new ObjectParameter("UnqId", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var mOPParameter = mOP != null ?
                new ObjectParameter("MOP", mOP) :
                new ObjectParameter("MOP", typeof(string));
    
            var payAmtParameter = payAmt.HasValue ?
                new ObjectParameter("PayAmt", payAmt) :
                new ObjectParameter("PayAmt", typeof(decimal));
    
            var ssidParameter = ssid != null ?
                new ObjectParameter("ssid", ssid) :
                new ObjectParameter("ssid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var ddnoParameter = ddno != null ?
                new ObjectParameter("ddno", ddno) :
                new ObjectParameter("ddno", typeof(string));
    
            var ddbankParameter = ddbank != null ?
                new ObjectParameter("ddbank", ddbank) :
                new ObjectParameter("ddbank", typeof(string));
    
            var ddbranchParameter = ddbranch != null ?
                new ObjectParameter("ddbranch", ddbranch) :
                new ObjectParameter("ddbranch", typeof(string));
    
            var dddateParameter = dddate.HasValue ?
                new ObjectParameter("dddate", dddate) :
                new ObjectParameter("dddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GVDFullPayment_sp_Result>("GVDFullPayment_sp", actionParameter, unqIdParameter, billnoParameter, regidParameter, pidParameter, mOPParameter, payAmtParameter, ssidParameter, remarksParameter, ddnoParameter, ddbankParameter, ddbranchParameter, dddateParameter);
        }
    
        public virtual ObjectResult<GVDInstalPayment_sp_Result> GVDInstalPayment_sp(string action, string unqId, string billno, Nullable<int> regid, Nullable<int> pid, string mOP, Nullable<decimal> payAmt, string ssid, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var unqIdParameter = unqId != null ?
                new ObjectParameter("UnqId", unqId) :
                new ObjectParameter("UnqId", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var mOPParameter = mOP != null ?
                new ObjectParameter("MOP", mOP) :
                new ObjectParameter("MOP", typeof(string));
    
            var payAmtParameter = payAmt.HasValue ?
                new ObjectParameter("PayAmt", payAmt) :
                new ObjectParameter("PayAmt", typeof(decimal));
    
            var ssidParameter = ssid != null ?
                new ObjectParameter("ssid", ssid) :
                new ObjectParameter("ssid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GVDInstalPayment_sp_Result>("GVDInstalPayment_sp", actionParameter, unqIdParameter, billnoParameter, regidParameter, pidParameter, mOPParameter, payAmtParameter, ssidParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GVDOfferVouchers_Sp(string action, string packcode, string voucher, string offer, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var packcodeParameter = packcode != null ?
                new ObjectParameter("Packcode", packcode) :
                new ObjectParameter("Packcode", typeof(string));
    
            var voucherParameter = voucher != null ?
                new ObjectParameter("Voucher", voucher) :
                new ObjectParameter("Voucher", typeof(string));
    
            var offerParameter = offer != null ?
                new ObjectParameter("Offer", offer) :
                new ObjectParameter("Offer", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GVDOfferVouchers_Sp", actionParameter, packcodeParameter, voucherParameter, offerParameter, remarksParameter);
        }
    
        public virtual ObjectResult<GVDPurchase_Sp_Result> GVDPurchase_Sp(Nullable<decimal> regid, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch, string reftype, Nullable<int> pid, Nullable<int> bV, string fullitemcode, string sesid, string fname, string lname, string address, string mobile, string city, string district, string states, Nullable<int> pin)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(int));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("states", states) :
                new ObjectParameter("states", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GVDPurchase_Sp_Result>("GVDPurchase_Sp", regidParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter, reftypeParameter, pidParameter, bVParameter, fullitemcodeParameter, sesidParameter, fnameParameter, lnameParameter, addressParameter, mobileParameter, cityParameter, districtParameter, statesParameter, pinParameter);
        }
    
        public virtual ObjectResult<GVDPurchase_Sp1_Result> GVDPurchase_Sp1(Nullable<decimal> regid, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch, string reftype, Nullable<int> pid, Nullable<int> bV, string fullitemcode, string sesid, string fname, string lname, string address, string mobile, string city, string district, string states, Nullable<int> pin)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(int));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("states", states) :
                new ObjectParameter("states", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GVDPurchase_Sp1_Result>("GVDPurchase_Sp1", regidParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter, reftypeParameter, pidParameter, bVParameter, fullitemcodeParameter, sesidParameter, fnameParameter, lnameParameter, addressParameter, mobileParameter, cityParameter, districtParameter, statesParameter, pinParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GVDPurchaseOnlineInsert_Sp(string action, Nullable<decimal> regid, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch, string reftype, Nullable<int> pid, Nullable<int> bV, string fullitemcode, string sesid, string fname, string lname, string address, string mobile, string city, string district, string states, Nullable<int> pin, string oRDER_ID, string paymentStatus, string billStatus, string tXNID, string cUST_ID, Nullable<decimal> tXN_AMOUNT, string pgtype, string billno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(int));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("states", states) :
                new ObjectParameter("states", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var billStatusParameter = billStatus != null ?
                new ObjectParameter("BillStatus", billStatus) :
                new ObjectParameter("BillStatus", typeof(string));
    
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var cUST_IDParameter = cUST_ID != null ?
                new ObjectParameter("CUST_ID", cUST_ID) :
                new ObjectParameter("CUST_ID", typeof(string));
    
            var tXN_AMOUNTParameter = tXN_AMOUNT.HasValue ?
                new ObjectParameter("TXN_AMOUNT", tXN_AMOUNT) :
                new ObjectParameter("TXN_AMOUNT", typeof(decimal));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GVDPurchaseOnlineInsert_Sp", actionParameter, regidParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter, reftypeParameter, pidParameter, bVParameter, fullitemcodeParameter, sesidParameter, fnameParameter, lnameParameter, addressParameter, mobileParameter, cityParameter, districtParameter, statesParameter, pinParameter, oRDER_IDParameter, paymentStatusParameter, billStatusParameter, tXNIDParameter, cUST_IDParameter, tXN_AMOUNTParameter, pgtypeParameter, billnoParameter);
        }
    
        public virtual int GVDRegPGpend_SP(string uniqID, ObjectParameter billregid)
        {
            var uniqIDParameter = uniqID != null ?
                new ObjectParameter("UniqID", uniqID) :
                new ObjectParameter("UniqID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GVDRegPGpend_SP", uniqIDParameter, billregid);
        }
    
        public virtual int GVDRepPGpend_SP(string uniqID, Nullable<decimal> regid, string ordertype, string sesid, ObjectParameter billnoout)
        {
            var uniqIDParameter = uniqID != null ?
                new ObjectParameter("UniqID", uniqID) :
                new ObjectParameter("UniqID", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GVDRepPGpend_SP", uniqIDParameter, regidParameter, ordertypeParameter, sesidParameter, billnoout);
        }
    
        public virtual ObjectResult<string> IHODispatch_Sp(string action, string regid, string courierName, string iHONo, string dockNo, string approveby)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var courierNameParameter = courierName != null ?
                new ObjectParameter("CourierName", courierName) :
                new ObjectParameter("CourierName", typeof(string));
    
            var iHONoParameter = iHONo != null ?
                new ObjectParameter("IHONo", iHONo) :
                new ObjectParameter("IHONo", typeof(string));
    
            var dockNoParameter = dockNo != null ?
                new ObjectParameter("DockNo", dockNo) :
                new ObjectParameter("DockNo", typeof(string));
    
            var approvebyParameter = approveby != null ?
                new ObjectParameter("Approveby", approveby) :
                new ObjectParameter("Approveby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IHODispatch_Sp", actionParameter, regidParameter, courierNameParameter, iHONoParameter, dockNoParameter, approvebyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Inbox_SP(string mAILFROM, string mAILTO, string sUBJECT, string mSG, Nullable<System.DateTime> sENTDATE, Nullable<bool> sAVEnSEND, string fILE, string toType)
        {
            var mAILFROMParameter = mAILFROM != null ?
                new ObjectParameter("MAILFROM", mAILFROM) :
                new ObjectParameter("MAILFROM", typeof(string));
    
            var mAILTOParameter = mAILTO != null ?
                new ObjectParameter("MAILTO", mAILTO) :
                new ObjectParameter("MAILTO", typeof(string));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var mSGParameter = mSG != null ?
                new ObjectParameter("MSG", mSG) :
                new ObjectParameter("MSG", typeof(string));
    
            var sENTDATEParameter = sENTDATE.HasValue ?
                new ObjectParameter("SENTDATE", sENTDATE) :
                new ObjectParameter("SENTDATE", typeof(System.DateTime));
    
            var sAVEnSENDParameter = sAVEnSEND.HasValue ?
                new ObjectParameter("SAVEnSEND", sAVEnSEND) :
                new ObjectParameter("SAVEnSEND", typeof(bool));
    
            var fILEParameter = fILE != null ?
                new ObjectParameter("FILE", fILE) :
                new ObjectParameter("FILE", typeof(string));
    
            var toTypeParameter = toType != null ?
                new ObjectParameter("ToType", toType) :
                new ObjectParameter("ToType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Inbox_SP", mAILFROMParameter, mAILTOParameter, sUBJECTParameter, mSGParameter, sENTDATEParameter, sAVEnSENDParameter, fILEParameter, toTypeParameter);
        }
    
        public virtual ObjectResult<IneligibleRpt_Sp_Result> IneligibleRpt_Sp(string type, string val, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string idno, string usertype, Nullable<long> pageIndex, Nullable<long> pageSize)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("Val", val) :
                new ObjectParameter("Val", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IneligibleRpt_Sp_Result>("IneligibleRpt_Sp", typeParameter, valParameter, frmdateParameter, todateParameter, idnoParameter, usertypeParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsBankStatement_Sp(string action, Nullable<System.DateTime> stmdate, Nullable<decimal> amount, string description, string bank, Nullable<System.DateTime> date, string createdBy, string sesid, string ipaddress, Nullable<int> pageIndex, Nullable<int> pageSize, string tranType)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var stmdateParameter = stmdate.HasValue ?
                new ObjectParameter("stmdate", stmdate) :
                new ObjectParameter("stmdate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var tranTypeParameter = tranType != null ?
                new ObjectParameter("TranType", tranType) :
                new ObjectParameter("TranType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsBankStatement_Sp", actionParameter, stmdateParameter, amountParameter, descriptionParameter, bankParameter, dateParameter, createdByParameter, sesidParameter, ipaddressParameter, pageIndexParameter, pageSizeParameter, tranTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insert_bulkmails_SP(string mAILFROM, string sUBJECT, string mSG, Nullable<System.DateTime> sENTDATE)
        {
            var mAILFROMParameter = mAILFROM != null ?
                new ObjectParameter("MAILFROM", mAILFROM) :
                new ObjectParameter("MAILFROM", typeof(string));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var mSGParameter = mSG != null ?
                new ObjectParameter("MSG", mSG) :
                new ObjectParameter("MSG", typeof(string));
    
            var sENTDATEParameter = sENTDATE.HasValue ?
                new ObjectParameter("SENTDATE", sENTDATE) :
                new ObjectParameter("SENTDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insert_bulkmails_SP", mAILFROMParameter, sUBJECTParameter, mSGParameter, sENTDATEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_fdsabulkmail(string email, string subJ, string msg, string thru, Nullable<int> flag, string name)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var subJParameter = subJ != null ?
                new ObjectParameter("SubJ", subJ) :
                new ObjectParameter("SubJ", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("Msg", msg) :
                new ObjectParameter("Msg", typeof(string));
    
            var thruParameter = thru != null ?
                new ObjectParameter("Thru", thru) :
                new ObjectParameter("Thru", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_fdsabulkmail", emailParameter, subJParameter, msgParameter, thruParameter, flagParameter, nameParameter);
        }
    
        public virtual int InsertBatchOutSms_Sp(Nullable<decimal> regid, string mobile, string msg, string sesid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBatchOutSms_Sp", regidParameter, mobileParameter, msgParameter, sesidParameter);
        }
    
        public virtual int InsertBulkSms_Sp(string stateid, string city, string msg, string sesid)
        {
            var stateidParameter = stateid != null ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBulkSms_Sp", stateidParameter, cityParameter, msgParameter, sesidParameter);
        }
    
        public virtual ObjectResult<string> InsertCourier_sp(string action, string regid, string courier, string billno, string type, string uNQId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("Courier", courier) :
                new ObjectParameter("Courier", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertCourier_sp", actionParameter, regidParameter, courierParameter, billnoParameter, typeParameter, uNQIdParameter);
        }
    
        public virtual ObjectResult<string> InsertCourierDetails_SP(Nullable<int> sno, string cName, string remarks, string addedby, Nullable<int> status, string action)
        {
            var snoParameter = sno.HasValue ?
                new ObjectParameter("Sno", sno) :
                new ObjectParameter("Sno", typeof(int));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("CName", cName) :
                new ObjectParameter("CName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var addedbyParameter = addedby != null ?
                new ObjectParameter("Addedby", addedby) :
                new ObjectParameter("Addedby", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertCourierDetails_SP", snoParameter, cNameParameter, remarksParameter, addedbyParameter, statusParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertDownloadfiles_Sp(string title, string downloadfile, Nullable<int> uploadby, string sesid)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var downloadfileParameter = downloadfile != null ?
                new ObjectParameter("Downloadfile", downloadfile) :
                new ObjectParameter("Downloadfile", typeof(string));
    
            var uploadbyParameter = uploadby.HasValue ?
                new ObjectParameter("Uploadby", uploadby) :
                new ObjectParameter("Uploadby", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertDownloadfiles_Sp", titleParameter, downloadfileParameter, uploadbyParameter, sesidParameter);
        }
    
        public virtual ObjectResult<string> InsertFranchise_Sp(string fcode, string fname, string address1, string address2, string city, string state, string email, string status, string createdBy, Nullable<System.DateTime> creationDate, string phoneNo, string stkLimit, string joinAmt, string cPName, string userName, string password, string bank, string accountNo, string iFCS, string bankAddress, string type, string tinno, string gST)
        {
            var fcodeParameter = fcode != null ?
                new ObjectParameter("Fcode", fcode) :
                new ObjectParameter("Fcode", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var stkLimitParameter = stkLimit != null ?
                new ObjectParameter("StkLimit", stkLimit) :
                new ObjectParameter("StkLimit", typeof(string));
    
            var joinAmtParameter = joinAmt != null ?
                new ObjectParameter("JoinAmt", joinAmt) :
                new ObjectParameter("JoinAmt", typeof(string));
    
            var cPNameParameter = cPName != null ?
                new ObjectParameter("CPName", cPName) :
                new ObjectParameter("CPName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var iFCSParameter = iFCS != null ?
                new ObjectParameter("IFCS", iFCS) :
                new ObjectParameter("IFCS", typeof(string));
    
            var bankAddressParameter = bankAddress != null ?
                new ObjectParameter("BankAddress", bankAddress) :
                new ObjectParameter("BankAddress", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var tinnoParameter = tinno != null ?
                new ObjectParameter("tinno", tinno) :
                new ObjectParameter("tinno", typeof(string));
    
            var gSTParameter = gST != null ?
                new ObjectParameter("GST", gST) :
                new ObjectParameter("GST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertFranchise_Sp", fcodeParameter, fnameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, emailParameter, statusParameter, createdByParameter, creationDateParameter, phoneNoParameter, stkLimitParameter, joinAmtParameter, cPNameParameter, userNameParameter, passwordParameter, bankParameter, accountNoParameter, iFCSParameter, bankAddressParameter, typeParameter, tinnoParameter, gSTParameter);
        }
    
        public virtual int InsertGuestReg_Sp(string userno, Nullable<int> sprno, string spseries, string title, string fname, string lname, Nullable<int> sex, string state, string mobile, string eMail, string lpassword, string tpassword, string sesid, string decpwd, string corrAdds, string perAdds, string corrCity, string perCity, string corrDistrict, string perDistrict, string corrddlstate, string perddlstate, string corrPINCode, string perPINCode)
        {
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var sprnoParameter = sprno.HasValue ?
                new ObjectParameter("sprno", sprno) :
                new ObjectParameter("sprno", typeof(int));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var decpwdParameter = decpwd != null ?
                new ObjectParameter("Decpwd", decpwd) :
                new ObjectParameter("Decpwd", typeof(string));
    
            var corrAddsParameter = corrAdds != null ?
                new ObjectParameter("CorrAdds", corrAdds) :
                new ObjectParameter("CorrAdds", typeof(string));
    
            var perAddsParameter = perAdds != null ?
                new ObjectParameter("PerAdds", perAdds) :
                new ObjectParameter("PerAdds", typeof(string));
    
            var corrCityParameter = corrCity != null ?
                new ObjectParameter("CorrCity", corrCity) :
                new ObjectParameter("CorrCity", typeof(string));
    
            var perCityParameter = perCity != null ?
                new ObjectParameter("PerCity", perCity) :
                new ObjectParameter("PerCity", typeof(string));
    
            var corrDistrictParameter = corrDistrict != null ?
                new ObjectParameter("CorrDistrict", corrDistrict) :
                new ObjectParameter("CorrDistrict", typeof(string));
    
            var perDistrictParameter = perDistrict != null ?
                new ObjectParameter("perDistrict", perDistrict) :
                new ObjectParameter("perDistrict", typeof(string));
    
            var corrddlstateParameter = corrddlstate != null ?
                new ObjectParameter("Corrddlstate", corrddlstate) :
                new ObjectParameter("Corrddlstate", typeof(string));
    
            var perddlstateParameter = perddlstate != null ?
                new ObjectParameter("perddlstate", perddlstate) :
                new ObjectParameter("perddlstate", typeof(string));
    
            var corrPINCodeParameter = corrPINCode != null ?
                new ObjectParameter("CorrPINCode", corrPINCode) :
                new ObjectParameter("CorrPINCode", typeof(string));
    
            var perPINCodeParameter = perPINCode != null ?
                new ObjectParameter("PerPINCode", perPINCode) :
                new ObjectParameter("PerPINCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGuestReg_Sp", usernoParameter, sprnoParameter, spseriesParameter, titleParameter, fnameParameter, lnameParameter, sexParameter, stateParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, sesidParameter, decpwdParameter, corrAddsParameter, perAddsParameter, corrCityParameter, perCityParameter, corrDistrictParameter, perDistrictParameter, corrddlstateParameter, perddlstateParameter, corrPINCodeParameter, perPINCodeParameter);
        }
    
        public virtual int InsertintoFolder_SP(Nullable<int> mailId, Nullable<int> folderId)
        {
            var mailIdParameter = mailId.HasValue ?
                new ObjectParameter("MailId", mailId) :
                new ObjectParameter("MailId", typeof(int));
    
            var folderIdParameter = folderId.HasValue ?
                new ObjectParameter("FolderId", folderId) :
                new ObjectParameter("FolderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertintoFolder_SP", mailIdParameter, folderIdParameter);
        }
    
        public virtual int InsertInvProducts_sp(string action, string uNQId, Nullable<int> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertInvProducts_sp", actionParameter, uNQIdParameter, regidParameter);
        }
    
        public virtual int InsertLinks_SP(string linkName, string pagename, Nullable<int> parent, string nav, string usertype)
        {
            var linkNameParameter = linkName != null ?
                new ObjectParameter("LinkName", linkName) :
                new ObjectParameter("LinkName", typeof(string));
    
            var pagenameParameter = pagename != null ?
                new ObjectParameter("Pagename", pagename) :
                new ObjectParameter("Pagename", typeof(string));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            var navParameter = nav != null ?
                new ObjectParameter("Nav", nav) :
                new ObjectParameter("Nav", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLinks_SP", linkNameParameter, pagenameParameter, parentParameter, navParameter, usertypeParameter);
        }
    
        public virtual int InsertMemberSms_Sp(string sesid, string msg)
        {
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMemberSms_Sp", sesidParameter, msgParameter);
        }
    
        public virtual int InsertNonMemSms_sp(string sesid, string msg)
        {
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonMemSms_sp", sesidParameter, msgParameter);
        }
    
        public virtual ObjectResult<insertnonmemsmsids_sp_Result> insertnonmemsmsids_sp(string name, string mobile, string sesid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertnonmemsmsids_sp_Result>("insertnonmemsmsids_sp", nameParameter, mobileParameter, sesidParameter);
        }
    
        public virtual int InsertOffProducts_sp(string action, string uNQId, Nullable<int> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOffProducts_sp", actionParameter, uNQIdParameter, regidParameter);
        }
    
        public virtual int InsertResendSms_Sp(string sesid)
        {
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertResendSms_Sp", sesidParameter);
        }
    
        public virtual ObjectResult<insertresendsmsids_Result> insertresendsmsids(Nullable<decimal> regid, string sesid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertresendsmsids_Result>("insertresendsmsids", regidParameter, sesidParameter);
        }
    
        public virtual ObjectResult<insertresendsmsids_sp_Result> insertresendsmsids_sp(Nullable<decimal> regid, string sesid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertresendsmsids_sp_Result>("insertresendsmsids_sp", regidParameter, sesidParameter);
        }
    
        public virtual ObjectResult<InsertSalesTempReg_Sp_Result> InsertSalesTempReg_Sp(string userno, string sprno, string spseries, string fname, string lname, Nullable<System.DateTime> dob, string sex, string add1, string add2, string city, string district, string state, Nullable<int> pin, string mobile, string eMail, string lpassword, string tpassword, string panno, string title, string guardian, string careof, string sesid)
        {
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var sprnoParameter = sprno != null ?
                new ObjectParameter("sprno", sprno) :
                new ObjectParameter("sprno", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var add1Parameter = add1 != null ?
                new ObjectParameter("add1", add1) :
                new ObjectParameter("add1", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var guardianParameter = guardian != null ?
                new ObjectParameter("guardian", guardian) :
                new ObjectParameter("guardian", typeof(string));
    
            var careofParameter = careof != null ?
                new ObjectParameter("careof", careof) :
                new ObjectParameter("careof", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertSalesTempReg_Sp_Result>("InsertSalesTempReg_Sp", usernoParameter, sprnoParameter, spseriesParameter, fnameParameter, lnameParameter, dobParameter, sexParameter, add1Parameter, add2Parameter, cityParameter, districtParameter, stateParameter, pinParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, pannoParameter, titleParameter, guardianParameter, careofParameter, sesidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insertsmslog_Sp(Nullable<decimal> regid, string mobile, Nullable<System.DateTime> senddate, string msg, string action, string sessid, string sMSType)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var senddateParameter = senddate.HasValue ?
                new ObjectParameter("senddate", senddate) :
                new ObjectParameter("senddate", typeof(System.DateTime));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            var sMSTypeParameter = sMSType != null ?
                new ObjectParameter("SMSType", sMSType) :
                new ObjectParameter("SMSType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insertsmslog_Sp", regidParameter, mobileParameter, senddateParameter, msgParameter, actionParameter, sessidParameter, sMSTypeParameter);
        }
    
        public virtual ObjectResult<InsertTempReg_Sp_Result> InsertTempReg_Sp(string userno, string sprno, string spseries, string fname, string lname, Nullable<System.DateTime> dob, string sex, string add1, string add2, string city, string district, string state, Nullable<int> pin, string mobile, string eMail, string lpassword, string tpassword, string sesid, Nullable<decimal> downto, string panno, string title, string guardian, string altmobile, string qualification, string subject, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch, string reftype, Nullable<int> pid, Nullable<int> bV, string percity, string perdistrict, string perstate, Nullable<int> perpin, string landline, string careof, string fullitemcode)
        {
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var sprnoParameter = sprno != null ?
                new ObjectParameter("sprno", sprno) :
                new ObjectParameter("sprno", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var add1Parameter = add1 != null ?
                new ObjectParameter("add1", add1) :
                new ObjectParameter("add1", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var downtoParameter = downto.HasValue ?
                new ObjectParameter("downto", downto) :
                new ObjectParameter("downto", typeof(decimal));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var guardianParameter = guardian != null ?
                new ObjectParameter("guardian", guardian) :
                new ObjectParameter("guardian", typeof(string));
    
            var altmobileParameter = altmobile != null ?
                new ObjectParameter("altmobile", altmobile) :
                new ObjectParameter("altmobile", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(int));
    
            var percityParameter = percity != null ?
                new ObjectParameter("percity", percity) :
                new ObjectParameter("percity", typeof(string));
    
            var perdistrictParameter = perdistrict != null ?
                new ObjectParameter("perdistrict", perdistrict) :
                new ObjectParameter("perdistrict", typeof(string));
    
            var perstateParameter = perstate != null ?
                new ObjectParameter("perstate", perstate) :
                new ObjectParameter("perstate", typeof(string));
    
            var perpinParameter = perpin.HasValue ?
                new ObjectParameter("perpin", perpin) :
                new ObjectParameter("perpin", typeof(int));
    
            var landlineParameter = landline != null ?
                new ObjectParameter("landline", landline) :
                new ObjectParameter("landline", typeof(string));
    
            var careofParameter = careof != null ?
                new ObjectParameter("careof", careof) :
                new ObjectParameter("careof", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertTempReg_Sp_Result>("InsertTempReg_Sp", usernoParameter, sprnoParameter, spseriesParameter, fnameParameter, lnameParameter, dobParameter, sexParameter, add1Parameter, add2Parameter, cityParameter, districtParameter, stateParameter, pinParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, sesidParameter, downtoParameter, pannoParameter, titleParameter, guardianParameter, altmobileParameter, qualificationParameter, subjectParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter, reftypeParameter, pidParameter, bVParameter, percityParameter, perdistrictParameter, perstateParameter, perpinParameter, landlineParameter, careofParameter, fullitemcodeParameter);
        }
    
        public virtual ObjectResult<InsertTempReg_Sp_04_07_16_Result> InsertTempReg_Sp_04_07_16(string userno, string sprno, string spseries, string fname, string lname, Nullable<System.DateTime> dob, string sex, string add1, string add2, string city, string district, string state, Nullable<int> pin, string mobile, string eMail, string lpassword, string tpassword, string sesid, Nullable<decimal> downto, string panno, string title, string guardian, string altmobile, string qualification, string subject, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch, string reftype, Nullable<int> pid, Nullable<int> bV, string percity, string perdistrict, string perstate, Nullable<int> perpin, string landline, string careof, string fullitemcode)
        {
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var sprnoParameter = sprno != null ?
                new ObjectParameter("sprno", sprno) :
                new ObjectParameter("sprno", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var add1Parameter = add1 != null ?
                new ObjectParameter("add1", add1) :
                new ObjectParameter("add1", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var downtoParameter = downto.HasValue ?
                new ObjectParameter("downto", downto) :
                new ObjectParameter("downto", typeof(decimal));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var guardianParameter = guardian != null ?
                new ObjectParameter("guardian", guardian) :
                new ObjectParameter("guardian", typeof(string));
    
            var altmobileParameter = altmobile != null ?
                new ObjectParameter("altmobile", altmobile) :
                new ObjectParameter("altmobile", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(int));
    
            var percityParameter = percity != null ?
                new ObjectParameter("percity", percity) :
                new ObjectParameter("percity", typeof(string));
    
            var perdistrictParameter = perdistrict != null ?
                new ObjectParameter("perdistrict", perdistrict) :
                new ObjectParameter("perdistrict", typeof(string));
    
            var perstateParameter = perstate != null ?
                new ObjectParameter("perstate", perstate) :
                new ObjectParameter("perstate", typeof(string));
    
            var perpinParameter = perpin.HasValue ?
                new ObjectParameter("perpin", perpin) :
                new ObjectParameter("perpin", typeof(int));
    
            var landlineParameter = landline != null ?
                new ObjectParameter("landline", landline) :
                new ObjectParameter("landline", typeof(string));
    
            var careofParameter = careof != null ?
                new ObjectParameter("careof", careof) :
                new ObjectParameter("careof", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertTempReg_Sp_04_07_16_Result>("InsertTempReg_Sp_04_07_16", usernoParameter, sprnoParameter, spseriesParameter, fnameParameter, lnameParameter, dobParameter, sexParameter, add1Parameter, add2Parameter, cityParameter, districtParameter, stateParameter, pinParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, sesidParameter, downtoParameter, pannoParameter, titleParameter, guardianParameter, altmobileParameter, qualificationParameter, subjectParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter, reftypeParameter, pidParameter, bVParameter, percityParameter, perdistrictParameter, perstateParameter, perpinParameter, landlineParameter, careofParameter, fullitemcodeParameter);
        }
    
        public virtual ObjectResult<string> InsFeedback(string idno, string name, string email, string qtype, string state, string mobile, string enquiry, string sessId, string ipadd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var qtypeParameter = qtype != null ?
                new ObjectParameter("Qtype", qtype) :
                new ObjectParameter("Qtype", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var enquiryParameter = enquiry != null ?
                new ObjectParameter("Enquiry", enquiry) :
                new ObjectParameter("Enquiry", typeof(string));
    
            var sessIdParameter = sessId != null ?
                new ObjectParameter("SessId", sessId) :
                new ObjectParameter("SessId", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("Ipadd", ipadd) :
                new ObjectParameter("Ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsFeedback", idnoParameter, nameParameter, emailParameter, qtypeParameter, stateParameter, mobileParameter, enquiryParameter, sessIdParameter, ipaddParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> INUPStockUsers_SP(string action, Nullable<int> itemId, string userName, string passWord, string name, string doorno, string lane, string streat, string city, string state, string contact_Name, string contact_Phone, string email, Nullable<int> uid, string sesid, string ipaddress, Nullable<int> flag)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doornoParameter = doorno != null ?
                new ObjectParameter("doorno", doorno) :
                new ObjectParameter("doorno", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("lane", lane) :
                new ObjectParameter("lane", typeof(string));
    
            var streatParameter = streat != null ?
                new ObjectParameter("streat", streat) :
                new ObjectParameter("streat", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var contact_NameParameter = contact_Name != null ?
                new ObjectParameter("Contact_Name", contact_Name) :
                new ObjectParameter("Contact_Name", typeof(string));
    
            var contact_PhoneParameter = contact_Phone != null ?
                new ObjectParameter("Contact_Phone", contact_Phone) :
                new ObjectParameter("Contact_Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("Ipaddress", ipaddress) :
                new ObjectParameter("Ipaddress", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("INUPStockUsers_SP", actionParameter, itemIdParameter, userNameParameter, passWordParameter, nameParameter, doornoParameter, laneParameter, streatParameter, cityParameter, stateParameter, contact_NameParameter, contact_PhoneParameter, emailParameter, uidParameter, sesidParameter, ipaddressParameter, flagParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> INUPUsers_SP(string action, Nullable<int> itemId, string userName, string passWord, string name, string doorno, string lane, string streat, string city, string state, string contact_Name, string contact_Phone, string email, Nullable<int> uid, string sesid, string ipaddress, Nullable<int> flag)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var doornoParameter = doorno != null ?
                new ObjectParameter("doorno", doorno) :
                new ObjectParameter("doorno", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("lane", lane) :
                new ObjectParameter("lane", typeof(string));
    
            var streatParameter = streat != null ?
                new ObjectParameter("streat", streat) :
                new ObjectParameter("streat", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var contact_NameParameter = contact_Name != null ?
                new ObjectParameter("Contact_Name", contact_Name) :
                new ObjectParameter("Contact_Name", typeof(string));
    
            var contact_PhoneParameter = contact_Phone != null ?
                new ObjectParameter("Contact_Phone", contact_Phone) :
                new ObjectParameter("Contact_Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("Ipaddress", ipaddress) :
                new ObjectParameter("Ipaddress", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("INUPUsers_SP", actionParameter, itemIdParameter, userNameParameter, passWordParameter, nameParameter, doornoParameter, laneParameter, streatParameter, cityParameter, stateParameter, contact_NameParameter, contact_PhoneParameter, emailParameter, uidParameter, sesidParameter, ipaddressParameter, flagParameter);
        }
    
        public virtual ObjectResult<Invoices_Sp_Result> Invoices_Sp(string action, string billno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Invoices_Sp_Result>("Invoices_Sp", actionParameter, billnoParameter);
        }
    
        public virtual int Invoices_Sp_04_07_16(string action, string billno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Invoices_Sp_04_07_16", actionParameter, billnoParameter);
        }
    
        public virtual int Invoices_Sp_Old_050716(string action, string billno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Invoices_Sp_Old_050716", actionParameter, billnoParameter);
        }
    
        public virtual ObjectResult<InvoicesRpt_Sp_Result> InvoicesRpt_Sp(string invFrom, string invType, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pagesize)
        {
            var invFromParameter = invFrom != null ?
                new ObjectParameter("InvFrom", invFrom) :
                new ObjectParameter("InvFrom", typeof(string));
    
            var invTypeParameter = invType != null ?
                new ObjectParameter("InvType", invType) :
                new ObjectParameter("InvType", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoicesRpt_Sp_Result>("InvoicesRpt_Sp", invFromParameter, invTypeParameter, fromdateParameter, todateParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual int InvoicesRpt_Sp_old_050716(string invFrom, string invType, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pagesize)
        {
            var invFromParameter = invFrom != null ?
                new ObjectParameter("InvFrom", invFrom) :
                new ObjectParameter("InvFrom", typeof(string));
    
            var invTypeParameter = invType != null ?
                new ObjectParameter("InvType", invType) :
                new ObjectParameter("InvType", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoicesRpt_Sp_old_050716", invFromParameter, invTypeParameter, fromdateParameter, todateParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<InvoicesRptAll_Sp_Result> InvoicesRptAll_Sp(string action, string idno, string billno, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoicesRptAll_Sp_Result>("InvoicesRptAll_Sp", actionParameter, idnoParameter, billnoParameter, fromdateParameter, todateParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsAttachExit_SP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsAttachExit_SP", idParameter);
        }
    
        public virtual int ItemCodesGeneration_Sp(Nullable<int> pcode, string attr1, string attr2, string attr3, string attr4, string attr5, string attr6, string attr7, string attr8, string attr9, string attr10)
        {
            var pcodeParameter = pcode.HasValue ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(int));
    
            var attr1Parameter = attr1 != null ?
                new ObjectParameter("attr1", attr1) :
                new ObjectParameter("attr1", typeof(string));
    
            var attr2Parameter = attr2 != null ?
                new ObjectParameter("attr2", attr2) :
                new ObjectParameter("attr2", typeof(string));
    
            var attr3Parameter = attr3 != null ?
                new ObjectParameter("attr3", attr3) :
                new ObjectParameter("attr3", typeof(string));
    
            var attr4Parameter = attr4 != null ?
                new ObjectParameter("attr4", attr4) :
                new ObjectParameter("attr4", typeof(string));
    
            var attr5Parameter = attr5 != null ?
                new ObjectParameter("attr5", attr5) :
                new ObjectParameter("attr5", typeof(string));
    
            var attr6Parameter = attr6 != null ?
                new ObjectParameter("attr6", attr6) :
                new ObjectParameter("attr6", typeof(string));
    
            var attr7Parameter = attr7 != null ?
                new ObjectParameter("attr7", attr7) :
                new ObjectParameter("attr7", typeof(string));
    
            var attr8Parameter = attr8 != null ?
                new ObjectParameter("attr8", attr8) :
                new ObjectParameter("attr8", typeof(string));
    
            var attr9Parameter = attr9 != null ?
                new ObjectParameter("attr9", attr9) :
                new ObjectParameter("attr9", typeof(string));
    
            var attr10Parameter = attr10 != null ?
                new ObjectParameter("attr10", attr10) :
                new ObjectParameter("attr10", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ItemCodesGeneration_Sp", pcodeParameter, attr1Parameter, attr2Parameter, attr3Parameter, attr4Parameter, attr5Parameter, attr6Parameter, attr7Parameter, attr8Parameter, attr9Parameter, attr10Parameter);
        }
    
        public virtual ObjectResult<ItemsList_Sp_Result> ItemsList_Sp(string action, string searchID, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var searchIDParameter = searchID != null ?
                new ObjectParameter("searchID", searchID) :
                new ObjectParameter("searchID", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemsList_Sp_Result>("ItemsList_Sp", actionParameter, searchIDParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int Job_BlockKYCNotUpdate_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Job_BlockKYCNotUpdate_sp");
        }
    
        public virtual int Job_KYCAlertNotification_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Job_KYCAlertNotification_sp");
        }
    
        public virtual int Job_KYCAlertSMS_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Job_KYCAlertSMS_sp");
        }
    
        public virtual ObjectResult<KYC_SP_Result> KYC_SP(Nullable<decimal> regid, string type)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KYC_SP_Result>("KYC_SP", regidParameter, typeParameter);
        }
    
        public virtual ObjectResult<KYCPendingRpt_Sp_Result> KYCPendingRpt_Sp(string type, string moduleType)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KYCPendingRpt_Sp_Result>("KYCPendingRpt_Sp", typeParameter, moduleTypeParameter);
        }
    
        public virtual int KycReport_Sp(string action, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<long> pageIndex, Nullable<long> pagesize, Nullable<long> status)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KycReport_Sp", actionParameter, frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pagesizeParameter, statusParameter);
        }
    
        public virtual ObjectResult<LinksPremission_SP_Result> LinksPremission_SP(Nullable<int> lid, Nullable<int> uid, string usertype)
        {
            var lidParameter = lid.HasValue ?
                new ObjectParameter("lid", lid) :
                new ObjectParameter("lid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LinksPremission_SP_Result>("LinksPremission_SP", lidParameter, uidParameter, usertypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LogOnlineDataEBSNew_Sp(string responseCode, string responseMessage, string dateCreated, string paymentID, string merchantRefNo, string amount, string mode, string billingName, string billingAddress, string billingCity, string billingState, string billingPostalCode, string billingCountry, string billingPhone, string billingEmail, string deliveryName, string deliveryAddress, string deliveryCity, string deliveryState, string deliveryPostalCode, string deliveryCountry, string deliveryPhone, string description, string isFlagged, string transactionID, string paymentMethod, string requestID, string secureHash, string remarks)
        {
            var responseCodeParameter = responseCode != null ?
                new ObjectParameter("ResponseCode", responseCode) :
                new ObjectParameter("ResponseCode", typeof(string));
    
            var responseMessageParameter = responseMessage != null ?
                new ObjectParameter("ResponseMessage", responseMessage) :
                new ObjectParameter("ResponseMessage", typeof(string));
    
            var dateCreatedParameter = dateCreated != null ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(string));
    
            var paymentIDParameter = paymentID != null ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(string));
    
            var merchantRefNoParameter = merchantRefNo != null ?
                new ObjectParameter("MerchantRefNo", merchantRefNo) :
                new ObjectParameter("MerchantRefNo", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            var billingNameParameter = billingName != null ?
                new ObjectParameter("BillingName", billingName) :
                new ObjectParameter("BillingName", typeof(string));
    
            var billingAddressParameter = billingAddress != null ?
                new ObjectParameter("BillingAddress", billingAddress) :
                new ObjectParameter("BillingAddress", typeof(string));
    
            var billingCityParameter = billingCity != null ?
                new ObjectParameter("BillingCity", billingCity) :
                new ObjectParameter("BillingCity", typeof(string));
    
            var billingStateParameter = billingState != null ?
                new ObjectParameter("BillingState", billingState) :
                new ObjectParameter("BillingState", typeof(string));
    
            var billingPostalCodeParameter = billingPostalCode != null ?
                new ObjectParameter("BillingPostalCode", billingPostalCode) :
                new ObjectParameter("BillingPostalCode", typeof(string));
    
            var billingCountryParameter = billingCountry != null ?
                new ObjectParameter("BillingCountry", billingCountry) :
                new ObjectParameter("BillingCountry", typeof(string));
    
            var billingPhoneParameter = billingPhone != null ?
                new ObjectParameter("BillingPhone", billingPhone) :
                new ObjectParameter("BillingPhone", typeof(string));
    
            var billingEmailParameter = billingEmail != null ?
                new ObjectParameter("BillingEmail", billingEmail) :
                new ObjectParameter("BillingEmail", typeof(string));
    
            var deliveryNameParameter = deliveryName != null ?
                new ObjectParameter("DeliveryName", deliveryName) :
                new ObjectParameter("DeliveryName", typeof(string));
    
            var deliveryAddressParameter = deliveryAddress != null ?
                new ObjectParameter("DeliveryAddress", deliveryAddress) :
                new ObjectParameter("DeliveryAddress", typeof(string));
    
            var deliveryCityParameter = deliveryCity != null ?
                new ObjectParameter("DeliveryCity", deliveryCity) :
                new ObjectParameter("DeliveryCity", typeof(string));
    
            var deliveryStateParameter = deliveryState != null ?
                new ObjectParameter("DeliveryState", deliveryState) :
                new ObjectParameter("DeliveryState", typeof(string));
    
            var deliveryPostalCodeParameter = deliveryPostalCode != null ?
                new ObjectParameter("DeliveryPostalCode", deliveryPostalCode) :
                new ObjectParameter("DeliveryPostalCode", typeof(string));
    
            var deliveryCountryParameter = deliveryCountry != null ?
                new ObjectParameter("DeliveryCountry", deliveryCountry) :
                new ObjectParameter("DeliveryCountry", typeof(string));
    
            var deliveryPhoneParameter = deliveryPhone != null ?
                new ObjectParameter("DeliveryPhone", deliveryPhone) :
                new ObjectParameter("DeliveryPhone", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isFlaggedParameter = isFlagged != null ?
                new ObjectParameter("IsFlagged", isFlagged) :
                new ObjectParameter("IsFlagged", typeof(string));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            var requestIDParameter = requestID != null ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(string));
    
            var secureHashParameter = secureHash != null ?
                new ObjectParameter("SecureHash", secureHash) :
                new ObjectParameter("SecureHash", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LogOnlineDataEBSNew_Sp", responseCodeParameter, responseMessageParameter, dateCreatedParameter, paymentIDParameter, merchantRefNoParameter, amountParameter, modeParameter, billingNameParameter, billingAddressParameter, billingCityParameter, billingStateParameter, billingPostalCodeParameter, billingCountryParameter, billingPhoneParameter, billingEmailParameter, deliveryNameParameter, deliveryAddressParameter, deliveryCityParameter, deliveryStateParameter, deliveryPostalCodeParameter, deliveryCountryParameter, deliveryPhoneParameter, descriptionParameter, isFlaggedParameter, transactionIDParameter, paymentMethodParameter, requestIDParameter, secureHashParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LogOnlineDataNew_Sp(string sUBS_ID, string mID, string tXNID, string oRDERID, string bANKTXNID, string tXNAMOUNT, string cURRENCY, string sTATUS, string rESPCODE, string rESPMSG, Nullable<System.DateTime> tXNDATE, string gATEWAYNAME, string bANKNAME, string pAYMENTMODE, string pROMO_CAMP_ID, string pROMO_STATUS, string pROMO_RESPCODE, string cHECKSUMHASH, string remarks)
        {
            var sUBS_IDParameter = sUBS_ID != null ?
                new ObjectParameter("SUBS_ID", sUBS_ID) :
                new ObjectParameter("SUBS_ID", typeof(string));
    
            var mIDParameter = mID != null ?
                new ObjectParameter("MID", mID) :
                new ObjectParameter("MID", typeof(string));
    
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var oRDERIDParameter = oRDERID != null ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(string));
    
            var bANKTXNIDParameter = bANKTXNID != null ?
                new ObjectParameter("BANKTXNID", bANKTXNID) :
                new ObjectParameter("BANKTXNID", typeof(string));
    
            var tXNAMOUNTParameter = tXNAMOUNT != null ?
                new ObjectParameter("TXNAMOUNT", tXNAMOUNT) :
                new ObjectParameter("TXNAMOUNT", typeof(string));
    
            var cURRENCYParameter = cURRENCY != null ?
                new ObjectParameter("CURRENCY", cURRENCY) :
                new ObjectParameter("CURRENCY", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var rESPCODEParameter = rESPCODE != null ?
                new ObjectParameter("RESPCODE", rESPCODE) :
                new ObjectParameter("RESPCODE", typeof(string));
    
            var rESPMSGParameter = rESPMSG != null ?
                new ObjectParameter("RESPMSG", rESPMSG) :
                new ObjectParameter("RESPMSG", typeof(string));
    
            var tXNDATEParameter = tXNDATE.HasValue ?
                new ObjectParameter("TXNDATE", tXNDATE) :
                new ObjectParameter("TXNDATE", typeof(System.DateTime));
    
            var gATEWAYNAMEParameter = gATEWAYNAME != null ?
                new ObjectParameter("GATEWAYNAME", gATEWAYNAME) :
                new ObjectParameter("GATEWAYNAME", typeof(string));
    
            var bANKNAMEParameter = bANKNAME != null ?
                new ObjectParameter("BANKNAME", bANKNAME) :
                new ObjectParameter("BANKNAME", typeof(string));
    
            var pAYMENTMODEParameter = pAYMENTMODE != null ?
                new ObjectParameter("PAYMENTMODE", pAYMENTMODE) :
                new ObjectParameter("PAYMENTMODE", typeof(string));
    
            var pROMO_CAMP_IDParameter = pROMO_CAMP_ID != null ?
                new ObjectParameter("PROMO_CAMP_ID", pROMO_CAMP_ID) :
                new ObjectParameter("PROMO_CAMP_ID", typeof(string));
    
            var pROMO_STATUSParameter = pROMO_STATUS != null ?
                new ObjectParameter("PROMO_STATUS", pROMO_STATUS) :
                new ObjectParameter("PROMO_STATUS", typeof(string));
    
            var pROMO_RESPCODEParameter = pROMO_RESPCODE != null ?
                new ObjectParameter("PROMO_RESPCODE", pROMO_RESPCODE) :
                new ObjectParameter("PROMO_RESPCODE", typeof(string));
    
            var cHECKSUMHASHParameter = cHECKSUMHASH != null ?
                new ObjectParameter("CHECKSUMHASH", cHECKSUMHASH) :
                new ObjectParameter("CHECKSUMHASH", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LogOnlineDataNew_Sp", sUBS_IDParameter, mIDParameter, tXNIDParameter, oRDERIDParameter, bANKTXNIDParameter, tXNAMOUNTParameter, cURRENCYParameter, sTATUSParameter, rESPCODEParameter, rESPMSGParameter, tXNDATEParameter, gATEWAYNAMEParameter, bANKNAMEParameter, pAYMENTMODEParameter, pROMO_CAMP_IDParameter, pROMO_STATUSParameter, pROMO_RESPCODEParameter, cHECKSUMHASHParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LogResponse_Sp(string merrefno, string responsevalues)
        {
            var merrefnoParameter = merrefno != null ?
                new ObjectParameter("merrefno", merrefno) :
                new ObjectParameter("merrefno", typeof(string));
    
            var responsevaluesParameter = responsevalues != null ?
                new ObjectParameter("responsevalues", responsevalues) :
                new ObjectParameter("responsevalues", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LogResponse_Sp", merrefnoParameter, responsevaluesParameter);
        }
    
        public virtual ObjectResult<string> Ma_AddDeleteProduct_Sp(string idno, string pwd, string uNQId, string pcode, string itemCode, string attribute, Nullable<int> qty, string action)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var attributeParameter = attribute != null ?
                new ObjectParameter("Attribute", attribute) :
                new ObjectParameter("Attribute", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Ma_AddDeleteProduct_Sp", idnoParameter, pwdParameter, uNQIdParameter, pcodeParameter, itemCodeParameter, attributeParameter, qtyParameter, actionParameter);
        }
    
        public virtual ObjectResult<string> MA_AddNotification_SP(string idno, string pwd, Nullable<int> rEGISTRATION, Nullable<int> eWALLTREQUEST, Nullable<int> fORGOTPWD, Nullable<int> cOMPNYNOTIFY)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var rEGISTRATIONParameter = rEGISTRATION.HasValue ?
                new ObjectParameter("REGISTRATION", rEGISTRATION) :
                new ObjectParameter("REGISTRATION", typeof(int));
    
            var eWALLTREQUESTParameter = eWALLTREQUEST.HasValue ?
                new ObjectParameter("EWALLTREQUEST", eWALLTREQUEST) :
                new ObjectParameter("EWALLTREQUEST", typeof(int));
    
            var fORGOTPWDParameter = fORGOTPWD.HasValue ?
                new ObjectParameter("FORGOTPWD", fORGOTPWD) :
                new ObjectParameter("FORGOTPWD", typeof(int));
    
            var cOMPNYNOTIFYParameter = cOMPNYNOTIFY.HasValue ?
                new ObjectParameter("COMPNYNOTIFY", cOMPNYNOTIFY) :
                new ObjectParameter("COMPNYNOTIFY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MA_AddNotification_SP", idnoParameter, pwdParameter, rEGISTRATIONParameter, eWALLTREQUESTParameter, fORGOTPWDParameter, cOMPNYNOTIFYParameter);
        }
    
        public virtual ObjectResult<MA_BusinessSummary_SP_Result> MA_BusinessSummary_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_BusinessSummary_SP_Result>("MA_BusinessSummary_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> MA_Categories_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MA_Categories_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_CheckSICPRank_SP_Result> MA_CheckSICPRank_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_CheckSICPRank_SP_Result>("MA_CheckSICPRank_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_CheckSponser_Result> MA_CheckSponser(string downto)
        {
            var downtoParameter = downto != null ?
                new ObjectParameter("Downto", downto) :
                new ObjectParameter("Downto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_CheckSponser_Result>("MA_CheckSponser", downtoParameter);
        }
    
        public virtual ObjectResult<MA_CheckSpr_Result> MA_CheckSpr(string idno, string pwd, string downto)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var downtoParameter = downto != null ?
                new ObjectParameter("Downto", downto) :
                new ObjectParameter("Downto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_CheckSpr_Result>("MA_CheckSpr", idnoParameter, pwdParameter, downtoParameter);
        }
    
        public virtual ObjectResult<MA_CheckTrans_SP_Result> MA_CheckTrans_SP(string idno, string pwd, string tpwd, string uNQId, string orderidno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var tpwdParameter = tpwd != null ?
                new ObjectParameter("Tpwd", tpwd) :
                new ObjectParameter("Tpwd", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var orderidnoParameter = orderidno != null ?
                new ObjectParameter("orderidno", orderidno) :
                new ObjectParameter("orderidno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_CheckTrans_SP_Result>("MA_CheckTrans_SP", idnoParameter, pwdParameter, tpwdParameter, uNQIdParameter, orderidnoParameter);
        }
    
        public virtual ObjectResult<MA_CheckTransPwd_SP_Result> MA_CheckTransPwd_SP(string idno, string pwd, string tpwd, string action)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var tpwdParameter = tpwd != null ?
                new ObjectParameter("Tpwd", tpwd) :
                new ObjectParameter("Tpwd", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_CheckTransPwd_SP_Result>("MA_CheckTransPwd_SP", idnoParameter, pwdParameter, tpwdParameter, actionParameter);
        }
    
        public virtual ObjectResult<string> MA_CheckUser_sp(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MA_CheckUser_sp", userNameParameter);
        }
    
        public virtual ObjectResult<MA_ClickandShare_SP_Result> MA_ClickandShare_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_ClickandShare_SP_Result>("MA_ClickandShare_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_CrdReqTraPwdChk_SP_Result> MA_CrdReqTraPwdChk_SP(string idno, string pwd, string tpwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var tpwdParameter = tpwd != null ?
                new ObjectParameter("Tpwd", tpwd) :
                new ObjectParameter("Tpwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_CrdReqTraPwdChk_SP_Result>("MA_CrdReqTraPwdChk_SP", idnoParameter, pwdParameter, tpwdParameter);
        }
    
        public virtual ObjectResult<MA_DashBoard_SP_Result> MA_DashBoard_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_DashBoard_SP_Result>("MA_DashBoard_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_DesgIncomeDetails_SP_Result> MA_DesgIncomeDetails_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_DesgIncomeDetails_SP_Result>("MA_DesgIncomeDetails_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_EwalletRpt_SP_Result> MA_EwalletRpt_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_EwalletRpt_SP_Result>("MA_EwalletRpt_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_ForgotPwd_SP_Result> MA_ForgotPwd_SP(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_ForgotPwd_SP_Result>("MA_ForgotPwd_SP", idnoParameter);
        }
    
        public virtual int MA_GCM_SendUplile_SP(Nullable<decimal> regid, string subject, string msg, string url, string img)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_GCM_SendUplile_SP", regidParameter, subjectParameter, msgParameter, urlParameter, imgParameter);
        }
    
        public virtual int MA_GCMTOALLUSERS_SP(string subject, string msg, string url, string img)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_GCMTOALLUSERS_SP", subjectParameter, msgParameter, urlParameter, imgParameter);
        }
    
        public virtual ObjectResult<MA_GenealogyRpt_sp_Result> MA_GenealogyRpt_sp(string action, string idno, string pwd, string type, string msg)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("Msg", msg) :
                new ObjectParameter("Msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_GenealogyRpt_sp_Result>("MA_GenealogyRpt_sp", actionParameter, idnoParameter, pwdParameter, typeParameter, msgParameter);
        }
    
        public virtual ObjectResult<MA_GetAttributes_SP_Result> MA_GetAttributes_SP(string idno, string pwd, Nullable<int> pCode)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var pCodeParameter = pCode.HasValue ?
                new ObjectParameter("PCode", pCode) :
                new ObjectParameter("PCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_GetAttributes_SP_Result>("MA_GetAttributes_SP", idnoParameter, pwdParameter, pCodeParameter);
        }
    
        public virtual ObjectResult<MA_GetItemCodesFromAttributes_Sp_Result> MA_GetItemCodesFromAttributes_Sp(string pCode, string fields, Nullable<int> qty)
        {
            var pCodeParameter = pCode != null ?
                new ObjectParameter("PCode", pCode) :
                new ObjectParameter("PCode", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("fields", fields) :
                new ObjectParameter("fields", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_GetItemCodesFromAttributes_Sp_Result>("MA_GetItemCodesFromAttributes_Sp", pCodeParameter, fieldsParameter, qtyParameter);
        }
    
        public virtual ObjectResult<MA_GetNotification_SP_Result> MA_GetNotification_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_GetNotification_SP_Result>("MA_GetNotification_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_GetPayNo_sp_Result> MA_GetPayNo_sp(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_GetPayNo_sp_Result>("MA_GetPayNo_sp", typeParameter);
        }
    
        public virtual int MA_InsertGuestReg_Sp(string idno, string pwd, string userno, string sprid, string spseries, string title, string fname, string lname, Nullable<int> sex, string mobile, string eMail, string lpassword, string tpassword, string decpwd, string state, string sesid, string corrAdds, string perAdds, string corrCity, string perCity, string corrDistrict, string perDistrict, string corrddlstate, string perddlstate, string corrPINCode, string perPINCode)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var spridParameter = sprid != null ?
                new ObjectParameter("sprid", sprid) :
                new ObjectParameter("sprid", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var decpwdParameter = decpwd != null ?
                new ObjectParameter("Decpwd", decpwd) :
                new ObjectParameter("Decpwd", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var corrAddsParameter = corrAdds != null ?
                new ObjectParameter("CorrAdds", corrAdds) :
                new ObjectParameter("CorrAdds", typeof(string));
    
            var perAddsParameter = perAdds != null ?
                new ObjectParameter("PerAdds", perAdds) :
                new ObjectParameter("PerAdds", typeof(string));
    
            var corrCityParameter = corrCity != null ?
                new ObjectParameter("CorrCity", corrCity) :
                new ObjectParameter("CorrCity", typeof(string));
    
            var perCityParameter = perCity != null ?
                new ObjectParameter("PerCity", perCity) :
                new ObjectParameter("PerCity", typeof(string));
    
            var corrDistrictParameter = corrDistrict != null ?
                new ObjectParameter("CorrDistrict", corrDistrict) :
                new ObjectParameter("CorrDistrict", typeof(string));
    
            var perDistrictParameter = perDistrict != null ?
                new ObjectParameter("perDistrict", perDistrict) :
                new ObjectParameter("perDistrict", typeof(string));
    
            var corrddlstateParameter = corrddlstate != null ?
                new ObjectParameter("Corrddlstate", corrddlstate) :
                new ObjectParameter("Corrddlstate", typeof(string));
    
            var perddlstateParameter = perddlstate != null ?
                new ObjectParameter("perddlstate", perddlstate) :
                new ObjectParameter("perddlstate", typeof(string));
    
            var corrPINCodeParameter = corrPINCode != null ?
                new ObjectParameter("CorrPINCode", corrPINCode) :
                new ObjectParameter("CorrPINCode", typeof(string));
    
            var perPINCodeParameter = perPINCode != null ?
                new ObjectParameter("PerPINCode", perPINCode) :
                new ObjectParameter("PerPINCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_InsertGuestReg_Sp", idnoParameter, pwdParameter, usernoParameter, spridParameter, spseriesParameter, titleParameter, fnameParameter, lnameParameter, sexParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, decpwdParameter, stateParameter, sesidParameter, corrAddsParameter, perAddsParameter, corrCityParameter, perCityParameter, corrDistrictParameter, perDistrictParameter, corrddlstateParameter, perddlstateParameter, corrPINCodeParameter, perPINCodeParameter);
        }
    
        public virtual int MA_InsertGuestReg_Sp1(string idno, string pwd, string userno, string sprid, string spseries, string title, string fname, string lname, Nullable<int> sex, string mobile, string eMail, string lpassword, string tpassword, string decpwd, string state, string sesid, string corrAdds, string perAdds, string corrCity, string perCity, string corrDistrict, string perDistrict, string corrddlstate, string perddlstate, string corrPINCode, string perPINCode)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var spridParameter = sprid != null ?
                new ObjectParameter("sprid", sprid) :
                new ObjectParameter("sprid", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var decpwdParameter = decpwd != null ?
                new ObjectParameter("Decpwd", decpwd) :
                new ObjectParameter("Decpwd", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var corrAddsParameter = corrAdds != null ?
                new ObjectParameter("CorrAdds", corrAdds) :
                new ObjectParameter("CorrAdds", typeof(string));
    
            var perAddsParameter = perAdds != null ?
                new ObjectParameter("PerAdds", perAdds) :
                new ObjectParameter("PerAdds", typeof(string));
    
            var corrCityParameter = corrCity != null ?
                new ObjectParameter("CorrCity", corrCity) :
                new ObjectParameter("CorrCity", typeof(string));
    
            var perCityParameter = perCity != null ?
                new ObjectParameter("PerCity", perCity) :
                new ObjectParameter("PerCity", typeof(string));
    
            var corrDistrictParameter = corrDistrict != null ?
                new ObjectParameter("CorrDistrict", corrDistrict) :
                new ObjectParameter("CorrDistrict", typeof(string));
    
            var perDistrictParameter = perDistrict != null ?
                new ObjectParameter("perDistrict", perDistrict) :
                new ObjectParameter("perDistrict", typeof(string));
    
            var corrddlstateParameter = corrddlstate != null ?
                new ObjectParameter("Corrddlstate", corrddlstate) :
                new ObjectParameter("Corrddlstate", typeof(string));
    
            var perddlstateParameter = perddlstate != null ?
                new ObjectParameter("perddlstate", perddlstate) :
                new ObjectParameter("perddlstate", typeof(string));
    
            var corrPINCodeParameter = corrPINCode != null ?
                new ObjectParameter("CorrPINCode", corrPINCode) :
                new ObjectParameter("CorrPINCode", typeof(string));
    
            var perPINCodeParameter = perPINCode != null ?
                new ObjectParameter("PerPINCode", perPINCode) :
                new ObjectParameter("PerPINCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_InsertGuestReg_Sp1", idnoParameter, pwdParameter, usernoParameter, spridParameter, spseriesParameter, titleParameter, fnameParameter, lnameParameter, sexParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, decpwdParameter, stateParameter, sesidParameter, corrAddsParameter, perAddsParameter, corrCityParameter, perCityParameter, corrDistrictParameter, perDistrictParameter, corrddlstateParameter, perddlstateParameter, corrPINCodeParameter, perPINCodeParameter);
        }
    
        public virtual int MA_InsertGuestRegOuter_Sp(string idno, string userno, string sprid, string spseries, string title, string fname, string lname, Nullable<int> sex, string mobile, string eMail, string lpassword, string tpassword, string decpwd, string state, string sesid, string corrAdds, string perAdds, string corrCity, string perCity, string corrDistrict, string perDistrict, string corrddlstate, string perddlstate, string corrPINCode, string perPINCode)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var spridParameter = sprid != null ?
                new ObjectParameter("sprid", sprid) :
                new ObjectParameter("sprid", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var decpwdParameter = decpwd != null ?
                new ObjectParameter("Decpwd", decpwd) :
                new ObjectParameter("Decpwd", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var corrAddsParameter = corrAdds != null ?
                new ObjectParameter("CorrAdds", corrAdds) :
                new ObjectParameter("CorrAdds", typeof(string));
    
            var perAddsParameter = perAdds != null ?
                new ObjectParameter("PerAdds", perAdds) :
                new ObjectParameter("PerAdds", typeof(string));
    
            var corrCityParameter = corrCity != null ?
                new ObjectParameter("CorrCity", corrCity) :
                new ObjectParameter("CorrCity", typeof(string));
    
            var perCityParameter = perCity != null ?
                new ObjectParameter("PerCity", perCity) :
                new ObjectParameter("PerCity", typeof(string));
    
            var corrDistrictParameter = corrDistrict != null ?
                new ObjectParameter("CorrDistrict", corrDistrict) :
                new ObjectParameter("CorrDistrict", typeof(string));
    
            var perDistrictParameter = perDistrict != null ?
                new ObjectParameter("perDistrict", perDistrict) :
                new ObjectParameter("perDistrict", typeof(string));
    
            var corrddlstateParameter = corrddlstate != null ?
                new ObjectParameter("Corrddlstate", corrddlstate) :
                new ObjectParameter("Corrddlstate", typeof(string));
    
            var perddlstateParameter = perddlstate != null ?
                new ObjectParameter("perddlstate", perddlstate) :
                new ObjectParameter("perddlstate", typeof(string));
    
            var corrPINCodeParameter = corrPINCode != null ?
                new ObjectParameter("CorrPINCode", corrPINCode) :
                new ObjectParameter("CorrPINCode", typeof(string));
    
            var perPINCodeParameter = perPINCode != null ?
                new ObjectParameter("PerPINCode", perPINCode) :
                new ObjectParameter("PerPINCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_InsertGuestRegOuter_Sp", idnoParameter, usernoParameter, spridParameter, spseriesParameter, titleParameter, fnameParameter, lnameParameter, sexParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, decpwdParameter, stateParameter, sesidParameter, corrAddsParameter, perAddsParameter, corrCityParameter, perCityParameter, corrDistrictParameter, perDistrictParameter, corrddlstateParameter, perddlstateParameter, corrPINCodeParameter, perPINCodeParameter);
        }
    
        public virtual ObjectResult<MA_LeverageIncome_sp_Result> MA_LeverageIncome_sp(string idno, Nullable<int> payno, Nullable<int> leg)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var legParameter = leg.HasValue ?
                new ObjectParameter("leg", leg) :
                new ObjectParameter("leg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_LeverageIncome_sp_Result>("MA_LeverageIncome_sp", idnoParameter, paynoParameter, legParameter);
        }
    
        public virtual ObjectResult<MA_LoginStatus_SP_Result> MA_LoginStatus_SP(string idno, string pwd, string vERSION, string iMEI, string wLANMAC, string aNDROIDID, string gCMID, string mOBINFO)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            var wLANMACParameter = wLANMAC != null ?
                new ObjectParameter("WLANMAC", wLANMAC) :
                new ObjectParameter("WLANMAC", typeof(string));
    
            var aNDROIDIDParameter = aNDROIDID != null ?
                new ObjectParameter("ANDROIDID", aNDROIDID) :
                new ObjectParameter("ANDROIDID", typeof(string));
    
            var gCMIDParameter = gCMID != null ?
                new ObjectParameter("GCMID", gCMID) :
                new ObjectParameter("GCMID", typeof(string));
    
            var mOBINFOParameter = mOBINFO != null ?
                new ObjectParameter("MOBINFO", mOBINFO) :
                new ObjectParameter("MOBINFO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_LoginStatus_SP_Result>("MA_LoginStatus_SP", idnoParameter, pwdParameter, vERSIONParameter, iMEIParameter, wLANMACParameter, aNDROIDIDParameter, gCMIDParameter, mOBINFOParameter);
        }
    
        public virtual int MA_LoyaltyRank_SP(string idno, string pwd, Nullable<int> month, Nullable<int> year)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_LoyaltyRank_SP", idnoParameter, pwdParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<MA_MemberDetailes_sp_Result> MA_MemberDetailes_sp(string idno, string pwd, string orderidno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var orderidnoParameter = orderidno != null ?
                new ObjectParameter("orderidno", orderidno) :
                new ObjectParameter("orderidno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MemberDetailes_sp_Result>("MA_MemberDetailes_sp", idnoParameter, pwdParameter, orderidnoParameter);
        }
    
        public virtual ObjectResult<MA_OrderReport_sp_Result> MA_OrderReport_sp(string action, string type, string idno, string pwd)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_OrderReport_sp_Result>("MA_OrderReport_sp", actionParameter, typeParameter, idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_PayoutRpts_sp_Result> MA_PayoutRpts_sp(string action, string idno, string pwd, Nullable<int> payno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_PayoutRpts_sp_Result>("MA_PayoutRpts_sp", actionParameter, idnoParameter, pwdParameter, paynoParameter);
        }
    
        public virtual ObjectResult<MA_ProductsDetails_SP_Result> MA_ProductsDetails_SP(string idno, string pwd, string category, string subcategory, string subCategoryone, string orderidno, string search)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var subcategoryParameter = subcategory != null ?
                new ObjectParameter("Subcategory", subcategory) :
                new ObjectParameter("Subcategory", typeof(string));
    
            var subCategoryoneParameter = subCategoryone != null ?
                new ObjectParameter("SubCategoryone", subCategoryone) :
                new ObjectParameter("SubCategoryone", typeof(string));
    
            var orderidnoParameter = orderidno != null ?
                new ObjectParameter("orderidno", orderidno) :
                new ObjectParameter("orderidno", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_ProductsDetails_SP_Result>("MA_ProductsDetails_SP", idnoParameter, pwdParameter, categoryParameter, subcategoryParameter, subCategoryoneParameter, orderidnoParameter, searchParameter);
        }
    
        public virtual ObjectResult<MA_SCOrder_SP_Result> MA_SCOrder_SP(string uNQid, string idno, string pwd, string downlineid, string mop, Nullable<decimal> mopamt, string fname, string lName, string mobile, string address, string city, string district, string state, string piCode, string ordertype, Nullable<decimal> shpchrg, string scmemtype, string sesid, string ipadd)
        {
            var uNQidParameter = uNQid != null ?
                new ObjectParameter("UNQid", uNQid) :
                new ObjectParameter("UNQid", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var downlineidParameter = downlineid != null ?
                new ObjectParameter("downlineid", downlineid) :
                new ObjectParameter("downlineid", typeof(string));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var mopamtParameter = mopamt.HasValue ?
                new ObjectParameter("mopamt", mopamt) :
                new ObjectParameter("mopamt", typeof(decimal));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var piCodeParameter = piCode != null ?
                new ObjectParameter("PiCode", piCode) :
                new ObjectParameter("PiCode", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SCOrder_SP_Result>("MA_SCOrder_SP", uNQidParameter, idnoParameter, pwdParameter, downlineidParameter, mopParameter, mopamtParameter, fnameParameter, lNameParameter, mobileParameter, addressParameter, cityParameter, districtParameter, stateParameter, piCodeParameter, ordertypeParameter, shpchrgParameter, scmemtypeParameter, sesidParameter, ipaddParameter);
        }
    
        public virtual int MA_SendNotification_old04052018_SP(string gcmid, string sentMsg, string subject, string link, string image)
        {
            var gcmidParameter = gcmid != null ?
                new ObjectParameter("gcmid", gcmid) :
                new ObjectParameter("gcmid", typeof(string));
    
            var sentMsgParameter = sentMsg != null ?
                new ObjectParameter("sentMsg", sentMsg) :
                new ObjectParameter("sentMsg", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_SendNotification_old04052018_SP", gcmidParameter, sentMsgParameter, subjectParameter, linkParameter, imageParameter);
        }
    
        public virtual int MA_SendNotification_SP(string gcmid, string sentMsg, string subject, string link, string image)
        {
            var gcmidParameter = gcmid != null ?
                new ObjectParameter("gcmid", gcmid) :
                new ObjectParameter("gcmid", typeof(string));
    
            var sentMsgParameter = sentMsg != null ?
                new ObjectParameter("sentMsg", sentMsg) :
                new ObjectParameter("sentMsg", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_SendNotification_SP", gcmidParameter, sentMsgParameter, subjectParameter, linkParameter, imageParameter);
        }
    
        public virtual int MA_SendNotificationFCM_SP(string fcmid, string title, string message)
        {
            var fcmidParameter = fcmid != null ?
                new ObjectParameter("fcmid", fcmid) :
                new ObjectParameter("fcmid", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_SendNotificationFCM_SP", fcmidParameter, titleParameter, messageParameter);
        }
    
        public virtual int MA_SendNotificationToAll_SP(string bodyMsg)
        {
            var bodyMsgParameter = bodyMsg != null ?
                new ObjectParameter("BodyMsg", bodyMsg) :
                new ObjectParameter("BodyMsg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_SendNotificationToAll_SP", bodyMsgParameter);
        }
    
        public virtual ObjectResult<MA_SICPDetails_SP_Result> MA_SICPDetails_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SICPDetails_SP_Result>("MA_SICPDetails_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_SICPGenealogyTooltip_SP_Result> MA_SICPGenealogyTooltip_SP(string idno, string pwd, string treeViewId)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var treeViewIdParameter = treeViewId != null ?
                new ObjectParameter("TreeViewId", treeViewId) :
                new ObjectParameter("TreeViewId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SICPGenealogyTooltip_SP_Result>("MA_SICPGenealogyTooltip_SP", idnoParameter, pwdParameter, treeViewIdParameter);
        }
    
        public virtual ObjectResult<MA_SICPGenealogyTreeview_SP_Result> MA_SICPGenealogyTreeview_SP(string idno, string pwd, string treeViewId)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var treeViewIdParameter = treeViewId != null ?
                new ObjectParameter("TreeViewId", treeViewId) :
                new ObjectParameter("TreeViewId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SICPGenealogyTreeview_SP_Result>("MA_SICPGenealogyTreeview_SP", idnoParameter, pwdParameter, treeViewIdParameter);
        }
    
        public virtual ObjectResult<MA_SponsorDetails_SP_Result> MA_SponsorDetails_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SponsorDetails_SP_Result>("MA_SponsorDetails_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_SSMPDetails_SP_Result> MA_SSMPDetails_SP(string idno, string pwd)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SSMPDetails_SP_Result>("MA_SSMPDetails_SP", idnoParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MA_SSMPGenealogy_SP_Result> MA_SSMPGenealogy_SP(string idno, string pwd, string treeViewId)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var treeViewIdParameter = treeViewId != null ?
                new ObjectParameter("TreeViewId", treeViewId) :
                new ObjectParameter("TreeViewId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SSMPGenealogy_SP_Result>("MA_SSMPGenealogy_SP", idnoParameter, pwdParameter, treeViewIdParameter);
        }
    
        public virtual ObjectResult<MA_SSMPGenealogyTreeview_SP_Result> MA_SSMPGenealogyTreeview_SP(string idno, string pwd, string treeViewId, string leg)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var treeViewIdParameter = treeViewId != null ?
                new ObjectParameter("TreeViewId", treeViewId) :
                new ObjectParameter("TreeViewId", typeof(string));
    
            var legParameter = leg != null ?
                new ObjectParameter("Leg", leg) :
                new ObjectParameter("Leg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SSMPGenealogyTreeview_SP_Result>("MA_SSMPGenealogyTreeview_SP", idnoParameter, pwdParameter, treeViewIdParameter, legParameter);
        }
    
        public virtual ObjectResult<string> MA_SubCategories_SP(string idno, string pwd, string category)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MA_SubCategories_SP", idnoParameter, pwdParameter, categoryParameter);
        }
    
        public virtual ObjectResult<MA_SubCategoriesOne_SP_Result> MA_SubCategoriesOne_SP(string idno, string pwd, string category, string category1)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var category1Parameter = category1 != null ?
                new ObjectParameter("category1", category1) :
                new ObjectParameter("category1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_SubCategoriesOne_SP_Result>("MA_SubCategoriesOne_SP", idnoParameter, pwdParameter, categoryParameter, category1Parameter);
        }
    
        public virtual ObjectResult<MA_TrnsCommfunds_SP_Result> MA_TrnsCommfunds_SP(string idno, string pwd, Nullable<decimal> amount, string action)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_TrnsCommfunds_SP_Result>("MA_TrnsCommfunds_SP", idnoParameter, pwdParameter, amountParameter, actionParameter);
        }
    
        public virtual int MA_UploadMemPhoto_SP(string idno, string pwd, string image)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MA_UploadMemPhoto_SP", idnoParameter, pwdParameter, imageParameter);
        }
    
        public virtual int MainLinks_Sp(Nullable<int> uid, string usertype)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MainLinks_Sp", uidParameter, usertypeParameter);
        }
    
        public virtual int MakeCreditRequest_SP(Nullable<decimal> regid, Nullable<decimal> reqAmt, string mop, string refno, Nullable<System.DateTime> invdate, string invbank, string invbranch, string depbank, string depbranch, string depcity, Nullable<System.DateTime> depdate, string depslip, string remarks)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var reqAmtParameter = reqAmt.HasValue ?
                new ObjectParameter("ReqAmt", reqAmt) :
                new ObjectParameter("ReqAmt", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("Mop", mop) :
                new ObjectParameter("Mop", typeof(string));
    
            var refnoParameter = refno != null ?
                new ObjectParameter("Refno", refno) :
                new ObjectParameter("Refno", typeof(string));
    
            var invdateParameter = invdate.HasValue ?
                new ObjectParameter("Invdate", invdate) :
                new ObjectParameter("Invdate", typeof(System.DateTime));
    
            var invbankParameter = invbank != null ?
                new ObjectParameter("invbank", invbank) :
                new ObjectParameter("invbank", typeof(string));
    
            var invbranchParameter = invbranch != null ?
                new ObjectParameter("invbranch", invbranch) :
                new ObjectParameter("invbranch", typeof(string));
    
            var depbankParameter = depbank != null ?
                new ObjectParameter("depbank", depbank) :
                new ObjectParameter("depbank", typeof(string));
    
            var depbranchParameter = depbranch != null ?
                new ObjectParameter("depbranch", depbranch) :
                new ObjectParameter("depbranch", typeof(string));
    
            var depcityParameter = depcity != null ?
                new ObjectParameter("depcity", depcity) :
                new ObjectParameter("depcity", typeof(string));
    
            var depdateParameter = depdate.HasValue ?
                new ObjectParameter("depdate", depdate) :
                new ObjectParameter("depdate", typeof(System.DateTime));
    
            var depslipParameter = depslip != null ?
                new ObjectParameter("depslip", depslip) :
                new ObjectParameter("depslip", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakeCreditRequest_SP", regidParameter, reqAmtParameter, mopParameter, refnoParameter, invdateParameter, invbankParameter, invbranchParameter, depbankParameter, depbranchParameter, depcityParameter, depdateParameter, depslipParameter, remarksParameter);
        }
    
        public virtual ObjectResult<MakeCreditRequest_SP_LOG_Result> MakeCreditRequest_SP_LOG(Nullable<decimal> regid, Nullable<decimal> reqAmt, string mop, string refno, Nullable<System.DateTime> invdate, string invbank, string invbranch, string depbank, string depbranch, string depcity, Nullable<System.DateTime> depdate, string depslip, string remarks)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var reqAmtParameter = reqAmt.HasValue ?
                new ObjectParameter("ReqAmt", reqAmt) :
                new ObjectParameter("ReqAmt", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("Mop", mop) :
                new ObjectParameter("Mop", typeof(string));
    
            var refnoParameter = refno != null ?
                new ObjectParameter("Refno", refno) :
                new ObjectParameter("Refno", typeof(string));
    
            var invdateParameter = invdate.HasValue ?
                new ObjectParameter("Invdate", invdate) :
                new ObjectParameter("Invdate", typeof(System.DateTime));
    
            var invbankParameter = invbank != null ?
                new ObjectParameter("invbank", invbank) :
                new ObjectParameter("invbank", typeof(string));
    
            var invbranchParameter = invbranch != null ?
                new ObjectParameter("invbranch", invbranch) :
                new ObjectParameter("invbranch", typeof(string));
    
            var depbankParameter = depbank != null ?
                new ObjectParameter("depbank", depbank) :
                new ObjectParameter("depbank", typeof(string));
    
            var depbranchParameter = depbranch != null ?
                new ObjectParameter("depbranch", depbranch) :
                new ObjectParameter("depbranch", typeof(string));
    
            var depcityParameter = depcity != null ?
                new ObjectParameter("depcity", depcity) :
                new ObjectParameter("depcity", typeof(string));
    
            var depdateParameter = depdate.HasValue ?
                new ObjectParameter("depdate", depdate) :
                new ObjectParameter("depdate", typeof(System.DateTime));
    
            var depslipParameter = depslip != null ?
                new ObjectParameter("depslip", depslip) :
                new ObjectParameter("depslip", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MakeCreditRequest_SP_LOG_Result>("MakeCreditRequest_SP_LOG", regidParameter, reqAmtParameter, mopParameter, refnoParameter, invdateParameter, invbankParameter, invbranchParameter, depbankParameter, depbranchParameter, depcityParameter, depdateParameter, depslipParameter, remarksParameter);
        }
    
        public virtual ObjectResult<MemberCV_SP_Result> MemberCV_SP(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberCV_SP_Result>("MemberCV_SP", actionParameter, fromdateParameter, todateParameter, regidParameter);
        }
    
        public virtual ObjectResult<MemberDetailes_Sp_Result> MemberDetailes_Sp(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberDetailes_Sp_Result>("MemberDetailes_Sp", regidParameter);
        }
    
        public virtual ObjectResult<MemberInvoices_Sp_Result> MemberInvoices_Sp(string action, Nullable<int> regid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberInvoices_Sp_Result>("MemberInvoices_Sp", actionParameter, regidParameter);
        }
    
        public virtual ObjectResult<MemberLogin_Sp_Result> MemberLogin_Sp(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberLogin_Sp_Result>("MemberLogin_Sp", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<MemberProfile_Sp_Result> MemberProfile_Sp(Nullable<int> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberProfile_Sp_Result>("MemberProfile_Sp", regidParameter);
        }
    
        public virtual ObjectResult<MemberRpOrders_SP_Result> MemberRpOrders_SP(string regid, Nullable<int> rpstatus, Nullable<long> pageindex, Nullable<long> pagesize, string action)
        {
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var rpstatusParameter = rpstatus.HasValue ?
                new ObjectParameter("rpstatus", rpstatus) :
                new ObjectParameter("rpstatus", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberRpOrders_SP_Result>("MemberRpOrders_SP", regidParameter, rpstatusParameter, pageindexParameter, pagesizeParameter, actionParameter);
        }
    
        public virtual int MemberSearch_Sp(string key, string style, string keyWords, string sortby, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var styleParameter = style != null ?
                new ObjectParameter("style", style) :
                new ObjectParameter("style", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MemberSearch_Sp", keyParameter, styleParameter, keyWordsParameter, sortbyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<MemberSms_Sp_Result> MemberSms_Sp(string sesid, string msg)
        {
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberSms_Sp_Result>("MemberSms_Sp", sesidParameter, msgParameter);
        }
    
        public virtual ObjectResult<MemeberReport_SP_Result> MemeberReport_SP(Nullable<decimal> regid, string regType, Nullable<int> status, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var regTypeParameter = regType != null ?
                new ObjectParameter("RegType", regType) :
                new ObjectParameter("RegType", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemeberReport_SP_Result>("MemeberReport_SP", regidParameter, regTypeParameter, statusParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<MemphotosforAppRej_Sp_Result> MemphotosforAppRej_Sp(string action, Nullable<decimal> regid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("Pageindex", pageindex) :
                new ObjectParameter("Pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemphotosforAppRej_Sp_Result>("MemphotosforAppRej_Sp", actionParameter, regidParameter, fromdateParameter, todateParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<MemphotosReport_Sp_Result> MemphotosReport_Sp(string action, Nullable<decimal> regid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("Pageindex", pageindex) :
                new ObjectParameter("Pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("Pagesize", pagesize) :
                new ObjectParameter("Pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemphotosReport_Sp_Result>("MemphotosReport_Sp", actionParameter, regidParameter, frmdateParameter, todateParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual int MemWithdrawlRequest_SP(string action, Nullable<decimal> regid, Nullable<decimal> amount, string remarks, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MemWithdrawlRequest_SP", actionParameter, regidParameter, amountParameter, remarksParameter, sesidParameter);
        }
    
        public virtual ObjectResult<MemWithdrawlRequestType_Sp_Result> MemWithdrawlRequestType_Sp(string potratype, string potramode, Nullable<decimal> regid)
        {
            var potratypeParameter = potratype != null ?
                new ObjectParameter("potratype", potratype) :
                new ObjectParameter("potratype", typeof(string));
    
            var potramodeParameter = potramode != null ?
                new ObjectParameter("potramode", potramode) :
                new ObjectParameter("potramode", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemWithdrawlRequestType_Sp_Result>("MemWithdrawlRequestType_Sp", potratypeParameter, potramodeParameter, regidParameter);
        }
    
        public virtual int MobileAppsmslog_Sp(Nullable<decimal> regid, string mobile, Nullable<System.DateTime> senddate, string msg, string action, string sessid, string sMSType)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var senddateParameter = senddate.HasValue ?
                new ObjectParameter("senddate", senddate) :
                new ObjectParameter("senddate", typeof(System.DateTime));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            var sMSTypeParameter = sMSType != null ?
                new ObjectParameter("SMSType", sMSType) :
                new ObjectParameter("SMSType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MobileAppsmslog_Sp", regidParameter, mobileParameter, senddateParameter, msgParameter, actionParameter, sessidParameter, sMSTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> MobileSlides_SP(string action, string createdBy, string sessId, string ipAdd, string imgName, Nullable<int> orderNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var sessIdParameter = sessId != null ?
                new ObjectParameter("SessId", sessId) :
                new ObjectParameter("SessId", typeof(string));
    
            var ipAddParameter = ipAdd != null ?
                new ObjectParameter("IpAdd", ipAdd) :
                new ObjectParameter("IpAdd", typeof(string));
    
            var imgNameParameter = imgName != null ?
                new ObjectParameter("ImgName", imgName) :
                new ObjectParameter("ImgName", typeof(string));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("MobileSlides_SP", actionParameter, createdByParameter, sessIdParameter, ipAddParameter, imgNameParameter, orderNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MyChoicePackageCreation_Sp(Nullable<decimal> pid, string packcode, string name, Nullable<decimal> price, Nullable<decimal> bV, Nullable<int> status, string remarks, Nullable<decimal> discamt, Nullable<decimal> unitcomm, Nullable<int> regType)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(decimal));
    
            var packcodeParameter = packcode != null ?
                new ObjectParameter("packcode", packcode) :
                new ObjectParameter("packcode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(decimal));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var discamtParameter = discamt.HasValue ?
                new ObjectParameter("Discamt", discamt) :
                new ObjectParameter("Discamt", typeof(decimal));
    
            var unitcommParameter = unitcomm.HasValue ?
                new ObjectParameter("unitcomm", unitcomm) :
                new ObjectParameter("unitcomm", typeof(decimal));
    
            var regTypeParameter = regType.HasValue ?
                new ObjectParameter("RegType", regType) :
                new ObjectParameter("RegType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MyChoicePackageCreation_Sp", pidParameter, packcodeParameter, nameParameter, priceParameter, bVParameter, statusParameter, remarksParameter, discamtParameter, unitcommParameter, regTypeParameter);
        }
    
        public virtual ObjectResult<string> Newslog_sp(string action, Nullable<int> nlid, Nullable<int> nid, Nullable<decimal> regid, Nullable<int> nread, Nullable<System.DateTime> createdDate, string sesid, Nullable<int> status)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var nlidParameter = nlid.HasValue ?
                new ObjectParameter("Nlid", nlid) :
                new ObjectParameter("Nlid", typeof(int));
    
            var nidParameter = nid.HasValue ?
                new ObjectParameter("Nid", nid) :
                new ObjectParameter("Nid", typeof(int));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var nreadParameter = nread.HasValue ?
                new ObjectParameter("Nread", nread) :
                new ObjectParameter("Nread", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Newslog_sp", actionParameter, nlidParameter, nidParameter, regidParameter, nreadParameter, createdDateParameter, sesidParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> NewsRpt_Sp(string action, Nullable<int> nid, string description, Nullable<int> createdBy, string nTYpe, string subject)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var nidParameter = nid.HasValue ?
                new ObjectParameter("Nid", nid) :
                new ObjectParameter("Nid", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var nTYpeParameter = nTYpe != null ?
                new ObjectParameter("NTYpe", nTYpe) :
                new ObjectParameter("NTYpe", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("NewsRpt_Sp", actionParameter, nidParameter, descriptionParameter, createdByParameter, nTYpeParameter, subjectParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> OfferCreate_Sp(string action, string type, string itemid, string pcode, string offName, Nullable<int> noofcupons, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string sessid, string ipaddress, Nullable<int> createdby, string remarks, Nullable<int> status, Nullable<int> noofCoupVal, Nullable<int> txtcuponval1, Nullable<int> minValue1, Nullable<int> maxValue1, Nullable<int> txtcuponval2, Nullable<int> minValue2, Nullable<int> maxValue2, Nullable<int> txtcuponval3, Nullable<int> minValue3, Nullable<int> maxValue3, Nullable<int> txtcuponval4, Nullable<int> minValue4, Nullable<int> maxValue4, Nullable<int> txtcuponval5, Nullable<int> minValue5, Nullable<int> maxValue5)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var itemidParameter = itemid != null ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var offNameParameter = offName != null ?
                new ObjectParameter("offName", offName) :
                new ObjectParameter("offName", typeof(string));
    
            var noofcuponsParameter = noofcupons.HasValue ?
                new ObjectParameter("noofcupons", noofcupons) :
                new ObjectParameter("noofcupons", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var noofCoupValParameter = noofCoupVal.HasValue ?
                new ObjectParameter("NoofCoupVal", noofCoupVal) :
                new ObjectParameter("NoofCoupVal", typeof(int));
    
            var txtcuponval1Parameter = txtcuponval1.HasValue ?
                new ObjectParameter("txtcuponval1", txtcuponval1) :
                new ObjectParameter("txtcuponval1", typeof(int));
    
            var minValue1Parameter = minValue1.HasValue ?
                new ObjectParameter("MinValue1", minValue1) :
                new ObjectParameter("MinValue1", typeof(int));
    
            var maxValue1Parameter = maxValue1.HasValue ?
                new ObjectParameter("MaxValue1", maxValue1) :
                new ObjectParameter("MaxValue1", typeof(int));
    
            var txtcuponval2Parameter = txtcuponval2.HasValue ?
                new ObjectParameter("txtcuponval2", txtcuponval2) :
                new ObjectParameter("txtcuponval2", typeof(int));
    
            var minValue2Parameter = minValue2.HasValue ?
                new ObjectParameter("MinValue2", minValue2) :
                new ObjectParameter("MinValue2", typeof(int));
    
            var maxValue2Parameter = maxValue2.HasValue ?
                new ObjectParameter("MaxValue2", maxValue2) :
                new ObjectParameter("MaxValue2", typeof(int));
    
            var txtcuponval3Parameter = txtcuponval3.HasValue ?
                new ObjectParameter("txtcuponval3", txtcuponval3) :
                new ObjectParameter("txtcuponval3", typeof(int));
    
            var minValue3Parameter = minValue3.HasValue ?
                new ObjectParameter("MinValue3", minValue3) :
                new ObjectParameter("MinValue3", typeof(int));
    
            var maxValue3Parameter = maxValue3.HasValue ?
                new ObjectParameter("MaxValue3", maxValue3) :
                new ObjectParameter("MaxValue3", typeof(int));
    
            var txtcuponval4Parameter = txtcuponval4.HasValue ?
                new ObjectParameter("txtcuponval4", txtcuponval4) :
                new ObjectParameter("txtcuponval4", typeof(int));
    
            var minValue4Parameter = minValue4.HasValue ?
                new ObjectParameter("MinValue4", minValue4) :
                new ObjectParameter("MinValue4", typeof(int));
    
            var maxValue4Parameter = maxValue4.HasValue ?
                new ObjectParameter("MaxValue4", maxValue4) :
                new ObjectParameter("MaxValue4", typeof(int));
    
            var txtcuponval5Parameter = txtcuponval5.HasValue ?
                new ObjectParameter("txtcuponval5", txtcuponval5) :
                new ObjectParameter("txtcuponval5", typeof(int));
    
            var minValue5Parameter = minValue5.HasValue ?
                new ObjectParameter("MinValue5", minValue5) :
                new ObjectParameter("MinValue5", typeof(int));
    
            var maxValue5Parameter = maxValue5.HasValue ?
                new ObjectParameter("MaxValue5", maxValue5) :
                new ObjectParameter("MaxValue5", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("OfferCreate_Sp", actionParameter, typeParameter, itemidParameter, pcodeParameter, offNameParameter, noofcuponsParameter, frmdateParameter, todateParameter, sessidParameter, ipaddressParameter, createdbyParameter, remarksParameter, statusParameter, noofCoupValParameter, txtcuponval1Parameter, minValue1Parameter, maxValue1Parameter, txtcuponval2Parameter, minValue2Parameter, maxValue2Parameter, txtcuponval3Parameter, minValue3Parameter, maxValue3Parameter, txtcuponval4Parameter, minValue4Parameter, maxValue4Parameter, txtcuponval5Parameter, minValue5Parameter, maxValue5Parameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OfferPopups1(string action, string title, string subject, string image, string description, Nullable<int> uid, string exp, Nullable<int> sNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var expParameter = exp != null ?
                new ObjectParameter("Exp", exp) :
                new ObjectParameter("Exp", typeof(string));
    
            var sNoParameter = sNo.HasValue ?
                new ObjectParameter("SNo", sNo) :
                new ObjectParameter("SNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OfferPopups1", actionParameter, titleParameter, subjectParameter, imageParameter, descriptionParameter, uidParameter, expParameter, sNoParameter);
        }
    
        public virtual ObjectResult<OfferReport_Sp_Result> OfferReport_Sp(string action, string offname, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, string type)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var offnameParameter = offname != null ?
                new ObjectParameter("Offname", offname) :
                new ObjectParameter("Offname", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OfferReport_Sp_Result>("OfferReport_Sp", actionParameter, offnameParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, typeParameter);
        }
    
        public virtual int OffersJob_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OffersJob_sp");
        }
    
        public virtual ObjectResult<OnlinepaymentFailed_Sp_Result> OnlinepaymentFailed_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OnlinepaymentFailed_Sp_Result>("OnlinepaymentFailed_Sp", frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int OnlinepaymentSuccess_Sp(string searchid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, string pgtype)
        {
            var searchidParameter = searchid != null ?
                new ObjectParameter("searchid", searchid) :
                new ObjectParameter("searchid", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OnlinepaymentSuccess_Sp", searchidParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, pgtypeParameter);
        }
    
        public virtual ObjectResult<PackageList_Sp_Result> PackageList_Sp(string action, string searchId, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var searchIdParameter = searchId != null ?
                new ObjectParameter("searchId", searchId) :
                new ObjectParameter("searchId", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PackageList_Sp_Result>("PackageList_Sp", actionParameter, searchIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PackageMaster_Sp(string name, Nullable<decimal> price, Nullable<decimal> bv, Nullable<int> pStatus, string remarks, string plantype, Nullable<decimal> discamt, Nullable<decimal> unitcomm, Nullable<int> regType, string randomno, string sesid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var bvParameter = bv.HasValue ?
                new ObjectParameter("bv", bv) :
                new ObjectParameter("bv", typeof(decimal));
    
            var pStatusParameter = pStatus.HasValue ?
                new ObjectParameter("PStatus", pStatus) :
                new ObjectParameter("PStatus", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var plantypeParameter = plantype != null ?
                new ObjectParameter("plantype", plantype) :
                new ObjectParameter("plantype", typeof(string));
    
            var discamtParameter = discamt.HasValue ?
                new ObjectParameter("Discamt", discamt) :
                new ObjectParameter("Discamt", typeof(decimal));
    
            var unitcommParameter = unitcomm.HasValue ?
                new ObjectParameter("unitcomm", unitcomm) :
                new ObjectParameter("unitcomm", typeof(decimal));
    
            var regTypeParameter = regType.HasValue ?
                new ObjectParameter("RegType", regType) :
                new ObjectParameter("RegType", typeof(int));
    
            var randomnoParameter = randomno != null ?
                new ObjectParameter("randomno", randomno) :
                new ObjectParameter("randomno", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PackageMaster_Sp", nameParameter, priceParameter, bvParameter, pStatusParameter, remarksParameter, plantypeParameter, discamtParameter, unitcommParameter, regTypeParameter, randomnoParameter, sesidParameter);
        }
    
        public virtual int PackageUpdate_Sp(string packcode, string name, Nullable<int> status, string remarks)
        {
            var packcodeParameter = packcode != null ?
                new ObjectParameter("packcode", packcode) :
                new ObjectParameter("packcode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PackageUpdate_Sp", packcodeParameter, nameParameter, statusParameter, remarksParameter);
        }
    
        public virtual int PartialInsertReg_Sp(string userno, Nullable<int> sprno, string spseries, string title, string fname, string lname, Nullable<int> sex, string state, string mobile, string eMail, string lpassword, string tpassword, string sesid, string decpwd, string ddno, Nullable<System.DateTime> dddate, string ddbank, string ddbranch, string mop, Nullable<decimal> amount, string action, string unqid, string ip)
        {
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var sprnoParameter = sprno.HasValue ?
                new ObjectParameter("sprno", sprno) :
                new ObjectParameter("sprno", typeof(int));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var decpwdParameter = decpwd != null ?
                new ObjectParameter("Decpwd", decpwd) :
                new ObjectParameter("Decpwd", typeof(string));
    
            var ddnoParameter = ddno != null ?
                new ObjectParameter("ddno", ddno) :
                new ObjectParameter("ddno", typeof(string));
    
            var dddateParameter = dddate.HasValue ?
                new ObjectParameter("dddate", dddate) :
                new ObjectParameter("dddate", typeof(System.DateTime));
    
            var ddbankParameter = ddbank != null ?
                new ObjectParameter("ddbank", ddbank) :
                new ObjectParameter("ddbank", typeof(string));
    
            var ddbranchParameter = ddbranch != null ?
                new ObjectParameter("ddbranch", ddbranch) :
                new ObjectParameter("ddbranch", typeof(string));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var unqidParameter = unqid != null ?
                new ObjectParameter("Unqid", unqid) :
                new ObjectParameter("Unqid", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PartialInsertReg_Sp", usernoParameter, sprnoParameter, spseriesParameter, titleParameter, fnameParameter, lnameParameter, sexParameter, stateParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, sesidParameter, decpwdParameter, ddnoParameter, dddateParameter, ddbankParameter, ddbranchParameter, mopParameter, amountParameter, actionParameter, unqidParameter, ipParameter);
        }
    
        public virtual int Pay_SICP_CloseSchedule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pay_SICP_CloseSchedule");
        }
    
        public virtual int Pay_SSMP_Closeschedule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pay_SSMP_Closeschedule");
        }
    
        public virtual int Payout_SICP_Monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Payout_SICP_Monthly");
        }
    
        public virtual int Payout_SSMP_Weekly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Payout_SSMP_Weekly");
        }
    
        public virtual ObjectResult<PayoutApprove_SP_Result> PayoutApprove_SP(Nullable<int> payno, Nullable<int> uid, string sessid)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PayoutApprove_SP_Result>("PayoutApprove_SP", paynoParameter, uidParameter, sessidParameter);
        }
    
        public virtual int PayoutReports_Member_Sp(string action, Nullable<decimal> regid, string payno, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var paynoParameter = payno != null ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PayoutReports_Member_Sp", actionParameter, regidParameter, paynoParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<PendingGatewayOrdersRpt_Sp_Result> PendingGatewayOrdersRpt_Sp(string action, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PendingGatewayOrdersRpt_Sp_Result>("PendingGatewayOrdersRpt_Sp", actionParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int POS_StockDispatch_Sp(string action, string fullitemcode, string idno, string courier, string sesid, string mipadd, Nullable<int> saleto, ObjectParameter resRefNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("courier", courier) :
                new ObjectParameter("courier", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var mipaddParameter = mipadd != null ?
                new ObjectParameter("Mipadd", mipadd) :
                new ObjectParameter("Mipadd", typeof(string));
    
            var saletoParameter = saleto.HasValue ?
                new ObjectParameter("saleto", saleto) :
                new ObjectParameter("saleto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("POS_StockDispatch_Sp", actionParameter, fullitemcodeParameter, idnoParameter, courierParameter, sesidParameter, mipaddParameter, saletoParameter, resRefNo);
        }
    
        public virtual int prod_attributes_fields_Sp(Nullable<int> pcode, string attrval11, string attrval12, string attrval13, string attrval14, string attrval15, string attrval21, string attrval22, string attrval23, string attrval24, string attrval25, string attrval31, string attrval32, string attrval33, string attrval34, string attrval35, string attrval41, string attrval42, string attrval43, string attrval44, string attrval45, string attrval51, string attrval52, string attrval53, string attrval54, string attrval55, string attrval61, string attrval62, string attrval63, string attrval64, string attrval65, string attrval71, string attrval72, string attrval73, string attrval74, string attrval75, string attrval81, string attrval82, string attrval83, string attrval84, string attrval85, string attrval91, string attrval92, string attrval93, string attrval94, string attrval95, string attrval101, string attrval102, string attrval103, string attrval104, string attrval105)
        {
            var pcodeParameter = pcode.HasValue ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(int));
    
            var attrval11Parameter = attrval11 != null ?
                new ObjectParameter("attrval11", attrval11) :
                new ObjectParameter("attrval11", typeof(string));
    
            var attrval12Parameter = attrval12 != null ?
                new ObjectParameter("attrval12", attrval12) :
                new ObjectParameter("attrval12", typeof(string));
    
            var attrval13Parameter = attrval13 != null ?
                new ObjectParameter("attrval13", attrval13) :
                new ObjectParameter("attrval13", typeof(string));
    
            var attrval14Parameter = attrval14 != null ?
                new ObjectParameter("attrval14", attrval14) :
                new ObjectParameter("attrval14", typeof(string));
    
            var attrval15Parameter = attrval15 != null ?
                new ObjectParameter("attrval15", attrval15) :
                new ObjectParameter("attrval15", typeof(string));
    
            var attrval21Parameter = attrval21 != null ?
                new ObjectParameter("attrval21", attrval21) :
                new ObjectParameter("attrval21", typeof(string));
    
            var attrval22Parameter = attrval22 != null ?
                new ObjectParameter("attrval22", attrval22) :
                new ObjectParameter("attrval22", typeof(string));
    
            var attrval23Parameter = attrval23 != null ?
                new ObjectParameter("attrval23", attrval23) :
                new ObjectParameter("attrval23", typeof(string));
    
            var attrval24Parameter = attrval24 != null ?
                new ObjectParameter("attrval24", attrval24) :
                new ObjectParameter("attrval24", typeof(string));
    
            var attrval25Parameter = attrval25 != null ?
                new ObjectParameter("attrval25", attrval25) :
                new ObjectParameter("attrval25", typeof(string));
    
            var attrval31Parameter = attrval31 != null ?
                new ObjectParameter("attrval31", attrval31) :
                new ObjectParameter("attrval31", typeof(string));
    
            var attrval32Parameter = attrval32 != null ?
                new ObjectParameter("attrval32", attrval32) :
                new ObjectParameter("attrval32", typeof(string));
    
            var attrval33Parameter = attrval33 != null ?
                new ObjectParameter("attrval33", attrval33) :
                new ObjectParameter("attrval33", typeof(string));
    
            var attrval34Parameter = attrval34 != null ?
                new ObjectParameter("attrval34", attrval34) :
                new ObjectParameter("attrval34", typeof(string));
    
            var attrval35Parameter = attrval35 != null ?
                new ObjectParameter("attrval35", attrval35) :
                new ObjectParameter("attrval35", typeof(string));
    
            var attrval41Parameter = attrval41 != null ?
                new ObjectParameter("attrval41", attrval41) :
                new ObjectParameter("attrval41", typeof(string));
    
            var attrval42Parameter = attrval42 != null ?
                new ObjectParameter("attrval42", attrval42) :
                new ObjectParameter("attrval42", typeof(string));
    
            var attrval43Parameter = attrval43 != null ?
                new ObjectParameter("attrval43", attrval43) :
                new ObjectParameter("attrval43", typeof(string));
    
            var attrval44Parameter = attrval44 != null ?
                new ObjectParameter("attrval44", attrval44) :
                new ObjectParameter("attrval44", typeof(string));
    
            var attrval45Parameter = attrval45 != null ?
                new ObjectParameter("attrval45", attrval45) :
                new ObjectParameter("attrval45", typeof(string));
    
            var attrval51Parameter = attrval51 != null ?
                new ObjectParameter("attrval51", attrval51) :
                new ObjectParameter("attrval51", typeof(string));
    
            var attrval52Parameter = attrval52 != null ?
                new ObjectParameter("attrval52", attrval52) :
                new ObjectParameter("attrval52", typeof(string));
    
            var attrval53Parameter = attrval53 != null ?
                new ObjectParameter("attrval53", attrval53) :
                new ObjectParameter("attrval53", typeof(string));
    
            var attrval54Parameter = attrval54 != null ?
                new ObjectParameter("attrval54", attrval54) :
                new ObjectParameter("attrval54", typeof(string));
    
            var attrval55Parameter = attrval55 != null ?
                new ObjectParameter("attrval55", attrval55) :
                new ObjectParameter("attrval55", typeof(string));
    
            var attrval61Parameter = attrval61 != null ?
                new ObjectParameter("attrval61", attrval61) :
                new ObjectParameter("attrval61", typeof(string));
    
            var attrval62Parameter = attrval62 != null ?
                new ObjectParameter("attrval62", attrval62) :
                new ObjectParameter("attrval62", typeof(string));
    
            var attrval63Parameter = attrval63 != null ?
                new ObjectParameter("attrval63", attrval63) :
                new ObjectParameter("attrval63", typeof(string));
    
            var attrval64Parameter = attrval64 != null ?
                new ObjectParameter("attrval64", attrval64) :
                new ObjectParameter("attrval64", typeof(string));
    
            var attrval65Parameter = attrval65 != null ?
                new ObjectParameter("attrval65", attrval65) :
                new ObjectParameter("attrval65", typeof(string));
    
            var attrval71Parameter = attrval71 != null ?
                new ObjectParameter("attrval71", attrval71) :
                new ObjectParameter("attrval71", typeof(string));
    
            var attrval72Parameter = attrval72 != null ?
                new ObjectParameter("attrval72", attrval72) :
                new ObjectParameter("attrval72", typeof(string));
    
            var attrval73Parameter = attrval73 != null ?
                new ObjectParameter("attrval73", attrval73) :
                new ObjectParameter("attrval73", typeof(string));
    
            var attrval74Parameter = attrval74 != null ?
                new ObjectParameter("attrval74", attrval74) :
                new ObjectParameter("attrval74", typeof(string));
    
            var attrval75Parameter = attrval75 != null ?
                new ObjectParameter("attrval75", attrval75) :
                new ObjectParameter("attrval75", typeof(string));
    
            var attrval81Parameter = attrval81 != null ?
                new ObjectParameter("attrval81", attrval81) :
                new ObjectParameter("attrval81", typeof(string));
    
            var attrval82Parameter = attrval82 != null ?
                new ObjectParameter("attrval82", attrval82) :
                new ObjectParameter("attrval82", typeof(string));
    
            var attrval83Parameter = attrval83 != null ?
                new ObjectParameter("attrval83", attrval83) :
                new ObjectParameter("attrval83", typeof(string));
    
            var attrval84Parameter = attrval84 != null ?
                new ObjectParameter("attrval84", attrval84) :
                new ObjectParameter("attrval84", typeof(string));
    
            var attrval85Parameter = attrval85 != null ?
                new ObjectParameter("attrval85", attrval85) :
                new ObjectParameter("attrval85", typeof(string));
    
            var attrval91Parameter = attrval91 != null ?
                new ObjectParameter("attrval91", attrval91) :
                new ObjectParameter("attrval91", typeof(string));
    
            var attrval92Parameter = attrval92 != null ?
                new ObjectParameter("attrval92", attrval92) :
                new ObjectParameter("attrval92", typeof(string));
    
            var attrval93Parameter = attrval93 != null ?
                new ObjectParameter("attrval93", attrval93) :
                new ObjectParameter("attrval93", typeof(string));
    
            var attrval94Parameter = attrval94 != null ?
                new ObjectParameter("attrval94", attrval94) :
                new ObjectParameter("attrval94", typeof(string));
    
            var attrval95Parameter = attrval95 != null ?
                new ObjectParameter("attrval95", attrval95) :
                new ObjectParameter("attrval95", typeof(string));
    
            var attrval101Parameter = attrval101 != null ?
                new ObjectParameter("attrval101", attrval101) :
                new ObjectParameter("attrval101", typeof(string));
    
            var attrval102Parameter = attrval102 != null ?
                new ObjectParameter("attrval102", attrval102) :
                new ObjectParameter("attrval102", typeof(string));
    
            var attrval103Parameter = attrval103 != null ?
                new ObjectParameter("attrval103", attrval103) :
                new ObjectParameter("attrval103", typeof(string));
    
            var attrval104Parameter = attrval104 != null ?
                new ObjectParameter("attrval104", attrval104) :
                new ObjectParameter("attrval104", typeof(string));
    
            var attrval105Parameter = attrval105 != null ?
                new ObjectParameter("attrval105", attrval105) :
                new ObjectParameter("attrval105", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prod_attributes_fields_Sp", pcodeParameter, attrval11Parameter, attrval12Parameter, attrval13Parameter, attrval14Parameter, attrval15Parameter, attrval21Parameter, attrval22Parameter, attrval23Parameter, attrval24Parameter, attrval25Parameter, attrval31Parameter, attrval32Parameter, attrval33Parameter, attrval34Parameter, attrval35Parameter, attrval41Parameter, attrval42Parameter, attrval43Parameter, attrval44Parameter, attrval45Parameter, attrval51Parameter, attrval52Parameter, attrval53Parameter, attrval54Parameter, attrval55Parameter, attrval61Parameter, attrval62Parameter, attrval63Parameter, attrval64Parameter, attrval65Parameter, attrval71Parameter, attrval72Parameter, attrval73Parameter, attrval74Parameter, attrval75Parameter, attrval81Parameter, attrval82Parameter, attrval83Parameter, attrval84Parameter, attrval85Parameter, attrval91Parameter, attrval92Parameter, attrval93Parameter, attrval94Parameter, attrval95Parameter, attrval101Parameter, attrval102Parameter, attrval103Parameter, attrval104Parameter, attrval105Parameter);
        }
    
        public virtual int Prod_attributes_Sp(Nullable<int> pcode, string attr1, string attr2, string attr3, string attr4, string attr5, string attr6, string attr7, string attr8, string attr9, string attr10)
        {
            var pcodeParameter = pcode.HasValue ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(int));
    
            var attr1Parameter = attr1 != null ?
                new ObjectParameter("attr1", attr1) :
                new ObjectParameter("attr1", typeof(string));
    
            var attr2Parameter = attr2 != null ?
                new ObjectParameter("attr2", attr2) :
                new ObjectParameter("attr2", typeof(string));
    
            var attr3Parameter = attr3 != null ?
                new ObjectParameter("attr3", attr3) :
                new ObjectParameter("attr3", typeof(string));
    
            var attr4Parameter = attr4 != null ?
                new ObjectParameter("attr4", attr4) :
                new ObjectParameter("attr4", typeof(string));
    
            var attr5Parameter = attr5 != null ?
                new ObjectParameter("attr5", attr5) :
                new ObjectParameter("attr5", typeof(string));
    
            var attr6Parameter = attr6 != null ?
                new ObjectParameter("attr6", attr6) :
                new ObjectParameter("attr6", typeof(string));
    
            var attr7Parameter = attr7 != null ?
                new ObjectParameter("attr7", attr7) :
                new ObjectParameter("attr7", typeof(string));
    
            var attr8Parameter = attr8 != null ?
                new ObjectParameter("attr8", attr8) :
                new ObjectParameter("attr8", typeof(string));
    
            var attr9Parameter = attr9 != null ?
                new ObjectParameter("attr9", attr9) :
                new ObjectParameter("attr9", typeof(string));
    
            var attr10Parameter = attr10 != null ?
                new ObjectParameter("attr10", attr10) :
                new ObjectParameter("attr10", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prod_attributes_Sp", pcodeParameter, attr1Parameter, attr2Parameter, attr3Parameter, attr4Parameter, attr5Parameter, attr6Parameter, attr7Parameter, attr8Parameter, attr9Parameter, attr10Parameter);
        }
    
        public virtual ObjectResult<ProductList_Sp_Result> ProductList_Sp(string action, string searchID, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var searchIDParameter = searchID != null ?
                new ObjectParameter("searchID", searchID) :
                new ObjectParameter("searchID", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductList_Sp_Result>("ProductList_Sp", actionParameter, searchIDParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int Productprices_Sp(string pcode, Nullable<decimal> vat, Nullable<decimal> cst, Nullable<int> stateId, Nullable<int> allow)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var vatParameter = vat.HasValue ?
                new ObjectParameter("vat", vat) :
                new ObjectParameter("vat", typeof(decimal));
    
            var cstParameter = cst.HasValue ?
                new ObjectParameter("cst", cst) :
                new ObjectParameter("cst", typeof(decimal));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("stateId", stateId) :
                new ObjectParameter("stateId", typeof(int));
    
            var allowParameter = allow.HasValue ?
                new ObjectParameter("allow", allow) :
                new ObjectParameter("allow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Productprices_Sp", pcodeParameter, vatParameter, cstParameter, stateIdParameter, allowParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegistrationOnlineInsert_Sp(string action, string userno, string sprno, string spseries, string fname, string lname, Nullable<System.DateTime> dob, string sex, string add1, string add2, string city, string district, string state, Nullable<int> pin, string mobile, string eMail, string lpassword, string tpassword, string sesid, Nullable<decimal> downto, string panno, string title, string guardian, string altmobile, string qualification, string subject, string ddrefno, Nullable<System.DateTime> refdddate, string refddbank, string ddrefbranch, string reftype, Nullable<int> pid, Nullable<int> bV, string percity, string perdistrict, string perstate, Nullable<int> perpin, string landline, string careof, string fullitemcode, string oRDER_ID, string paymentStatus, string billStatus, string tXNID, Nullable<int> regid, string cUST_ID, Nullable<decimal> tXN_AMOUNT, string pgtype)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var usernoParameter = userno != null ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(string));
    
            var sprnoParameter = sprno != null ?
                new ObjectParameter("sprno", sprno) :
                new ObjectParameter("sprno", typeof(string));
    
            var spseriesParameter = spseries != null ?
                new ObjectParameter("spseries", spseries) :
                new ObjectParameter("spseries", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var add1Parameter = add1 != null ?
                new ObjectParameter("add1", add1) :
                new ObjectParameter("add1", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var lpasswordParameter = lpassword != null ?
                new ObjectParameter("lpassword", lpassword) :
                new ObjectParameter("lpassword", typeof(string));
    
            var tpasswordParameter = tpassword != null ?
                new ObjectParameter("tpassword", tpassword) :
                new ObjectParameter("tpassword", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var downtoParameter = downto.HasValue ?
                new ObjectParameter("downto", downto) :
                new ObjectParameter("downto", typeof(decimal));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var guardianParameter = guardian != null ?
                new ObjectParameter("guardian", guardian) :
                new ObjectParameter("guardian", typeof(string));
    
            var altmobileParameter = altmobile != null ?
                new ObjectParameter("altmobile", altmobile) :
                new ObjectParameter("altmobile", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var ddrefnoParameter = ddrefno != null ?
                new ObjectParameter("ddrefno", ddrefno) :
                new ObjectParameter("ddrefno", typeof(string));
    
            var refdddateParameter = refdddate.HasValue ?
                new ObjectParameter("Refdddate", refdddate) :
                new ObjectParameter("Refdddate", typeof(System.DateTime));
    
            var refddbankParameter = refddbank != null ?
                new ObjectParameter("refddbank", refddbank) :
                new ObjectParameter("refddbank", typeof(string));
    
            var ddrefbranchParameter = ddrefbranch != null ?
                new ObjectParameter("ddrefbranch", ddrefbranch) :
                new ObjectParameter("ddrefbranch", typeof(string));
    
            var reftypeParameter = reftype != null ?
                new ObjectParameter("reftype", reftype) :
                new ObjectParameter("reftype", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var bVParameter = bV.HasValue ?
                new ObjectParameter("BV", bV) :
                new ObjectParameter("BV", typeof(int));
    
            var percityParameter = percity != null ?
                new ObjectParameter("percity", percity) :
                new ObjectParameter("percity", typeof(string));
    
            var perdistrictParameter = perdistrict != null ?
                new ObjectParameter("perdistrict", perdistrict) :
                new ObjectParameter("perdistrict", typeof(string));
    
            var perstateParameter = perstate != null ?
                new ObjectParameter("perstate", perstate) :
                new ObjectParameter("perstate", typeof(string));
    
            var perpinParameter = perpin.HasValue ?
                new ObjectParameter("perpin", perpin) :
                new ObjectParameter("perpin", typeof(int));
    
            var landlineParameter = landline != null ?
                new ObjectParameter("landline", landline) :
                new ObjectParameter("landline", typeof(string));
    
            var careofParameter = careof != null ?
                new ObjectParameter("careof", careof) :
                new ObjectParameter("careof", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var billStatusParameter = billStatus != null ?
                new ObjectParameter("BillStatus", billStatus) :
                new ObjectParameter("BillStatus", typeof(string));
    
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var cUST_IDParameter = cUST_ID != null ?
                new ObjectParameter("CUST_ID", cUST_ID) :
                new ObjectParameter("CUST_ID", typeof(string));
    
            var tXN_AMOUNTParameter = tXN_AMOUNT.HasValue ?
                new ObjectParameter("TXN_AMOUNT", tXN_AMOUNT) :
                new ObjectParameter("TXN_AMOUNT", typeof(decimal));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistrationOnlineInsert_Sp", actionParameter, usernoParameter, sprnoParameter, spseriesParameter, fnameParameter, lnameParameter, dobParameter, sexParameter, add1Parameter, add2Parameter, cityParameter, districtParameter, stateParameter, pinParameter, mobileParameter, eMailParameter, lpasswordParameter, tpasswordParameter, sesidParameter, downtoParameter, pannoParameter, titleParameter, guardianParameter, altmobileParameter, qualificationParameter, subjectParameter, ddrefnoParameter, refdddateParameter, refddbankParameter, ddrefbranchParameter, reftypeParameter, pidParameter, bVParameter, percityParameter, perdistrictParameter, perstateParameter, perpinParameter, landlineParameter, careofParameter, fullitemcodeParameter, oRDER_IDParameter, paymentStatusParameter, billStatusParameter, tXNIDParameter, regidParameter, cUST_IDParameter, tXN_AMOUNTParameter, pgtypeParameter);
        }
    
        public virtual ObjectResult<RegistrationReport_Sp_Result> RegistrationReport_Sp(string searchid, Nullable<int> status, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<int> stateid, Nullable<int> pageIndex, Nullable<int> pageSize, string val)
        {
            var searchidParameter = searchid != null ?
                new ObjectParameter("searchid", searchid) :
                new ObjectParameter("searchid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var valParameter = val != null ?
                new ObjectParameter("Val", val) :
                new ObjectParameter("Val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistrationReport_Sp_Result>("RegistrationReport_Sp", searchidParameter, statusParameter, frmdateParameter, todateParameter, regidParameter, stateidParameter, pageIndexParameter, pageSizeParameter, valParameter);
        }
    
        public virtual ObjectResult<RegMCPackDet_Sp_Result> RegMCPackDet_Sp(Nullable<decimal> pid, string fullitemcode)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(decimal));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegMCPackDet_Sp_Result>("RegMCPackDet_Sp", pidParameter, fullitemcodeParameter);
        }
    
        public virtual ObjectResult<RegPackDet_Sp_Result> RegPackDet_Sp(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegPackDet_Sp_Result>("RegPackDet_Sp", pidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ReplyMail_SP(string mAILFROM, string mAILTO, string sUBJECT, string mSG, Nullable<System.DateTime> sENTDATE, Nullable<int> sAVEnSEND, Nullable<int> mAILID, string repSubject, string file, string reqNo, string status)
        {
            var mAILFROMParameter = mAILFROM != null ?
                new ObjectParameter("MAILFROM", mAILFROM) :
                new ObjectParameter("MAILFROM", typeof(string));
    
            var mAILTOParameter = mAILTO != null ?
                new ObjectParameter("MAILTO", mAILTO) :
                new ObjectParameter("MAILTO", typeof(string));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var mSGParameter = mSG != null ?
                new ObjectParameter("MSG", mSG) :
                new ObjectParameter("MSG", typeof(string));
    
            var sENTDATEParameter = sENTDATE.HasValue ?
                new ObjectParameter("SENTDATE", sENTDATE) :
                new ObjectParameter("SENTDATE", typeof(System.DateTime));
    
            var sAVEnSENDParameter = sAVEnSEND.HasValue ?
                new ObjectParameter("SAVEnSEND", sAVEnSEND) :
                new ObjectParameter("SAVEnSEND", typeof(int));
    
            var mAILIDParameter = mAILID.HasValue ?
                new ObjectParameter("MAILID", mAILID) :
                new ObjectParameter("MAILID", typeof(int));
    
            var repSubjectParameter = repSubject != null ?
                new ObjectParameter("RepSubject", repSubject) :
                new ObjectParameter("RepSubject", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("file", file) :
                new ObjectParameter("file", typeof(string));
    
            var reqNoParameter = reqNo != null ?
                new ObjectParameter("ReqNo", reqNo) :
                new ObjectParameter("ReqNo", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ReplyMail_SP", mAILFROMParameter, mAILTOParameter, sUBJECTParameter, mSGParameter, sENTDATEParameter, sAVEnSENDParameter, mAILIDParameter, repSubjectParameter, fileParameter, reqNoParameter, statusParameter);
        }
    
        public virtual ObjectResult<RePurchageProductRpt_Sp_Result> RePurchageProductRpt_Sp(string action, string category, string subCategory, string subCategoryone, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var subCategoryoneParameter = subCategoryone != null ?
                new ObjectParameter("SubCategoryone", subCategoryone) :
                new ObjectParameter("SubCategoryone", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RePurchageProductRpt_Sp_Result>("RePurchageProductRpt_Sp", actionParameter, categoryParameter, subCategoryParameter, subCategoryoneParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<string> Repurchaseproducts_Sp(string pcode, string pname, Nullable<decimal> price, Nullable<decimal> discAmt, Nullable<decimal> pv, Nullable<decimal> shpchrg, string descr, Nullable<int> rpcid, Nullable<int> attr, string alias, Nullable<int> pStatus, Nullable<int> createdBy, string sesId, string shopinfo, Nullable<decimal> offprice, Nullable<decimal> dp, Nullable<int> offSts, string hSNO, Nullable<decimal> gST)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var discAmtParameter = discAmt.HasValue ?
                new ObjectParameter("discAmt", discAmt) :
                new ObjectParameter("discAmt", typeof(decimal));
    
            var pvParameter = pv.HasValue ?
                new ObjectParameter("pv", pv) :
                new ObjectParameter("pv", typeof(decimal));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var rpcidParameter = rpcid.HasValue ?
                new ObjectParameter("rpcid", rpcid) :
                new ObjectParameter("rpcid", typeof(int));
    
            var attrParameter = attr.HasValue ?
                new ObjectParameter("attr", attr) :
                new ObjectParameter("attr", typeof(int));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var pStatusParameter = pStatus.HasValue ?
                new ObjectParameter("pStatus", pStatus) :
                new ObjectParameter("pStatus", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(int));
    
            var sesIdParameter = sesId != null ?
                new ObjectParameter("sesId", sesId) :
                new ObjectParameter("sesId", typeof(string));
    
            var shopinfoParameter = shopinfo != null ?
                new ObjectParameter("shopinfo", shopinfo) :
                new ObjectParameter("shopinfo", typeof(string));
    
            var offpriceParameter = offprice.HasValue ?
                new ObjectParameter("offprice", offprice) :
                new ObjectParameter("offprice", typeof(decimal));
    
            var dpParameter = dp.HasValue ?
                new ObjectParameter("dp", dp) :
                new ObjectParameter("dp", typeof(decimal));
    
            var offStsParameter = offSts.HasValue ?
                new ObjectParameter("OffSts", offSts) :
                new ObjectParameter("OffSts", typeof(int));
    
            var hSNOParameter = hSNO != null ?
                new ObjectParameter("HSNO", hSNO) :
                new ObjectParameter("HSNO", typeof(string));
    
            var gSTParameter = gST.HasValue ?
                new ObjectParameter("GST", gST) :
                new ObjectParameter("GST", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Repurchaseproducts_Sp", pcodeParameter, pnameParameter, priceParameter, discAmtParameter, pvParameter, shpchrgParameter, descrParameter, rpcidParameter, attrParameter, aliasParameter, pStatusParameter, createdByParameter, sesIdParameter, shopinfoParameter, offpriceParameter, dpParameter, offStsParameter, hSNOParameter, gSTParameter);
        }
    
        public virtual int Repurchaseproducts_Update_sp(string pcode, string pname, string remarks, Nullable<int> status, Nullable<decimal> offprice, Nullable<decimal> pv, string user, string hSNO, Nullable<decimal> gST, Nullable<decimal> mRP, Nullable<decimal> pRICE)
        {
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var offpriceParameter = offprice.HasValue ?
                new ObjectParameter("offprice", offprice) :
                new ObjectParameter("offprice", typeof(decimal));
    
            var pvParameter = pv.HasValue ?
                new ObjectParameter("pv", pv) :
                new ObjectParameter("pv", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var hSNOParameter = hSNO != null ?
                new ObjectParameter("HSNO", hSNO) :
                new ObjectParameter("HSNO", typeof(string));
    
            var gSTParameter = gST.HasValue ?
                new ObjectParameter("GST", gST) :
                new ObjectParameter("GST", typeof(decimal));
    
            var mRPParameter = mRP.HasValue ?
                new ObjectParameter("MRP", mRP) :
                new ObjectParameter("MRP", typeof(decimal));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Repurchaseproducts_Update_sp", pcodeParameter, pnameParameter, remarksParameter, statusParameter, offpriceParameter, pvParameter, userParameter, hSNOParameter, gSTParameter, mRPParameter, pRICEParameter);
        }
    
        public virtual ObjectResult<string> ReqStockreturn_sp(string action, string billno, string refNo, Nullable<int> type, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, string ssid, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var ssidParameter = ssid != null ?
                new ObjectParameter("ssid", ssid) :
                new ObjectParameter("ssid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ReqStockreturn_sp", actionParameter, billnoParameter, refNoParameter, typeParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, ssidParameter, remarksParameter);
        }
    
        public virtual int RequestClose_Auto_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RequestClose_Auto_sp");
        }
    
        public virtual ObjectResult<Nullable<int>> ResetPassword_Sp(Nullable<decimal> regid, string pwd, Nullable<int> updatedBy, Nullable<int> pwdType, Nullable<int> sms, Nullable<int> changed)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var pwdTypeParameter = pwdType.HasValue ?
                new ObjectParameter("PwdType", pwdType) :
                new ObjectParameter("PwdType", typeof(int));
    
            var smsParameter = sms.HasValue ?
                new ObjectParameter("sms", sms) :
                new ObjectParameter("sms", typeof(int));
    
            var changedParameter = changed.HasValue ?
                new ObjectParameter("Changed", changed) :
                new ObjectParameter("Changed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ResetPassword_Sp", regidParameter, pwdParameter, updatedByParameter, pwdTypeParameter, smsParameter, changedParameter);
        }
    
        public virtual ObjectResult<RpcategoriesList_Sp_Result> RpcategoriesList_Sp(string action)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RpcategoriesList_Sp_Result>("RpcategoriesList_Sp", actionParameter);
        }
    
        public virtual int S_CourierNos_Sp(string action, string courier, string docno, string sesuser, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("courier", courier) :
                new ObjectParameter("courier", typeof(string));
    
            var docnoParameter = docno != null ?
                new ObjectParameter("docno", docno) :
                new ObjectParameter("docno", typeof(string));
    
            var sesuserParameter = sesuser != null ?
                new ObjectParameter("sesuser", sesuser) :
                new ObjectParameter("sesuser", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("S_CourierNos_Sp", actionParameter, courierParameter, docnoParameter, sesuserParameter, sesidParameter);
        }
    
        public virtual int SalesReport_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, string orderid, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var orderidParameter = orderid != null ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SalesReport_Sp", frmdateParameter, todateParameter, orderidParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SCOnlineInsert_Sp(string action, Nullable<int> regid, Nullable<decimal> amount, string mobile, string oRDER_ID, string paymentStatus, string billStatus, string tXNID, string billNo, string pgtype, Nullable<decimal> shpcharge, string scmemtype, string coupon)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var billStatusParameter = billStatus != null ?
                new ObjectParameter("BillStatus", billStatus) :
                new ObjectParameter("BillStatus", typeof(string));
    
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("BillNo", billNo) :
                new ObjectParameter("BillNo", typeof(string));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            var shpchargeParameter = shpcharge.HasValue ?
                new ObjectParameter("shpcharge", shpcharge) :
                new ObjectParameter("shpcharge", typeof(decimal));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            var couponParameter = coupon != null ?
                new ObjectParameter("coupon", coupon) :
                new ObjectParameter("coupon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SCOnlineInsert_Sp", actionParameter, regidParameter, amountParameter, mobileParameter, oRDER_IDParameter, paymentStatusParameter, billStatusParameter, tXNIDParameter, billNoParameter, pgtypeParameter, shpchargeParameter, scmemtypeParameter, couponParameter);
        }
    
        public virtual ObjectResult<SCOnlinepaymentFailed_Sp_Result> SCOnlinepaymentFailed_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCOnlinepaymentFailed_Sp_Result>("SCOnlinepaymentFailed_Sp", frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int SCOnlinepaymentSuccess_Sp(string searchid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, string pgtype)
        {
            var searchidParameter = searchid != null ?
                new ObjectParameter("searchid", searchid) :
                new ObjectParameter("searchid", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("pgtype", pgtype) :
                new ObjectParameter("pgtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SCOnlinepaymentSuccess_Sp", searchidParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, pgtypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SCOrder_FCP_SP(string uNQid, Nullable<decimal> regid, Nullable<decimal> downlineid, string mop, Nullable<decimal> mopamt, string fname, string lName, string mobile, string address, string city, string district, string state, string piCode, string ordertype, Nullable<decimal> shpchrg, string scmemtype, string sesid, string ipadd, string fcode)
        {
            var uNQidParameter = uNQid != null ?
                new ObjectParameter("UNQid", uNQid) :
                new ObjectParameter("UNQid", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var downlineidParameter = downlineid.HasValue ?
                new ObjectParameter("downlineid", downlineid) :
                new ObjectParameter("downlineid", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var mopamtParameter = mopamt.HasValue ?
                new ObjectParameter("mopamt", mopamt) :
                new ObjectParameter("mopamt", typeof(decimal));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var piCodeParameter = piCode != null ?
                new ObjectParameter("PiCode", piCode) :
                new ObjectParameter("PiCode", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            var fcodeParameter = fcode != null ?
                new ObjectParameter("Fcode", fcode) :
                new ObjectParameter("Fcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SCOrder_FCP_SP", uNQidParameter, regidParameter, downlineidParameter, mopParameter, mopamtParameter, fnameParameter, lNameParameter, mobileParameter, addressParameter, cityParameter, districtParameter, stateParameter, piCodeParameter, ordertypeParameter, shpchrgParameter, scmemtypeParameter, sesidParameter, ipaddParameter, fcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SCOrder_SP(string uNQid, Nullable<decimal> regid, Nullable<decimal> downlineid, string mop, Nullable<decimal> mopamt, string fname, string lName, string mobile, string address, string city, string district, string state, string piCode, string ordertype, Nullable<decimal> shpchrg, string scmemtype, string sesid, string ipadd, string coupon)
        {
            var uNQidParameter = uNQid != null ?
                new ObjectParameter("UNQid", uNQid) :
                new ObjectParameter("UNQid", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var downlineidParameter = downlineid.HasValue ?
                new ObjectParameter("downlineid", downlineid) :
                new ObjectParameter("downlineid", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var mopamtParameter = mopamt.HasValue ?
                new ObjectParameter("mopamt", mopamt) :
                new ObjectParameter("mopamt", typeof(decimal));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var piCodeParameter = piCode != null ?
                new ObjectParameter("PiCode", piCode) :
                new ObjectParameter("PiCode", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            var couponParameter = coupon != null ?
                new ObjectParameter("coupon", coupon) :
                new ObjectParameter("coupon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SCOrder_SP", uNQidParameter, regidParameter, downlineidParameter, mopParameter, mopamtParameter, fnameParameter, lNameParameter, mobileParameter, addressParameter, cityParameter, districtParameter, stateParameter, piCodeParameter, ordertypeParameter, shpchrgParameter, scmemtypeParameter, sesidParameter, ipaddParameter, couponParameter);
        }
    
        public virtual ObjectResult<string> SCOrderInvoice_SP(string reqno, string billno)
        {
            var reqnoParameter = reqno != null ?
                new ObjectParameter("Reqno", reqno) :
                new ObjectParameter("Reqno", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SCOrderInvoice_SP", reqnoParameter, billnoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SCOrderPG_SP(string uniqID, Nullable<decimal> regid, string ordertype, Nullable<decimal> shpchrg, string sesid, string ipadd, string scmemtype)
        {
            var uniqIDParameter = uniqID != null ?
                new ObjectParameter("UniqID", uniqID) :
                new ObjectParameter("UniqID", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SCOrderPG_SP", uniqIDParameter, regidParameter, ordertypeParameter, shpchrgParameter, sesidParameter, ipaddParameter, scmemtypeParameter);
        }
    
        public virtual int SCOrderPGEBSpend_SP(string uniqID, Nullable<decimal> regid, string ordertype, Nullable<decimal> shpchrg, string sesid, string ipadd, string scmemtype, ObjectParameter billnoout)
        {
            var uniqIDParameter = uniqID != null ?
                new ObjectParameter("UniqID", uniqID) :
                new ObjectParameter("UniqID", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SCOrderPGEBSpend_SP", uniqIDParameter, regidParameter, ordertypeParameter, shpchrgParameter, sesidParameter, ipaddParameter, scmemtypeParameter, billnoout);
        }
    
        public virtual int SCOrderPGpend_SP(string uniqID, Nullable<decimal> regid, string ordertype, Nullable<decimal> shpchrg, string sesid, string ipadd, string scmemtype, ObjectParameter billnoout)
        {
            var uniqIDParameter = uniqID != null ?
                new ObjectParameter("UniqID", uniqID) :
                new ObjectParameter("UniqID", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("Ordertype", ordertype) :
                new ObjectParameter("Ordertype", typeof(string));
    
            var shpchrgParameter = shpchrg.HasValue ?
                new ObjectParameter("shpchrg", shpchrg) :
                new ObjectParameter("shpchrg", typeof(decimal));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            var scmemtypeParameter = scmemtype != null ?
                new ObjectParameter("scmemtype", scmemtype) :
                new ObjectParameter("scmemtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SCOrderPGpend_SP", uniqIDParameter, regidParameter, ordertypeParameter, shpchrgParameter, sesidParameter, ipaddParameter, scmemtypeParameter, billnoout);
        }
    
        public virtual int SearchAllTables(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables", searchStrParameter);
        }
    
        public virtual ObjectResult<SearchMails_SP_Result> SearchMails_SP(string mailFrom, string mailTo)
        {
            var mailFromParameter = mailFrom != null ?
                new ObjectParameter("MailFrom", mailFrom) :
                new ObjectParameter("MailFrom", typeof(string));
    
            var mailToParameter = mailTo != null ?
                new ObjectParameter("MailTo", mailTo) :
                new ObjectParameter("MailTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMails_SP_Result>("SearchMails_SP", mailFromParameter, mailToParameter);
        }
    
        public virtual int SendEmail(string toAddress, string subject, string body, string file)
        {
            var toAddressParameter = toAddress != null ?
                new ObjectParameter("ToAddress", toAddress) :
                new ObjectParameter("ToAddress", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("file", file) :
                new ObjectParameter("file", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmail", toAddressParameter, subjectParameter, bodyParameter, fileParameter);
        }
    
        public virtual int SendSmsSql_Sp(Nullable<int> itemId, string mobileNo, string smstext, string smstype, ObjectParameter sResponse)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var smstextParameter = smstext != null ?
                new ObjectParameter("smstext", smstext) :
                new ObjectParameter("smstext", typeof(string));
    
            var smstypeParameter = smstype != null ?
                new ObjectParameter("smstype", smstype) :
                new ObjectParameter("smstype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendSmsSql_Sp", itemIdParameter, mobileNoParameter, smstextParameter, smstypeParameter, sResponse);
        }
    
        public virtual int SessionsInOut_Sp(string action, Nullable<int> uid, string sesid, string ipaddress, string systemname, string usertype)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var systemnameParameter = systemname != null ?
                new ObjectParameter("systemname", systemname) :
                new ObjectParameter("systemname", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SessionsInOut_Sp", actionParameter, uidParameter, sesidParameter, ipaddressParameter, systemnameParameter, usertypeParameter);
        }
    
        public virtual ObjectResult<SICPPayoutApprove_SP_Result> SICPPayoutApprove_SP(string action, Nullable<int> payno, Nullable<int> uid, string sessid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SICPPayoutApprove_SP_Result>("SICPPayoutApprove_SP", actionParameter, paynoParameter, uidParameter, sessidParameter);
        }
    
        public virtual ObjectResult<smslog_Sp_Result> smslog_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<smslog_Sp_Result>("smslog_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SmsLogRpt_Sp_Result> SmsLogRpt_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SmsLogRpt_Sp_Result>("SmsLogRpt_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int sp_Boostertrees(string action, string idno, Nullable<int> first, Nullable<int> end)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var firstParameter = first.HasValue ?
                new ObjectParameter("first", first) :
                new ObjectParameter("first", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Boostertrees", actionParameter, idnoParameter, firstParameter, endParameter);
        }
    
        public virtual int sp_EarlTreeUpdate(Nullable<decimal> formNoDwn, Nullable<decimal> upLnFOrmNo, Nullable<decimal> legNo)
        {
            var formNoDwnParameter = formNoDwn.HasValue ?
                new ObjectParameter("FormNoDwn", formNoDwn) :
                new ObjectParameter("FormNoDwn", typeof(decimal));
    
            var upLnFOrmNoParameter = upLnFOrmNo.HasValue ?
                new ObjectParameter("UpLnFOrmNo", upLnFOrmNo) :
                new ObjectParameter("UpLnFOrmNo", typeof(decimal));
    
            var legNoParameter = legNo.HasValue ?
                new ObjectParameter("LegNo", legNo) :
                new ObjectParameter("LegNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EarlTreeUpdate", formNoDwnParameter, upLnFOrmNoParameter, legNoParameter);
        }
    
        public virtual ObjectResult<sp_GetCURRENTPayoutMonthDetail_Result> sp_GetCURRENTPayoutMonthDetail(Nullable<int> formNo, Nullable<int> sESSID)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(int));
    
            var sESSIDParameter = sESSID.HasValue ?
                new ObjectParameter("SESSID", sESSID) :
                new ObjectParameter("SESSID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCURRENTPayoutMonthDetail_Result>("sp_GetCURRENTPayoutMonthDetail", formNoParameter, sESSIDParameter);
        }
    
        public virtual int sp_GetPayoutMonth(Nullable<int> formNo)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetPayoutMonth", formNoParameter);
        }
    
        public virtual ObjectResult<sp_GetPayoutMonthDetail_Result> sp_GetPayoutMonthDetail(Nullable<int> formNo, Nullable<int> sESSID)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(int));
    
            var sESSIDParameter = sESSID.HasValue ?
                new ObjectParameter("SESSID", sESSID) :
                new ObjectParameter("SESSID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPayoutMonthDetail_Result>("sp_GetPayoutMonthDetail", formNoParameter, sESSIDParameter);
        }
    
        public virtual int SP_SendSMS(string newmobile, string mess, ObjectParameter result)
        {
            var newmobileParameter = newmobile != null ?
                new ObjectParameter("newmobile", newmobile) :
                new ObjectParameter("newmobile", typeof(string));
    
            var messParameter = mess != null ?
                new ObjectParameter("mess", mess) :
                new ObjectParameter("mess", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SendSMS", newmobileParameter, messParameter, result);
        }
    
        public virtual int Sp_TreeShift(Nullable<decimal> formNo, Nullable<decimal> refFormNo, Nullable<decimal> refLegNo)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(decimal));
    
            var refFormNoParameter = refFormNo.HasValue ?
                new ObjectParameter("RefFormNo", refFormNo) :
                new ObjectParameter("RefFormNo", typeof(decimal));
    
            var refLegNoParameter = refLegNo.HasValue ?
                new ObjectParameter("RefLegNo", refLegNo) :
                new ObjectParameter("RefLegNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TreeShift", formNoParameter, refFormNoParameter, refLegNoParameter);
        }
    
        public virtual ObjectResult<sp_unilvltreeview_Result> sp_unilvltreeview(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_unilvltreeview_Result>("sp_unilvltreeview", uidParameter);
        }
    
        public virtual ObjectResult<sp_unilvltreeview_Old_Result> sp_unilvltreeview_Old(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_unilvltreeview_Old_Result>("sp_unilvltreeview_Old", uidParameter);
        }
    
        public virtual int sp_unitreeview(string idno, Nullable<int> first, Nullable<int> end)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var firstParameter = first.HasValue ?
                new ObjectParameter("first", first) :
                new ObjectParameter("first", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_unitreeview", idnoParameter, firstParameter, endParameter);
        }
    
        public virtual int sp_unitreeview_old(string idno, Nullable<int> first, Nullable<int> end)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var firstParameter = first.HasValue ?
                new ObjectParameter("first", first) :
                new ObjectParameter("first", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_unitreeview_old", idnoParameter, firstParameter, endParameter);
        }
    
        public virtual int sp_updt_address(string regid, string add2, string corcity, string corDistrict, string corstate, string corpin, string altmobile, string landmob, string remark)
        {
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var corcityParameter = corcity != null ?
                new ObjectParameter("Corcity", corcity) :
                new ObjectParameter("Corcity", typeof(string));
    
            var corDistrictParameter = corDistrict != null ?
                new ObjectParameter("CorDistrict", corDistrict) :
                new ObjectParameter("CorDistrict", typeof(string));
    
            var corstateParameter = corstate != null ?
                new ObjectParameter("Corstate", corstate) :
                new ObjectParameter("Corstate", typeof(string));
    
            var corpinParameter = corpin != null ?
                new ObjectParameter("Corpin", corpin) :
                new ObjectParameter("Corpin", typeof(string));
    
            var altmobileParameter = altmobile != null ?
                new ObjectParameter("altmobile", altmobile) :
                new ObjectParameter("altmobile", typeof(string));
    
            var landmobParameter = landmob != null ?
                new ObjectParameter("landmob", landmob) :
                new ObjectParameter("landmob", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updt_address", regidParameter, add2Parameter, corcityParameter, corDistrictParameter, corstateParameter, corpinParameter, altmobileParameter, landmobParameter, remarkParameter);
        }
    
        public virtual ObjectResult<SponsorReport_SP_Result> SponsorReport_SP(Nullable<decimal> regid, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SponsorReport_SP_Result>("SponsorReport_SP", regidParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<StatewiseProductTaxs_Sp_Result> StatewiseProductTaxs_Sp(string action, string pcode)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StatewiseProductTaxs_Sp_Result>("StatewiseProductTaxs_Sp", actionParameter, pcodeParameter);
        }
    
        public virtual int StkNote_Sp(string action, string orderno, string refno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var refnoParameter = refno != null ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StkNote_Sp", actionParameter, ordernoParameter, refnoParameter);
        }
    
        public virtual ObjectResult<string> StockAdjust_Sp(string refNo, string fCode, string itemCode, Nullable<int> inward, Nullable<int> outward, string remarks, string sesId)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var fCodeParameter = fCode != null ?
                new ObjectParameter("FCode", fCode) :
                new ObjectParameter("FCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var inwardParameter = inward.HasValue ?
                new ObjectParameter("Inward", inward) :
                new ObjectParameter("Inward", typeof(int));
    
            var outwardParameter = outward.HasValue ?
                new ObjectParameter("Outward", outward) :
                new ObjectParameter("Outward", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sesIdParameter = sesId != null ?
                new ObjectParameter("SesId", sesId) :
                new ObjectParameter("SesId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("StockAdjust_Sp", refNoParameter, fCodeParameter, itemCodeParameter, inwardParameter, outwardParameter, remarksParameter, sesIdParameter);
        }
    
        public virtual ObjectResult<StockAdjustRpt_Sp_Result> StockAdjustRpt_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockAdjustRpt_Sp_Result>("StockAdjustRpt_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<string> StockDispatch_Sp(string action, string fullitemcode, string idno, string courier, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("courier", courier) :
                new ObjectParameter("courier", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("StockDispatch_Sp", actionParameter, fullitemcodeParameter, idnoParameter, courierParameter, sesidParameter);
        }
    
        public virtual ObjectResult<string> StockDispatch_Sp_OLd_040716(string action, string fullitemcode, string idno, string courier, string sesid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fullitemcodeParameter = fullitemcode != null ?
                new ObjectParameter("fullitemcode", fullitemcode) :
                new ObjectParameter("fullitemcode", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var courierParameter = courier != null ?
                new ObjectParameter("courier", courier) :
                new ObjectParameter("courier", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("StockDispatch_Sp_OLd_040716", actionParameter, fullitemcodeParameter, idnoParameter, courierParameter, sesidParameter);
        }
    
        public virtual int StockDispatchItems_Sp(string refno)
        {
            var refnoParameter = refno != null ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StockDispatchItems_Sp", refnoParameter);
        }
    
        public virtual ObjectResult<StockDispatchRpt_Sp_Result> StockDispatchRpt_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize, string status, string order, string paytype)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            var paytypeParameter = paytype != null ?
                new ObjectParameter("paytype", paytype) :
                new ObjectParameter("paytype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockDispatchRpt_Sp_Result>("StockDispatchRpt_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, statusParameter, orderParameter, paytypeParameter);
        }
    
        public virtual ObjectResult<string> StockInward_Sp(string refNo, string itemCode, Nullable<int> qty, string remarks, string sesid, string packCode, string batchno, Nullable<System.DateTime> mfgdate, Nullable<System.DateTime> expdate)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var packCodeParameter = packCode != null ?
                new ObjectParameter("PackCode", packCode) :
                new ObjectParameter("PackCode", typeof(string));
    
            var batchnoParameter = batchno != null ?
                new ObjectParameter("batchno", batchno) :
                new ObjectParameter("batchno", typeof(string));
    
            var mfgdateParameter = mfgdate.HasValue ?
                new ObjectParameter("mfgdate", mfgdate) :
                new ObjectParameter("mfgdate", typeof(System.DateTime));
    
            var expdateParameter = expdate.HasValue ?
                new ObjectParameter("expdate", expdate) :
                new ObjectParameter("expdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("StockInward_Sp", refNoParameter, itemCodeParameter, qtyParameter, remarksParameter, sesidParameter, packCodeParameter, batchnoParameter, mfgdateParameter, expdateParameter);
        }
    
        public virtual ObjectResult<StockInwardRpt_Sp_Result> StockInwardRpt_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockInwardRpt_Sp_Result>("StockInwardRpt_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<StockLevelRpt_Sp_Result> StockLevelRpt_Sp(string action, string filter, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockLevelRpt_Sp_Result>("StockLevelRpt_Sp", actionParameter, filterParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<StockLogin_Sp_Result> StockLogin_Sp(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockLogin_Sp_Result>("StockLogin_Sp", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<StockOrder_SP_Result> StockOrder_SP(string action, string id, string remarks, string sessid, string uID)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockOrder_SP_Result>("StockOrder_SP", actionParameter, idParameter, remarksParameter, sessidParameter, uIDParameter);
        }
    
        public virtual ObjectResult<StockOrderReport_SP_Result> StockOrderReport_SP(string action, string id, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockOrderReport_SP_Result>("StockOrderReport_SP", actionParameter, idParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<StockOrderRpt_Sp_Result> StockOrderRpt_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockOrderRpt_Sp_Result>("StockOrderRpt_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int StockReturn_Sp(string refno, string itemCodes, string sfcpcode, string remarks, string sesid)
        {
            var refnoParameter = refno != null ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(string));
    
            var itemCodesParameter = itemCodes != null ?
                new ObjectParameter("itemCodes", itemCodes) :
                new ObjectParameter("itemCodes", typeof(string));
    
            var sfcpcodeParameter = sfcpcode != null ?
                new ObjectParameter("sfcpcode", sfcpcode) :
                new ObjectParameter("sfcpcode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StockReturn_Sp", refnoParameter, itemCodesParameter, sfcpcodeParameter, remarksParameter, sesidParameter);
        }
    
        public virtual ObjectResult<stockreturnsRpt_Sp_Result> stockreturnsRpt_Sp(string action, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<decimal> pageIndex, Nullable<decimal> pageSize, string searchid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            var searchidParameter = searchid != null ?
                new ObjectParameter("searchid", searchid) :
                new ObjectParameter("searchid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stockreturnsRpt_Sp_Result>("stockreturnsRpt_Sp", actionParameter, fromdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, searchidParameter);
        }
    
        public virtual ObjectResult<StockUsers_Sp_Result> StockUsers_Sp(string action, Nullable<int> itemid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockUsers_Sp_Result>("StockUsers_Sp", actionParameter, itemidParameter);
        }
    
        public virtual ObjectResult<StoclLevel_Sp_Result> StoclLevel_Sp(string action, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StoclLevel_Sp_Result>("StoclLevel_Sp", actionParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<StoresGlance_SP_Result> StoresGlance_SP(Nullable<System.DateTime> date, string user)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StoresGlance_SP_Result>("StoresGlance_SP", dateParameter, userParameter);
        }
    
        public virtual ObjectResult<StoresGlanceReport_SP_Result> StoresGlanceReport_SP(string action, string rpttype, Nullable<System.DateTime> ondate, string username, string sts, string searchby, Nullable<long> pageindex, Nullable<long> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var rpttypeParameter = rpttype != null ?
                new ObjectParameter("rpttype", rpttype) :
                new ObjectParameter("rpttype", typeof(string));
    
            var ondateParameter = ondate.HasValue ?
                new ObjectParameter("ondate", ondate) :
                new ObjectParameter("ondate", typeof(System.DateTime));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            var searchbyParameter = searchby != null ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(string));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StoresGlanceReport_SP_Result>("StoresGlanceReport_SP", actionParameter, rpttypeParameter, ondateParameter, usernameParameter, stsParameter, searchbyParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual int Stp_Monthly_Commission(Nullable<decimal> payno, Nullable<System.DateTime> sdate, Nullable<System.DateTime> eDate)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(decimal));
    
            var sdateParameter = sdate.HasValue ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_Monthly_Commission", paynoParameter, sdateParameter, eDateParameter);
        }
    
        public virtual ObjectResult<Stp_RaiseManual_Invoice_Result> Stp_RaiseManual_Invoice(string oRDER_ID, string trasactionID)
        {
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            var trasactionIDParameter = trasactionID != null ?
                new ObjectParameter("TrasactionID", trasactionID) :
                new ObjectParameter("TrasactionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_RaiseManual_Invoice_Result>("Stp_RaiseManual_Invoice", oRDER_IDParameter, trasactionIDParameter);
        }
    
        public virtual int Stp_SarsoBiz_BinProcess(Nullable<decimal> payNo, Nullable<System.DateTime> schFrom, Nullable<System.DateTime> schTo)
        {
            var payNoParameter = payNo.HasValue ?
                new ObjectParameter("PayNo", payNo) :
                new ObjectParameter("PayNo", typeof(decimal));
    
            var schFromParameter = schFrom.HasValue ?
                new ObjectParameter("SchFrom", schFrom) :
                new ObjectParameter("SchFrom", typeof(System.DateTime));
    
            var schToParameter = schTo.HasValue ?
                new ObjectParameter("SchTo", schTo) :
                new ObjectParameter("SchTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SarsoBiz_BinProcess", payNoParameter, schFromParameter, schToParameter);
        }
    
        public virtual int Stp_SBo_RankCalc(Nullable<int> payno, Nullable<System.DateTime> schFrom, Nullable<System.DateTime> schTo)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("Payno", payno) :
                new ObjectParameter("Payno", typeof(int));
    
            var schFromParameter = schFrom.HasValue ?
                new ObjectParameter("SchFrom", schFrom) :
                new ObjectParameter("SchFrom", typeof(System.DateTime));
    
            var schToParameter = schTo.HasValue ?
                new ObjectParameter("SchTo", schTo) :
                new ObjectParameter("SchTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SBo_RankCalc", paynoParameter, schFromParameter, schToParameter);
        }
    
        public virtual int Stp_SICP_GetLatestRank(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SICP_GetLatestRank", regidParameter);
        }
    
        public virtual int Stp_SICP_GetLoyalPerkRanks(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SICP_GetLoyalPerkRanks", regidParameter);
        }
    
        public virtual ObjectResult<Stp_SICP_PayoutProcess_Result> Stp_SICP_PayoutProcess(string action, Nullable<int> uid, string sessid, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_SICP_PayoutProcess_Result>("Stp_SICP_PayoutProcess", actionParameter, uidParameter, sessidParameter, remarksParameter);
        }
    
        public virtual int Stp_SICPPayout_RollBack(Nullable<int> payno, Nullable<int> uid, string sessid, string remarks)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SICPPayout_RollBack", paynoParameter, uidParameter, sessidParameter, remarksParameter);
        }
    
        public virtual int Stp_SpChng_levelIDs_gen(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SpChng_levelIDs_gen", regidParameter);
        }
    
        public virtual int Stp_SSMP_Baleno_RewardCalc(Nullable<System.DateTime> rwdDate)
        {
            var rwdDateParameter = rwdDate.HasValue ?
                new ObjectParameter("RwdDate", rwdDate) :
                new ObjectParameter("RwdDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SSMP_Baleno_RewardCalc", rwdDateParameter);
        }
    
        public virtual int Stp_SSMP_halfYearRepIDs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SSMP_halfYearRepIDs");
        }
    
        public virtual ObjectResult<Stp_SSMP_PayoutProcess_Result> Stp_SSMP_PayoutProcess(string action, Nullable<int> uid, string sessid, string remarks, Nullable<int> startPayno)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var startPaynoParameter = startPayno.HasValue ?
                new ObjectParameter("StartPayno", startPayno) :
                new ObjectParameter("StartPayno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_SSMP_PayoutProcess_Result>("Stp_SSMP_PayoutProcess", actionParameter, uidParameter, sessidParameter, remarksParameter, startPaynoParameter);
        }
    
        public virtual ObjectResult<Stp_SSMP_RewardID_details_Result> Stp_SSMP_RewardID_details(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_SSMP_RewardID_details_Result>("Stp_SSMP_RewardID_details", regidParameter);
        }
    
        public virtual int Stp_SSMPPayout_RollBack(Nullable<int> payno, Nullable<int> uid, string sessid, string remarks)
        {
            var paynoParameter = payno.HasValue ?
                new ObjectParameter("payno", payno) :
                new ObjectParameter("payno", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("Sessid", sessid) :
                new ObjectParameter("Sessid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Stp_SSMPPayout_RollBack", paynoParameter, uidParameter, sessidParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Stp_YearMonthDayBillCount_Result> Stp_YearMonthDayBillCount(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_YearMonthDayBillCount_Result>("Stp_YearMonthDayBillCount", yearParameter);
        }
    
        public virtual ObjectResult<Stp_YearMonthDayPGCount_Result> Stp_YearMonthDayPGCount(string year, string pgtype)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var pgtypeParameter = pgtype != null ?
                new ObjectParameter("Pgtype", pgtype) :
                new ObjectParameter("Pgtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_YearMonthDayPGCount_Result>("Stp_YearMonthDayPGCount", yearParameter, pgtypeParameter);
        }
    
        public virtual ObjectResult<Stp_YearMonthDayRegCount_Result> Stp_YearMonthDayRegCount(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stp_YearMonthDayRegCount_Result>("Stp_YearMonthDayRegCount", yearParameter);
        }
    
        public virtual int sublinks_Sp(Nullable<int> lid, Nullable<int> uid, string usertype)
        {
            var lidParameter = lid.HasValue ?
                new ObjectParameter("Lid", lid) :
                new ObjectParameter("Lid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(int));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sublinks_Sp", lidParameter, uidParameter, usertypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SublinksPermissions_SP(string lids, Nullable<int> itemid, Nullable<int> uid, string sesid, string usertype)
        {
            var lidsParameter = lids != null ?
                new ObjectParameter("lids", lids) :
                new ObjectParameter("lids", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SublinksPermissions_SP", lidsParameter, itemidParameter, uidParameter, sesidParameter, usertypeParameter);
        }
    
        public virtual ObjectResult<TempCart_SP_Result> TempCart_SP(string action, string uNQId, string pcode, string itemCode, string attribute, Nullable<int> qty)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var attributeParameter = attribute != null ?
                new ObjectParameter("Attribute", attribute) :
                new ObjectParameter("Attribute", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempCart_SP_Result>("TempCart_SP", actionParameter, uNQIdParameter, pcodeParameter, itemCodeParameter, attributeParameter, qtyParameter);
        }
    
        public virtual ObjectResult<tempInvOfferPrds_sp_Result> tempInvOfferPrds_sp(string action, Nullable<int> sno, Nullable<int> pcode, string itemcode, string sesid, string uqid, Nullable<int> regid, string attrname)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var pcodeParameter = pcode.HasValue ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(int));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var uqidParameter = uqid != null ?
                new ObjectParameter("uqid", uqid) :
                new ObjectParameter("uqid", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var attrnameParameter = attrname != null ?
                new ObjectParameter("Attrname", attrname) :
                new ObjectParameter("Attrname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tempInvOfferPrds_sp_Result>("tempInvOfferPrds_sp", actionParameter, snoParameter, pcodeParameter, itemcodeParameter, sesidParameter, uqidParameter, regidParameter, attrnameParameter);
        }
    
        public virtual ObjectResult<TempMemberDetailes_Sp_Result> TempMemberDetailes_Sp(Nullable<decimal> regid)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempMemberDetailes_Sp_Result>("TempMemberDetailes_Sp", regidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TempOrder_SP(string uNQid, Nullable<decimal> regid, Nullable<decimal> downlineid, string mop, Nullable<decimal> mopamt, string fname, string lName, string mobile, string address, string city, string district, string state, string piCode)
        {
            var uNQidParameter = uNQid != null ?
                new ObjectParameter("UNQid", uNQid) :
                new ObjectParameter("UNQid", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var downlineidParameter = downlineid.HasValue ?
                new ObjectParameter("downlineid", downlineid) :
                new ObjectParameter("downlineid", typeof(decimal));
    
            var mopParameter = mop != null ?
                new ObjectParameter("mop", mop) :
                new ObjectParameter("mop", typeof(string));
    
            var mopamtParameter = mopamt.HasValue ?
                new ObjectParameter("mopamt", mopamt) :
                new ObjectParameter("mopamt", typeof(decimal));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var piCodeParameter = piCode != null ?
                new ObjectParameter("PiCode", piCode) :
                new ObjectParameter("PiCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TempOrder_SP", uNQidParameter, regidParameter, downlineidParameter, mopParameter, mopamtParameter, fnameParameter, lNameParameter, mobileParameter, addressParameter, cityParameter, districtParameter, stateParameter, piCodeParameter);
        }
    
        public virtual ObjectResult<TempRepOrder_FCP_SP_Result> TempRepOrder_FCP_SP(string action, string uNQId, string pcode, string itemCode, string attribute, Nullable<int> qty, string item, string fcode)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var attributeParameter = attribute != null ?
                new ObjectParameter("Attribute", attribute) :
                new ObjectParameter("Attribute", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var fcodeParameter = fcode != null ?
                new ObjectParameter("Fcode", fcode) :
                new ObjectParameter("Fcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempRepOrder_FCP_SP_Result>("TempRepOrder_FCP_SP", actionParameter, uNQIdParameter, pcodeParameter, itemCodeParameter, attributeParameter, qtyParameter, itemParameter, fcodeParameter);
        }
    
        public virtual ObjectResult<TempStockOrder_FCP_SP_Result> TempStockOrder_FCP_SP(string action, string uNQId, string pcode, string itemCode, string attribute, Nullable<int> qty, string item)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var uNQIdParameter = uNQId != null ?
                new ObjectParameter("UNQId", uNQId) :
                new ObjectParameter("UNQId", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var attributeParameter = attribute != null ?
                new ObjectParameter("Attribute", attribute) :
                new ObjectParameter("Attribute", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempStockOrder_FCP_SP_Result>("TempStockOrder_FCP_SP", actionParameter, uNQIdParameter, pcodeParameter, itemCodeParameter, attributeParameter, qtyParameter, itemParameter);
        }
    
        public virtual ObjectResult<TmpPackageItems_Sp_Result> TmpPackageItems_Sp(string action, string randomno, string itemCode, Nullable<int> qty, Nullable<decimal> price, Nullable<decimal> rpcid, string pcode, string type, Nullable<decimal> cv, Nullable<decimal> gSTPrice)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var randomnoParameter = randomno != null ?
                new ObjectParameter("randomno", randomno) :
                new ObjectParameter("randomno", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("itemCode", itemCode) :
                new ObjectParameter("itemCode", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var rpcidParameter = rpcid.HasValue ?
                new ObjectParameter("rpcid", rpcid) :
                new ObjectParameter("rpcid", typeof(decimal));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("pcode", pcode) :
                new ObjectParameter("pcode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var cvParameter = cv.HasValue ?
                new ObjectParameter("cv", cv) :
                new ObjectParameter("cv", typeof(decimal));
    
            var gSTPriceParameter = gSTPrice.HasValue ?
                new ObjectParameter("GSTPrice", gSTPrice) :
                new ObjectParameter("GSTPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TmpPackageItems_Sp_Result>("TmpPackageItems_Sp", actionParameter, randomnoParameter, itemCodeParameter, qtyParameter, priceParameter, rpcidParameter, pcodeParameter, typeParameter, cvParameter, gSTPriceParameter);
        }
    
        public virtual ObjectResult<UnilevelPrintView_Sp_Result> UnilevelPrintView_Sp(string action, string regid, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageindex, Nullable<int> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid != null ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(string));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnilevelPrintView_Sp_Result>("UnilevelPrintView_Sp", actionParameter, regidParameter, frmdateParameter, todateParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual int UnilevelTreeDet_Sp(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnilevelTreeDet_Sp", idnoParameter);
        }
    
        public virtual int UnilevelTreeDet_Sp_old(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnilevelTreeDet_Sp_old", idnoParameter);
        }
    
        public virtual int UnilevelTreeIDDet_Sp(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnilevelTreeIDDet_Sp", uidParameter);
        }
    
        public virtual int UnilevelTreeIDDet_Sp_old(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnilevelTreeIDDet_Sp_old", uidParameter);
        }
    
        public virtual int UpdateDockDet_Sp(string invoiceNos)
        {
            var invoiceNosParameter = invoiceNos != null ?
                new ObjectParameter("invoiceNos", invoiceNos) :
                new ObjectParameter("invoiceNos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDockDet_Sp", invoiceNosParameter);
        }
    
        public virtual ObjectResult<string> UpdateDuplicateIdsRpt_SP(Nullable<int> regid, string remarks, string uid, string sesid, string ipaddress)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateDuplicateIdsRpt_SP", regidParameter, remarksParameter, uidParameter, sesidParameter, ipaddressParameter);
        }
    
        public virtual ObjectResult<UpdateMemberProfile_Sp_Result> UpdateMemberProfile_Sp(Nullable<decimal> regid, string fname, string lname, string maidenname, string dob, string sex, string add1, string add2, string city, string district, string state, Nullable<int> pin, string mobile, string eMail, string payeename, string panno, string bank, string branch, string accno, string ifscode, string nominee, string relation, string nomineedob, string user, string sessid, string ipaddress, string corcity, string cordistrict, string corstate, Nullable<int> corpin, string gSTNO)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var maidennameParameter = maidenname != null ?
                new ObjectParameter("maidenname", maidenname) :
                new ObjectParameter("maidenname", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var add1Parameter = add1 != null ?
                new ObjectParameter("add1", add1) :
                new ObjectParameter("add1", typeof(string));
    
            var add2Parameter = add2 != null ?
                new ObjectParameter("add2", add2) :
                new ObjectParameter("add2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("eMail", eMail) :
                new ObjectParameter("eMail", typeof(string));
    
            var payeenameParameter = payeename != null ?
                new ObjectParameter("payeename", payeename) :
                new ObjectParameter("payeename", typeof(string));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var accnoParameter = accno != null ?
                new ObjectParameter("accno", accno) :
                new ObjectParameter("accno", typeof(string));
    
            var ifscodeParameter = ifscode != null ?
                new ObjectParameter("ifscode", ifscode) :
                new ObjectParameter("ifscode", typeof(string));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("nominee", nominee) :
                new ObjectParameter("nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("relation", relation) :
                new ObjectParameter("relation", typeof(string));
    
            var nomineedobParameter = nomineedob != null ?
                new ObjectParameter("nomineedob", nomineedob) :
                new ObjectParameter("nomineedob", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var sessidParameter = sessid != null ?
                new ObjectParameter("sessid", sessid) :
                new ObjectParameter("sessid", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var corcityParameter = corcity != null ?
                new ObjectParameter("corcity", corcity) :
                new ObjectParameter("corcity", typeof(string));
    
            var cordistrictParameter = cordistrict != null ?
                new ObjectParameter("cordistrict", cordistrict) :
                new ObjectParameter("cordistrict", typeof(string));
    
            var corstateParameter = corstate != null ?
                new ObjectParameter("corstate", corstate) :
                new ObjectParameter("corstate", typeof(string));
    
            var corpinParameter = corpin.HasValue ?
                new ObjectParameter("corpin", corpin) :
                new ObjectParameter("corpin", typeof(int));
    
            var gSTNOParameter = gSTNO != null ?
                new ObjectParameter("GSTNO", gSTNO) :
                new ObjectParameter("GSTNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateMemberProfile_Sp_Result>("UpdateMemberProfile_Sp", regidParameter, fnameParameter, lnameParameter, maidennameParameter, dobParameter, sexParameter, add1Parameter, add2Parameter, cityParameter, districtParameter, stateParameter, pinParameter, mobileParameter, eMailParameter, payeenameParameter, pannoParameter, bankParameter, branchParameter, accnoParameter, ifscodeParameter, nomineeParameter, relationParameter, nomineedobParameter, userParameter, sessidParameter, ipaddressParameter, corcityParameter, cordistrictParameter, corstateParameter, corpinParameter, gSTNOParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Updaterpcategories_SP(string category, string subcategory, string subcategoryone, Nullable<int> cstatus, Nullable<int> sid)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var subcategoryParameter = subcategory != null ?
                new ObjectParameter("subcategory", subcategory) :
                new ObjectParameter("subcategory", typeof(string));
    
            var subcategoryoneParameter = subcategoryone != null ?
                new ObjectParameter("subcategoryone", subcategoryone) :
                new ObjectParameter("subcategoryone", typeof(string));
    
            var cstatusParameter = cstatus.HasValue ?
                new ObjectParameter("cstatus", cstatus) :
                new ObjectParameter("cstatus", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Updaterpcategories_SP", categoryParameter, subcategoryParameter, subcategoryoneParameter, cstatusParameter, sidParameter);
        }
    
        public virtual int UpdateSCEBS(string tXNID, string billnoout, string oRDER_ID)
        {
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var billnooutParameter = billnoout != null ?
                new ObjectParameter("billnoout", billnoout) :
                new ObjectParameter("billnoout", typeof(string));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSCEBS", tXNIDParameter, billnooutParameter, oRDER_IDParameter);
        }
    
        public virtual int UpdateSCEBSfailed(string tXNID, string respMsg, string oRDER_ID)
        {
            var tXNIDParameter = tXNID != null ?
                new ObjectParameter("TXNID", tXNID) :
                new ObjectParameter("TXNID", typeof(string));
    
            var respMsgParameter = respMsg != null ?
                new ObjectParameter("RespMsg", respMsg) :
                new ObjectParameter("RespMsg", typeof(string));
    
            var oRDER_IDParameter = oRDER_ID != null ?
                new ObjectParameter("ORDER_ID", oRDER_ID) :
                new ObjectParameter("ORDER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSCEBSfailed", tXNIDParameter, respMsgParameter, oRDER_IDParameter);
        }
    
        public virtual int UpdateStatistics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStatistics");
        }
    
        public virtual ObjectResult<string> UploadCustomerOrder_sp(string action, Nullable<decimal> regid, string proofType, string orderNo, string orderPhoto, string bank, string accno, string branch, string ifscode, string chqimg, string sesid, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var proofTypeParameter = proofType != null ?
                new ObjectParameter("ProofType", proofType) :
                new ObjectParameter("ProofType", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var orderPhotoParameter = orderPhoto != null ?
                new ObjectParameter("OrderPhoto", orderPhoto) :
                new ObjectParameter("OrderPhoto", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var accnoParameter = accno != null ?
                new ObjectParameter("accno", accno) :
                new ObjectParameter("accno", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var ifscodeParameter = ifscode != null ?
                new ObjectParameter("ifscode", ifscode) :
                new ObjectParameter("ifscode", typeof(string));
    
            var chqimgParameter = chqimg != null ?
                new ObjectParameter("chqimg", chqimg) :
                new ObjectParameter("chqimg", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UploadCustomerOrder_sp", actionParameter, regidParameter, proofTypeParameter, orderNoParameter, orderPhotoParameter, bankParameter, accnoParameter, branchParameter, ifscodeParameter, chqimgParameter, sesidParameter, remarksParameter);
        }
    
        public virtual ObjectResult<string> UploadKYC_Sp(Nullable<decimal> regid, string proofType, string panno, string panimg, string bank, string branch, string accno, string ifscode, string chqimg, string sesid, string remarks, string moduleType)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var proofTypeParameter = proofType != null ?
                new ObjectParameter("ProofType", proofType) :
                new ObjectParameter("ProofType", typeof(string));
    
            var pannoParameter = panno != null ?
                new ObjectParameter("panno", panno) :
                new ObjectParameter("panno", typeof(string));
    
            var panimgParameter = panimg != null ?
                new ObjectParameter("panimg", panimg) :
                new ObjectParameter("panimg", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var accnoParameter = accno != null ?
                new ObjectParameter("accno", accno) :
                new ObjectParameter("accno", typeof(string));
    
            var ifscodeParameter = ifscode != null ?
                new ObjectParameter("ifscode", ifscode) :
                new ObjectParameter("ifscode", typeof(string));
    
            var chqimgParameter = chqimg != null ?
                new ObjectParameter("chqimg", chqimg) :
                new ObjectParameter("chqimg", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UploadKYC_Sp", regidParameter, proofTypeParameter, pannoParameter, panimgParameter, bankParameter, branchParameter, accnoParameter, ifscodeParameter, chqimgParameter, sesidParameter, remarksParameter, moduleTypeParameter);
        }
    
        public virtual ObjectResult<string> UploadMemberIHO_sp(string action, Nullable<int> sno, Nullable<decimal> regid, string proofType, string iHOPhoto, Nullable<int> apprej, string sesid, Nullable<int> apprejby, string appRejRemarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("Regid", regid) :
                new ObjectParameter("Regid", typeof(decimal));
    
            var proofTypeParameter = proofType != null ?
                new ObjectParameter("ProofType", proofType) :
                new ObjectParameter("ProofType", typeof(string));
    
            var iHOPhotoParameter = iHOPhoto != null ?
                new ObjectParameter("IHOPhoto", iHOPhoto) :
                new ObjectParameter("IHOPhoto", typeof(string));
    
            var apprejParameter = apprej.HasValue ?
                new ObjectParameter("apprej", apprej) :
                new ObjectParameter("apprej", typeof(int));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            var apprejbyParameter = apprejby.HasValue ?
                new ObjectParameter("apprejby", apprejby) :
                new ObjectParameter("apprejby", typeof(int));
    
            var appRejRemarksParameter = appRejRemarks != null ?
                new ObjectParameter("AppRejRemarks", appRejRemarks) :
                new ObjectParameter("AppRejRemarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UploadMemberIHO_sp", actionParameter, snoParameter, regidParameter, proofTypeParameter, iHOPhotoParameter, apprejParameter, sesidParameter, apprejbyParameter, appRejRemarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UploadMemPhoto_SP(Nullable<decimal> regid, string image)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UploadMemPhoto_SP", regidParameter, imageParameter);
        }
    
        public virtual ObjectResult<UsedCouponsRpt_SP_Result> UsedCouponsRpt_SP(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<decimal> regid, Nullable<long> pageIndex, Nullable<long> pagesize)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("Frmdate", frmdate) :
                new ObjectParameter("Frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(long));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsedCouponsRpt_SP_Result>("UsedCouponsRpt_SP", frmdateParameter, todateParameter, regidParameter, pageIndexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<Users_Sp_Result> Users_Sp(string action, Nullable<int> itemid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_Sp_Result>("Users_Sp", actionParameter, itemidParameter);
        }
    
        public virtual int UsersLogRpt_Sp(Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> user, Nullable<int> pageIndex, Nullable<int> pageSize, string usertype)
        {
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("Frmdate", frmdate) :
                new ObjectParameter("Frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsersLogRpt_Sp", frmdateParameter, todateParameter, userParameter, pageIndexParameter, pageSizeParameter, usertypeParameter);
        }
    
        public virtual int usp_Sarso_GVDRegPaymentCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Sarso_GVDRegPaymentCheck");
        }
    
        public virtual int usp_Sarso_GVDRepPaymentCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Sarso_GVDRepPaymentCheck");
        }
    
        public virtual int usp_Sarso_PaymentCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Sarso_PaymentCheck");
        }
    
        public virtual int usp_Sarso_PaymentCheck_EBS_Old_DuplicateOfPAYTM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Sarso_PaymentCheck_EBS_Old_DuplicateOfPAYTM");
        }
    
        public virtual int VATCSTReport_Sp(string action, string idno, string billno, Nullable<int> status, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<int> month, Nullable<int> year, Nullable<int> month1, Nullable<int> year1, string state)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var month1Parameter = month1.HasValue ?
                new ObjectParameter("month1", month1) :
                new ObjectParameter("month1", typeof(int));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VATCSTReport_Sp", actionParameter, idnoParameter, billnoParameter, statusParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, monthParameter, yearParameter, month1Parameter, year1Parameter, stateParameter);
        }
    
        public virtual ObjectResult<string> WCF_CheckLogin_SP(string lOGINID, string pASSWORD, ObjectParameter res)
        {
            var lOGINIDParameter = lOGINID != null ?
                new ObjectParameter("LOGINID", lOGINID) :
                new ObjectParameter("LOGINID", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("WCF_CheckLogin_SP", lOGINIDParameter, pASSWORDParameter, res);
        }
    
        public virtual ObjectResult<WithdrawlBatchExcel_Sp_Result> WithdrawlBatchExcel_Sp(string wdno)
        {
            var wdnoParameter = wdno != null ?
                new ObjectParameter("wdno", wdno) :
                new ObjectParameter("wdno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WithdrawlBatchExcel_Sp_Result>("WithdrawlBatchExcel_Sp", wdnoParameter);
        }
    
        public virtual int WithdrawlBatchRpt_Sp(string action, Nullable<int> pageindex, Nullable<int> pagesize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WithdrawlBatchRpt_Sp", actionParameter, pageindexParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<string> WithdrawlPendingReq_Sp(string reqids, string sesid)
        {
            var reqidsParameter = reqids != null ?
                new ObjectParameter("reqids", reqids) :
                new ObjectParameter("reqids", typeof(string));
    
            var sesidParameter = sesid != null ?
                new ObjectParameter("sesid", sesid) :
                new ObjectParameter("sesid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("WithdrawlPendingReq_Sp", reqidsParameter, sesidParameter);
        }
    
        public virtual int WithdrawlPendingReqRpt_Sp(string action, Nullable<decimal> pageIndex, Nullable<decimal> pageSize)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WithdrawlPendingReqRpt_Sp", actionParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Z_Get_Bills_Result> Z_Get_Bills(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Z_Get_Bills_Result>("Z_Get_Bills", idnoParameter);
        }
    
        public virtual ObjectResult<Z_Get_members_Result> Z_Get_members(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Z_Get_members_Result>("Z_Get_members", idnoParameter);
        }
    
        public virtual ObjectResult<Z_Get_SSMPIncomes_Result> Z_Get_SSMPIncomes(string idno)
        {
            var idnoParameter = idno != null ?
                new ObjectParameter("Idno", idno) :
                new ObjectParameter("Idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Z_Get_SSMPIncomes_Result>("Z_Get_SSMPIncomes", idnoParameter);
        }
    
        public virtual ObjectResult<DistCancellation_sp_Result> DistCancellation_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistCancellation_sp_Result>("DistCancellation_sp");
        }
    
        public virtual ObjectResult<string> ReqStockreturn_sp1(string action, string billno, string refNo, Nullable<int> type, Nullable<System.DateTime> frmdate, Nullable<System.DateTime> todate, Nullable<int> pageIndex, Nullable<int> pageSize, string ssid, string remarks)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var billnoParameter = billno != null ?
                new ObjectParameter("billno", billno) :
                new ObjectParameter("billno", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var frmdateParameter = frmdate.HasValue ?
                new ObjectParameter("frmdate", frmdate) :
                new ObjectParameter("frmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var ssidParameter = ssid != null ?
                new ObjectParameter("ssid", ssid) :
                new ObjectParameter("ssid", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ReqStockreturn_sp1", actionParameter, billnoParameter, refNoParameter, typeParameter, frmdateParameter, todateParameter, pageIndexParameter, pageSizeParameter, ssidParameter, remarksParameter);
        }
    }
}
